<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="de72aadb-32ea-427e-8e6d-cf8a38602c0a" name="Nghia@LAPTOP-A3HHO4HD 2022-04-12 14:28:15" runUser="LAPTOP-A3HHO4HD\Nghia" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="a8e0cb6a-baa9-45ff-8db4-a9edfcb72e0f">
    <Description>These are default test settings for a local test run.</Description>
    <Execution hostProcessPlatform="MSIL">
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="Nghia_LAPTOP-A3HHO4HD 2022-04-12 14_28_15" />
    <Properties>
      <Property name="TestSettingsUIType" value="LoadTest" />
    </Properties>
  </TestSettings>
  <Times creation="2022-04-12T14:28:15.2139287+07:00" queuing="2022-04-12T14:28:15.5186828+07:00" start="2022-04-12T14:28:15.6018213+07:00" finish="2022-04-12T14:28:27.9829151+07:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest1" storage="c:\users\nghia\source\repos\webandloadtestproject2\webandloadtestproject2\webtest1.webtest" id="45ec0b37-3143-408e-ad12-fb1bc9039d31" persistedWebTest="">
      <Execution id="ed51f27a-f4c2-4fb3-bf19-89ec316d4797" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="45ec0b37-3143-408e-ad12-fb1bc9039d31" executionId="ed51f27a-f4c2-4fb3-bf19-89ec316d4797" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="ed51f27a-f4c2-4fb3-bf19-89ec316d4797" testId="45ec0b37-3143-408e-ad12-fb1bc9039d31" testName="WebTest1" computerName="LAPTOP-A3HHO4HD" duration="00:00:01.5606337" startTime="2022-04-12T14:28:15.7524627+07:00" endTime="2022-04-12T14:28:27.9579474+07:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ed51f27a-f4c2-4fb3-bf19-89ec316d4797">
      <Output>
        <ErrorInfo>
          <Message>2 primary requests, 0 dependant requests and 0 conditional rules failed</Message>
        </ErrorInfo>
      </Output>
      <ResultFiles>
        <ResultFile path="WebTest1.webtestResult" />
      </ResultFiles>
      <TestSettings name="Local" id="a8e0cb6a-baa9-45ff-8db4-a9edfcb72e0f">
        <Description>These are default test settings for a local test run.</Description>
        <Execution hostProcessPlatform="MSIL">
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="Nghia_LAPTOP-A3HHO4HD 2022-04-12 14_28_15" />
        <Properties>
          <Property name="TestSettingsUIType" value="LoadTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>Nghia_LAPTOP-A3HHO4HD 2022-04-12 14_28_15\In\ed51f27a-f4c2-4fb3-bf19-89ec316d4797\WebTest1.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>