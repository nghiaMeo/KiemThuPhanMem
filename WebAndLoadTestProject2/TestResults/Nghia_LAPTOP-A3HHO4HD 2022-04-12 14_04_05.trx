<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="b36a0bc4-fd7f-4963-bc7f-3ab2fc567acc" name="Nghia@LAPTOP-A3HHO4HD 2022-04-12 14:04:05" runUser="LAPTOP-A3HHO4HD\Nghia" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="a8e0cb6a-baa9-45ff-8db4-a9edfcb72e0f">
    <Description>These are default test settings for a local test run.</Description>
    <Execution hostProcessPlatform="MSIL">
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="Nghia_LAPTOP-A3HHO4HD 2022-04-12 14_04_05" />
    <Properties>
      <Property name="TestSettingsUIType" value="LoadTest" />
    </Properties>
  </TestSettings>
  <Times creation="2022-04-12T14:04:05.9042604+07:00" queuing="2022-04-12T14:04:06.2051712+07:00" start="2022-04-12T14:04:06.2899498+07:00" finish="2022-04-12T14:04:20.6695725+07:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest1" storage="c:\users\nghia\source\repos\webandloadtestproject2\webandloadtestproject2\webtest1.webtest" id="9e71bc35-ef76-4a1e-ab7a-3e36fe3a2897" persistedWebTest="">
      <Execution id="d941a8d2-0da6-4594-9314-9bd9e0cf658e" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="9e71bc35-ef76-4a1e-ab7a-3e36fe3a2897" executionId="d941a8d2-0da6-4594-9314-9bd9e0cf658e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="d941a8d2-0da6-4594-9314-9bd9e0cf658e" testId="9e71bc35-ef76-4a1e-ab7a-3e36fe3a2897" testName="WebTest1" computerName="LAPTOP-A3HHO4HD" duration="00:00:03.5438183" startTime="2022-04-12T14:04:06.4488595+07:00" endTime="2022-04-12T14:04:20.6409191+07:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d941a8d2-0da6-4594-9314-9bd9e0cf658e">
      <Output>
        <ErrorInfo>
          <Message>2 primary requests, 0 dependant requests and 0 conditional rules failed</Message>
        </ErrorInfo>
      </Output>
      <ResultFiles>
        <ResultFile path="WebTest1.webtestResult" />
      </ResultFiles>
      <TestSettings name="Local" id="a8e0cb6a-baa9-45ff-8db4-a9edfcb72e0f">
        <Description>These are default test settings for a local test run.</Description>
        <Execution hostProcessPlatform="MSIL">
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="Nghia_LAPTOP-A3HHO4HD 2022-04-12 14_04_05" />
        <Properties>
          <Property name="TestSettingsUIType" value="LoadTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>Nghia_LAPTOP-A3HHO4HD 2022-04-12 14_04_05\In\d941a8d2-0da6-4594-9314-9bd9e0cf658e\WebTest1.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>