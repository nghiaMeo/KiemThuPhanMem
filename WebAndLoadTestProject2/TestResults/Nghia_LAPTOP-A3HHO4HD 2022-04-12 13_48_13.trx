<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="67abae9b-68fe-40ab-9c3b-8e29201573de" name="Nghia@LAPTOP-A3HHO4HD 2022-04-12 13:48:13" runUser="LAPTOP-A3HHO4HD\Nghia" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="a8e0cb6a-baa9-45ff-8db4-a9edfcb72e0f">
    <Description>These are default test settings for a local test run.</Description>
    <Execution hostProcessPlatform="MSIL">
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="Nghia_LAPTOP-A3HHO4HD 2022-04-12 13_48_13" />
    <Properties>
      <Property name="TestSettingsUIType" value="LoadTest" />
    </Properties>
  </TestSettings>
  <Times creation="2022-04-12T13:48:13.6923893+07:00" queuing="2022-04-12T13:48:13.9669819+07:00" start="2022-04-12T13:48:14.0507624+07:00" finish="2022-04-12T13:48:57.7803768+07:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest1" storage="c:\users\nghia\source\repos\webandloadtestproject2\webandloadtestproject2\webtest1.webtest" id="3f720212-d7d8-4838-8a95-c7bdc4cbb1ef" persistedWebTest="﻿<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<WebTest Name="WebTest1" Id="3f720212-d7d8-4838-8a95-c7bdc4cbb1ef" Owner="" Priority="2147483647" Enabled="True" CssProjectStructure="" CssIteration="" Timeout="0" WorkItemIds="" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010" Description="" CredentialUserName="" CredentialPassword="" PreAuthenticate="True" Proxy="default" StopOnError="False" RecordedResultFile="WebTest1.7f6ac0c8-4374-42d7-b866-e9b33ab47335.rec.webtestresult" ResultsLocale="">
  <Items>
    <Request Method="GET" Guid="21e4f344-19c6-4f48-89dd-36c24b26192a" Version="1.1" Url="https://api.bing.com/qsml.aspx" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False" />
    <Request Method="GET" Guid="b6248bc2-ef09-42bc-ae82-8eb4025b2ba5" Version="1.1" Url="https://api.bing.com/qsml.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam5.zch" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ing=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; ?&gt;&lt;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam34.zch" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="ing=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; ?&gt;&lt;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="query" Value="thon" RecordedValue="thon" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="market" Value="en-US" RecordedValue="en-US" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="maxwidth" Value="32765" RecordedValue="32765" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="rowheight" Value="31" RecordedValue="31" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="sectionHeight" Value="248" RecordedValue="248" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="FORM" Value="IESS4A" RecordedValue="IESS4A" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="pc" Value="EUPP_UE04" RecordedValue="EUPP_UE04" CorrelationBinding="" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="a7aaf6a2-1fb6-4da4-90d7-c4dede507aef" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="POST" Guid="86d57c06-aaf9-4fac-9d52-a89ab1bb2857" Version="1.1" Url="https://za.zalo.me/v3/w/t" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="http://thongtindaotao.sgu.edu.vn/" />
          </Headers>
          <FormPostHttpBody>
            <FormPostParameter Name="zl" Value="http://thongtindaotao.sgu.edu.vn/" RecordedValue="http://thongtindaotao.sgu.edu.vn/" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="zrf" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="zch" Value="utf-8" RecordedValue="utf-8" CorrelationBinding="{{FormPostParam5.zch}}" UrlEncode="True" />
            <FormPostParameter Name="zts" Value="1649745950102" RecordedValue="1649745950102" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="zos" Value="Windows" RecordedValue="Windows" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="zla" Value="en-US," RecordedValue="en-US," CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="__zi" Value="2000.SSZzejyD2za-nEkXtmqOqsd6lx-H0m2HDTIreOD14eSds-kgYmHSZYVMxAU00XMA8j6feO8258uXrAcW.1" RecordedValue="2000.SSZzejyD2za-nEkXtmqOqsd6lx-H0m2HDTIreOD14eSds-kgYmHSZYVMxAU00XMA8j6feO8258uXrAcW.1" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="v" Value="2201101603" RecordedValue="2201101603" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="incog" Value="false" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="zact" Value="pv" RecordedValue="pv" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="_zapp" Value="null" RecordedValue="null" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="_zidnbaid" Value="null" RecordedValue="null" CorrelationBinding="" UrlEncode="True" />
          </FormPostHttpBody>
        </Request>
      </DependentRequests>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam9.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="2" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
    </Request>
    <Request Method="GET" Guid="6333bc32-b214-41a5-bffc-2c22345c9a48" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/Default.aspx" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://thongtindaotao.sgu.edu.vn/default.aspx?page=nhapmasv&amp;flag=ThoiKhoaBieu" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="http://thongtindaotao.sgu.edu.vn/" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam7.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam8.flag" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;flag=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam4.ctl00$ContentPlaceHolder1$ctl00$radio" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_ContentPlaceHolder1_ctl00_radioMaSV" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="1" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam17.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam18.flag" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;flag=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam6.ctl00$ContentPlaceHolder1$ctl00$radio" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_ContentPlaceHolder1_ctl00_radioMaSV" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="1" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="thoikhoabieu" RecordedValue="thoikhoabieu" CorrelationBinding="{{QueryStringParam9.page}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="04ce2d9c-dc7e-4a6e-8bb8-60b77a55a780" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/default.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="POST" Guid="56b265ef-cc21-48d7-b2fb-1669073d74bd" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/default.aspx" ThinkTime="5" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="http://thongtindaotao.sgu.edu.vn/default.aspx?page=nhapmasv&amp;flag=ThoiKhoaBieu" />
          </Headers>
          <ExtractionRules>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
              <RuleParameters>
                <RuleParameter Name="Required" Value="True" />
                <RuleParameter Name="HtmlDecode" Value="True" />
              </RuleParameters>
            </ExtractionRule>
          </ExtractionRules>
          <CorrelationExtractionRules>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam19.page" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="?page=" />
                <RuleParameter Name="EndsWith" Value="&amp;" />
                <RuleParameter Name="Index" Value="0" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam20.flag" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="&amp;amp;flag=" />
                <RuleParameter Name="EndsWith" Value="&quot;" />
                <RuleParameter Name="Index" Value="0" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam7.__VIEWSTATE" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="lue=&quot;" />
                <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
                <RuleParameter Name="Index" Value="3" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam8.__VIEWSTATEGENERATOR" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="lue=&quot;" />
                <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
                <RuleParameter Name="Index" Value="4" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam9.ctl00$ContentPlaceHolder1$ctl00$radio" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="lue=&quot;" />
                <RuleParameter Name="EndsWith" Value="&quot; che" />
                <RuleParameter Name="Index" Value="11" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam10.ctl00$ContentPlaceHolder1$ctl00$btnOK" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value=" == &quot;" />
                <RuleParameter Name="EndsWith" Value="&quot; || " />
                <RuleParameter Name="Index" Value="0" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam21.page" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="?page=" />
                <RuleParameter Name="EndsWith" Value="&amp;" />
                <RuleParameter Name="Index" Value="0" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam22.flag" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="&amp;amp;flag=" />
                <RuleParameter Name="EndsWith" Value="&quot;" />
                <RuleParameter Name="Index" Value="0" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam11.ctl00$ContentPlaceHolder1$ctl00$radio" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="Name" Value="ctl00_ContentPlaceHolder1_ctl00_radioMaSV" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
                <RuleParameter Name="Index" Value="1" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam12.ctl00$ContentPlaceHolder1$ctl00$btnOK" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="Name" Value="ctl00_ContentPlaceHolder1_ctl00_btnOK" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
                <RuleParameter Name="Index" Value="0" />
              </RuleParameters>
            </ExtractionRule>
          </CorrelationExtractionRules>
          <QueryStringParameters>
            <QueryStringParameter Name="page" Value="nhapmasv" RecordedValue="nhapmasv" CorrelationBinding="{{QueryStringParam17.page}}" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="flag" Value="ThoiKhoaBieu" RecordedValue="ThoiKhoaBieu" CorrelationBinding="{{QueryStringParam18.flag}}" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
          <FormPostHttpBody>
            <FormPostParameter Name="__EVENTTARGET" Value="ctl00$ContentPlaceHolder1$ctl00$radioMaSV" RecordedValue="ctl00$ContentPlaceHolder1$ctl00$radioMaSV" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="CA0B0334" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$radio" Value="radioMaSV" RecordedValue="radioMaSV" CorrelationBinding="{{FormPostParam6.ctl00$ContentPlaceHolder1$ctl00$radio}}" UrlEncode="True" />
          </FormPostHttpBody>
        </Request>
      </DependentRequests>
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="nhapmasv" RecordedValue="nhapmasv" CorrelationBinding="{{QueryStringParam7.page}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="flag" Value="ThoiKhoaBieu" RecordedValue="ThoiKhoaBieu" CorrelationBinding="{{QueryStringParam8.flag}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$ContentPlaceHolder1$ctl00$radioMaSV" RecordedValue="ctl00$ContentPlaceHolder1$ctl00$radioMaSV" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="CA0B0334" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$radio" Value="radioMaSV" RecordedValue="radioMaSV" CorrelationBinding="{{FormPostParam4.ctl00$ContentPlaceHolder1$ctl00$radio}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="4ff68835-b076-48eb-9262-68b6b7944f24" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/default.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://thongtindaotao.sgu.edu.vn/Default.aspx?page=thoikhoabieu&amp;sta=1&amp;id=3119411042" ReportingName="" IgnoreHttpStatusCode="False">
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="nhapmasv" RecordedValue="nhapmasv" CorrelationBinding="{{QueryStringParam19.page}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="flag" Value="ThoiKhoaBieu" RecordedValue="ThoiKhoaBieu" CorrelationBinding="{{QueryStringParam20.flag}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="__EVENTTARGET" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="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" RecordedValue="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" CorrelationBinding="{{FormPostParam7.__VIEWSTATE}}" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="CA0B0334" RecordedValue="CA0B0334" CorrelationBinding="{{FormPostParam8.__VIEWSTATEGENERATOR}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$radio" Value="radioMaSV" RecordedValue="radioMaSV" CorrelationBinding="{{FormPostParam9.ctl00$ContentPlaceHolder1$ctl00$radio}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$txtMaSV" Value="3119411042" RecordedValue="3119411042" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$btnOK" Value="OK" RecordedValue="OK" CorrelationBinding="{{FormPostParam10.ctl00$ContentPlaceHolder1$ctl00$btnOK}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="37057318-d758-41ee-b86e-7e1e3edcc2f7" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/default.aspx" ThinkTime="5" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://thongtindaotao.sgu.edu.vn/Default.aspx?page=thoikhoabieu&amp;sta=1&amp;id=3119411042" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="http://thongtindaotao.sgu.edu.vn/default.aspx?page=nhapmasv&amp;flag=ThoiKhoaBieu" />
      </Headers>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam23.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="4" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam24.flag" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;flag=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="nhapmasv" RecordedValue="nhapmasv" CorrelationBinding="{{QueryStringParam21.page}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="flag" Value="ThoiKhoaBieu" RecordedValue="ThoiKhoaBieu" CorrelationBinding="{{QueryStringParam22.flag}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="/wEPDwUKLTMxNjc3NTM3NQ9kFgJmD2QWBGYPZBYEAgEPFgIeB2NvbnRlbnRkZAICDxYCHgRocmVmBSkuL01lc3NhZ2VGaWxlL2Zhdmljb24tZGFpLWhvYy1zYWktZ29uLmpwZ2QCAQ9kFggCAw9kFgJmD2QWAgIBD2QWDGYPDxYCHgRUZXh0BQxDaMOgbyBi4bqhbiBkZAIBDw8WBh8CBQ9YZW0gdGjDtG5nIGLDoW8eCUZvcmVDb2xvcgkAM///HgRfIVNCAgRkZAICDw8WBh8CBQMgfCAfAwkAM///HwQCBGRkAgMPDxYGHwIFGFRoYXkgxJHhu5VpIG3huq10IGto4bqpdR8DCQAz//8fBAIEZGQCBA8PFgYfAgUDIHwgHwMJADP//x8EAgRkZAIFDw8WBh8CBQ3EkMSDbmcgTmjhuq1wHwMJADP//x8EAgRkZAIFD2QWwgECAQ8PFgQeCENzc0NsYXNzBQhvdXQtbWVudR8EAgJkFgJmDw8WAh8CBQtUUkFORyBDSOG7pmRkAgMPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRdEQU5IIE3hu6RDIENI4buoQyBOxIJOR2RkAgUPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRtETSBDSOG7qEMgTsSCTkcgxJDDgU5IIEdJw4FkZAIHDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUjUVXhuqJOIEzDnSDEkMOBTkggR0nDgSBSw4hOIExVWeG7hk5kZAIJDw8WBh8FBQhvdXQtbWVudR8EAgIeB1Zpc2libGVoZBYCAgEPDxYCHwIFFcSQxIJORyBLw50gTcOUTiBI4buMQ2RkAgsPDxYEHwUFCG91dC1tZW51HwQCAmRkAg0PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBQdYRU0gVEtCZGQCDw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFEFhFTSDEkEnhu4JNIERBTkhkZAIRDw8WBB8FBQhvdXQtbWVudR8EAgJkFgJmDw8WAh8CBQ5YRU0gTOG7ikNIIFRISWRkAhMPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAgIBDw8WAh8CBRRYRU0gTOG7ikNIIFRISSBM4bqgSWRkAhUPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAgIBDw8WAh8CBRFYRU0gTOG7ikNIIFRISSBHS2RkAhcPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAgIBDw8WAh8CBSFHSEkgVMOTTSBU4bquVCBNw5ROIEdJ4bqiTkcgROG6oFlkZAIZDw8WBB8FBQhvdXQtbWVudR8EAgJkZAIbDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUOWEVNIEjhu4xDIFBIw41kZAIdDw8WBB8FBQhvdXQtbWVudR8EAgJkZAIfDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgULWEVNIMSQSeG7gk1kZAIhDw8WBh8FBQhvdXQtbWVudR8EAgIfBmhkFgICAQ8PFgIfAgUTxJBJ4buCTSBL4buyIFbhu4xOR2RkAiMPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRhL4bq+VCBRVeG6oiDEkEnhu4JNIERBTkhkZAIlDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUWS1EgxJBJ4buCTSBEQU5IIE9OTElORWRkAicPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRtYRU0gxJBJ4buCTSBEQU5IIFNJTkggVknDik5kZAIpDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUfR0nhuqJORyBWScOKTiBU4buwIMSQSeG7gk0gREFOSGRkAisPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBQlYRU0gQ1TEkFRkZAItDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgULWEVNIE3DlE4gVFFkZAIvDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUkxJDDgU5IIEdJw4EgS+G6vlQgUVXhuqIgUsOITiBMVVnhu4ZOZGQCMQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFJsSQw4FOSCBHScOBIEtRIFLDiE4gTFVZ4buGTiBTSU5IIFZJw4pOZGQCMw8PFgYfBQUIb3V0LW1lbnUfBAICHwZoZBYCAgEPDxYCHwIFElPhu6xBIFRUIEPDgSBOSMOCTmRkAjUPDxYGHwUFCG91dC1tZW51HwQCAh8GZ2QWAgIBDw8WAh8CBQ5Hw5NQIMOdIEtJ4bq+TmRkAjcPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAmYPDxYCHwIFEFPhu6xBIEzDnSBM4buKQ0hkZAI5Dw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUVUVXhuqJOIEzDnSBTSU5IIFZJw4pOZGQCOw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFIkvhur5UIFFV4bqiIFNJTkggVknDik4gxJDDgU5IIEdJw4FkZAI9Dw8WBB8FBQhvdXQtbWVudR8EAgJkZAI/Dw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ9kFgJmDw8WAh8CBRnEkMOBTkggR0nDgSBHSeG6ok5HIEThuqBZZGQCQQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFFMSQxIJORyBLw50gVEhJIEzhuqBJZGQCQw8PFgQfBQUIb3V0LW1lbnUfBAICZGQCRQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFEsSQSyBDSFVZw4pOIE5Hw4BOSGRkAkcPDxYEHwUFCG91dC1tZW51HwQCAmRkAkkPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRZLUSBYw4lUIFThu5BUIE5HSEnhu4ZQZGQCSw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHUtRIFjDiVQgVEnhu4BOIFThu5BUIE5HSEnhu4ZQZGQCTQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFGkPDglUgSOG7jkkgVEjGr+G7nE5HIEfhurZQZGQCTw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFE8SQSyBLSMOTQSBMVeG6rE4gVE5kZAJRDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUOTkjhuqxQIMSQSeG7gk1kZAJTDw8WBB8FBQhvdXQtbWVudR8EAgJkZAJVDw8WBB8FBQhvdXQtbWVudR8EAgJkZAJXDw8WBB8FBQhvdXQtbWVudR8EAgJkZAJZDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUeWEVNIMSQSeG7gk0gTcOUTiBHSeG6ok5HIEThuqBZZGQCWw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHlhFTSDEkEnhu4JNIFThu5RORyBI4buiUCBM4buaUGRkAl0PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRVJTiBLSOG7kEkgTMav4buiTkcgR0RkZAJfDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUOVVBMT0FEIMSQSeG7gk1kZAJhDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUNVEtCIELhu5ggTcOUTmRkAmMPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRRM4buKQ0ggVEhJIELhu5ggTcOUTmRkAmUPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSZUSOG7kE5HIEvDiiBHSeG6ok5HIFZJw4pOIERVWeG7hlQgS1FES2RkAmcPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSJYRU0gVOG7lE5HIEjhu6JQIEtRIEjhu4xDIFThuqxQIFNWZGQCaQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCaw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCZg8PFgIfAgUYS+G6viBIT+G6oENIIEjhu4xDIFThuqxQZGQCbQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCbw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFFEjGr+G7mk5HIEThuqpOIMSQS01IZGQCcQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFIE5I4bqsUCDEkOG7ikEgQ0jhu4ggTkjhuqxOIFPDgUNIZGQCcw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFJMSQxIJORyBLw50gTkjhuqxOIFPDgUNIIE5HT8OASSBHSeG7nGRkAnUPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRvEkMOBTkggR0nDgSBDSOG6pFQgTMav4buiTkdkZAJ3Dw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUfxJAuS8OdIEThu7AgTOG7hCBU4buQVCBOR0hJ4buGUGRkAnkPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRNO4buYUCBDSOG7qE5HIENI4buIZGQCew8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFIVhFTSDEkOG7gCBDxq/GoE5HIFRST05HIELhu5ggTcOUTmRkAn0PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRlEQU5IIFPDgUNIIMSQLkvDnSBYw4lUIFROZGQCfw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHkRBTkggU8OBQ0ggxJAuS8OdIEThu7AgTOG7hCBUTmRkAoEBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUWVEjDlE5HIFRJTiBMVeG6rE4gVsSCTmRkAoMBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUnVFJBIEPhu6hVIFbEgk4gQuG6sE5HIFbDgCBDSOG7qE5HIENI4buIZGQChQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRBD4buwVSBTSU5IIFZJw4pOZGQChwEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRfEkMSCTkcgS8OdIFjDiVQgVFVZ4buCTmRkAokBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUgVEjDlE5HIFRJTiBI4buSIFPGoCBUVVnhu4JOIFNJTkhkZAKLAQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCjQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRdIw5NBIMSQxqBOIMSQSeG7hk4gVOG7rGRkAo8BDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUWTkdI4buIIEThuqBZIEThuqBZIELDmWRkApEBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUXxJDEgk5HIEvDnSBOR0jhu4ggUEjDiVBkZAKTAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFEsSQxIJORyBLw50gQ09JIFRISWRkApUBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUSWEVNIEzhu4pDSCBDT0kgVEhJZGQClwEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRtLUSBOR0hJw4pOIEPhu6hVIEtIT0EgSOG7jENkZAKZAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHFhFTSDEkOG7gCBUw4BJIE5DS0ggVEhBTSBHSUFkZAKbAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPZBYCZg8PFgIfAgUkxJDEgk5HIEvDnSBYSU4gR0nhuqRZIENI4buoTkcgTkjhuqxOZGQCnQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBD2QWAmYPDxYCHwIFGUPhuqxQIE5I4bqsVCBOR0/huqBJIFRSw5pkZAKfAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFG0PhuqxQIE5I4bqsVCBUSMav4bucTkcgVFLDmmRkAqEBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUVQ+G6qE0gTkFORyBTSU5IIFZJw4pOZGQCowEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBR5YRU0gTFXhuqxOIFbEgk4gVOG7kFQgTkdISeG7hlBkZAKlAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHlhFTSBMVeG6rE4gVsSCTiBIxq/hu5pORyBE4bqqTmRkAqcBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUdWEVNIExV4bqsTiBWxIJOIFBI4bqiTiBCSeG7hk5kZAKpAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFJELDgU8gQknhu4JVIFBI4bukQyBW4bukIEzDg05IIMSQ4bqgT2RkAqsBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUcVEjhu5BORyBLw4ogxJDDk05HIEhQIE9OTElORWRkAq0BDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUXxJDEgk5HIEvDnSBLw50gVMOaQyBYw4FkZAKvAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFGFRIQU5IIFRPw4FOIEvDnSBUw5pDIFjDgWRkArEBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUiQ+G6rFAgTkjhuqxUIEzDnSBM4buKQ0ggS0hPQSBI4buMQ2RkArMBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUXQ+G6rFAgTkjhuqxUIFQuVElOIEJIWVRkZAK1AQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFFlhFTSDEkEnhu4JNIMSQw4MgROG6oFlkZAK3AQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFGUlOIEvDiiBLSEFJIEdJ4bucIEdJ4bqiTkdkZAK5AQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCuwEPDxYEHwUFCG91dC1tZW51HwQCAmRkAr0BDw8WBB8FBQhvdXQtbWVudR8EAgJkZAK/AQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCwQEPDxYEHwUFCG91dC1tZW51HwQCAmRkAgcPZBYCAgEPZBYCZg9kFggCAQ8QDxYEHwIFD1Rvw6BuIHRyxrDhu51uZx4HQ2hlY2tlZGhkZGRkAgMPEA8WBB8CBRlDw6EgbmjDom4gbmfGsOG7nWkgZMO5bmc6HwdnZGRkZAIFDw8WBB8CBRtOaOG6rXAgbcOjIHPhu5EgY+G6p24geGVtOiAeB0VuYWJsZWRnZGQCBw8PFgIfCGdkZAIJD2QWCAIBDw8WAh8CBXlDb3B5cmlnaHQgwqkyMDA5IFRyxrDhu51uZyDEkEggU8OgaSBHw7JuLcSQ4bqhaSBo4buNYyBjaMOtbmggcXV5LiBRdeG6o24gbMO9IGLhu59pIOG7pnkgYmFuIG5ow6JuIGTDom4gVFAuIEjhu5MgQ2jDrSBNaW5oZGQCAw8PFgIfAgULVHJhbmcgQ2jhu6dkZAIFDw8WAh8CBS1UaGnhur90IGvhur8gYuG7n2kgY3R5IFBo4bqnbiBt4buBbSBBbmggUXXDom5kZAIHDw8WAh8CBQzEkOG6p3UgVHJhbmdkZBgBBR5fX0NvbnRyb2xzUmVxdWlyZVBvc3RCYWNrS2V5X18WAwUvY3RsMDAkQ29udGVudFBsYWNlSG9sZGVyMSRjdGwwMCRyYWRpb1RvYW5UcnVvbmcFL2N0bDAwJENvbnRlbnRQbGFjZUhvbGRlcjEkY3RsMDAkcmFkaW9Ub2FuVHJ1b25nBSljdGwwMCRDb250ZW50UGxhY2VIb2xkZXIxJGN0bDAwJHJhZGlvTWFTVjlnAbDg3DBndJofeolOLzsM5P41" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="CA0B0334" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$radio" Value="radioMaSV" RecordedValue="radioMaSV" CorrelationBinding="{{FormPostParam11.ctl00$ContentPlaceHolder1$ctl00$radio}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$txtMaSV" Value="3119411042" RecordedValue="3119411042" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$btnOK" Value="OK" RecordedValue="OK" CorrelationBinding="{{FormPostParam12.ctl00$ContentPlaceHolder1$ctl00$btnOK}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="731cc9bd-fff9-4400-a8f7-5a9471cdff75" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/Default.aspx" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="http://thongtindaotao.sgu.edu.vn/Default.aspx?page=thoikhoabieu&amp;sta=1&amp;id=3119411042" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam5.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="4" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam6.flag" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;flag=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam3.ctl00$ContentPlaceHolder1$ctl00$radio" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_ContentPlaceHolder1_ctl00_radioMaSV" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="1" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam25.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="4" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam26.flag" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;flag=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam13.ctl00$ContentPlaceHolder1$ctl00$radio" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_ContentPlaceHolder1_ctl00_radioMaSV" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="1" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="nhapmasv" RecordedValue="nhapmasv" CorrelationBinding="{{QueryStringParam23.page}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="flag" Value="XemLichThi" RecordedValue="XemLichThi" CorrelationBinding="{{QueryStringParam24.flag}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="f83c1250-dd0e-490c-a3df-a3e8e472fb09" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/Default.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="POST" Guid="fa24a63b-3c4b-4158-9f00-4c53243e6976" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/Default.aspx" ThinkTime="4" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="http://thongtindaotao.sgu.edu.vn/Default.aspx?page=nhapmasv&amp;flag=XemLichThi" />
          </Headers>
          <ExtractionRules>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
              <RuleParameters>
                <RuleParameter Name="Required" Value="True" />
                <RuleParameter Name="HtmlDecode" Value="True" />
              </RuleParameters>
            </ExtractionRule>
          </ExtractionRules>
          <CorrelationExtractionRules>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam27.page" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="?page=" />
                <RuleParameter Name="EndsWith" Value="&amp;" />
                <RuleParameter Name="Index" Value="4" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam28.flag" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="&amp;flag=" />
                <RuleParameter Name="EndsWith" Value="&quot;" />
                <RuleParameter Name="Index" Value="0" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam14.__VIEWSTATE" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="lue=&quot;" />
                <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
                <RuleParameter Name="Index" Value="3" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam15.__VIEWSTATEGENERATOR" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="lue=&quot;" />
                <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
                <RuleParameter Name="Index" Value="4" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam16.ctl00$ContentPlaceHolder1$ctl00$radio" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="lue=&quot;" />
                <RuleParameter Name="EndsWith" Value="&quot; che" />
                <RuleParameter Name="Index" Value="11" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam17.ctl00$ContentPlaceHolder1$ctl00$btnOK" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value=" == &quot;" />
                <RuleParameter Name="EndsWith" Value="&quot; || " />
                <RuleParameter Name="Index" Value="0" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam29.page" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="?page=" />
                <RuleParameter Name="EndsWith" Value="&amp;" />
                <RuleParameter Name="Index" Value="4" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam30.flag" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="&amp;flag=" />
                <RuleParameter Name="EndsWith" Value="&quot;" />
                <RuleParameter Name="Index" Value="0" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam18.ctl00$ContentPlaceHolder1$ctl00$radio" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="Name" Value="ctl00_ContentPlaceHolder1_ctl00_radioMaSV" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
                <RuleParameter Name="Index" Value="1" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam19.ctl00$ContentPlaceHolder1$ctl00$btnOK" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="Name" Value="ctl00_ContentPlaceHolder1_ctl00_btnOK" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
                <RuleParameter Name="Index" Value="0" />
              </RuleParameters>
            </ExtractionRule>
          </CorrelationExtractionRules>
          <QueryStringParameters>
            <QueryStringParameter Name="page" Value="nhapmasv" RecordedValue="nhapmasv" CorrelationBinding="{{QueryStringParam25.page}}" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="flag" Value="XemLichThi" RecordedValue="XemLichThi" CorrelationBinding="{{QueryStringParam26.flag}}" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
          <FormPostHttpBody>
            <FormPostParameter Name="__EVENTTARGET" Value="ctl00$ContentPlaceHolder1$ctl00$radioMaSV" RecordedValue="ctl00$ContentPlaceHolder1$ctl00$radioMaSV" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="CA0B0334" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$radio" Value="radioMaSV" RecordedValue="radioMaSV" CorrelationBinding="{{FormPostParam13.ctl00$ContentPlaceHolder1$ctl00$radio}}" UrlEncode="True" />
          </FormPostHttpBody>
        </Request>
      </DependentRequests>
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="nhapmasv" RecordedValue="nhapmasv" CorrelationBinding="{{QueryStringParam5.page}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="flag" Value="XemLichThi" RecordedValue="XemLichThi" CorrelationBinding="{{QueryStringParam6.flag}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$ContentPlaceHolder1$ctl00$radioMaSV" RecordedValue="ctl00$ContentPlaceHolder1$ctl00$radioMaSV" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="/wEPDwUKLTMxNjc3NTM3NQ9kFgJmD2QWBGYPZBYEAgEPFgIeB2NvbnRlbnRkZAICDxYCHgRocmVmBSkuL01lc3NhZ2VGaWxlL2Zhdmljb24tZGFpLWhvYy1zYWktZ29uLmpwZ2QCAQ9kFggCAw9kFgJmD2QWAgIBD2QWDGYPDxYCHgRUZXh0BQxDaMOgbyBi4bqhbiBkZAIBDw8WBB4JRm9yZUNvbG9yCQAz//8eBF8hU0ICBGRkAgIPDxYEHwMJADP//x8EAgRkZAIDDw8WBh8CBRhUaGF5IMSR4buVaSBt4bqtdCBraOG6qXUfAwkAM///HwQCBGRkAgQPDxYEHwMJADP//x8EAgRkZAIFDw8WBh8CBQ3EkMSDbmcgTmjhuq1wHwMJADP//x8EAgRkZAIFD2QWwgECAQ8PFgQeCENzc0NsYXNzBQhvdXQtbWVudR8EAgJkFgJmDw8WAh8CBQtUUkFORyBDSOG7pmRkAgMPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRdEQU5IIE3hu6RDIENI4buoQyBOxIJOR2RkAgUPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRtETSBDSOG7qEMgTsSCTkcgxJDDgU5IIEdJw4FkZAIHDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUjUVXhuqJOIEzDnSDEkMOBTkggR0nDgSBSw4hOIExVWeG7hk5kZAIJDw8WBh8FBQhvdXQtbWVudR8EAgIeB1Zpc2libGVoZBYCAgEPDxYCHwIFFcSQxIJORyBLw50gTcOUTiBI4buMQ2RkAgsPDxYEHwUFCG91dC1tZW51HwQCAmRkAg0PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBQdYRU0gVEtCZGQCDw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFEFhFTSDEkEnhu4JNIERBTkhkZAIRDw8WBB8FBQhvdXQtbWVudR8EAgJkFgJmDw8WAh8CBQ5YRU0gTOG7ikNIIFRISWRkAhMPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAgIBDw8WAh8CBRRYRU0gTOG7ikNIIFRISSBM4bqgSWRkAhUPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAgIBDw8WAh8CBRFYRU0gTOG7ikNIIFRISSBHS2RkAhcPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAgIBDw8WAh8CBSFHSEkgVMOTTSBU4bquVCBNw5ROIEdJ4bqiTkcgROG6oFlkZAIZDw8WBB8FBQhvdXQtbWVudR8EAgJkZAIbDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUOWEVNIEjhu4xDIFBIw41kZAIdDw8WBB8FBQhvdXQtbWVudR8EAgJkZAIfDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgULWEVNIMSQSeG7gk1kZAIhDw8WBh8FBQhvdXQtbWVudR8EAgIfBmhkFgICAQ8PFgIfAgUTxJBJ4buCTSBL4buyIFbhu4xOR2RkAiMPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRhL4bq+VCBRVeG6oiDEkEnhu4JNIERBTkhkZAIlDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUWS1EgxJBJ4buCTSBEQU5IIE9OTElORWRkAicPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRtYRU0gxJBJ4buCTSBEQU5IIFNJTkggVknDik5kZAIpDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUfR0nhuqJORyBWScOKTiBU4buwIMSQSeG7gk0gREFOSGRkAisPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBQlYRU0gQ1TEkFRkZAItDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgULWEVNIE3DlE4gVFFkZAIvDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUkxJDDgU5IIEdJw4EgS+G6vlQgUVXhuqIgUsOITiBMVVnhu4ZOZGQCMQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFJsSQw4FOSCBHScOBIEtRIFLDiE4gTFVZ4buGTiBTSU5IIFZJw4pOZGQCMw8PFgYfBQUIb3V0LW1lbnUfBAICHwZoZBYCAgEPDxYCHwIFElPhu6xBIFRUIEPDgSBOSMOCTmRkAjUPDxYGHwUFCG91dC1tZW51HwQCAh8GZ2QWAgIBDw8WAh8CBQ5Hw5NQIMOdIEtJ4bq+TmRkAjcPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAmYPDxYCHwIFEFPhu6xBIEzDnSBM4buKQ0hkZAI5Dw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUVUVXhuqJOIEzDnSBTSU5IIFZJw4pOZGQCOw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFIkvhur5UIFFV4bqiIFNJTkggVknDik4gxJDDgU5IIEdJw4FkZAI9Dw8WBB8FBQhvdXQtbWVudR8EAgJkZAI/Dw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ9kFgJmDw8WAh8CBRnEkMOBTkggR0nDgSBHSeG6ok5HIEThuqBZZGQCQQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFFMSQxIJORyBLw50gVEhJIEzhuqBJZGQCQw8PFgQfBQUIb3V0LW1lbnUfBAICZGQCRQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFEsSQSyBDSFVZw4pOIE5Hw4BOSGRkAkcPDxYEHwUFCG91dC1tZW51HwQCAmRkAkkPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRZLUSBYw4lUIFThu5BUIE5HSEnhu4ZQZGQCSw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHUtRIFjDiVQgVEnhu4BOIFThu5BUIE5HSEnhu4ZQZGQCTQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFGkPDglUgSOG7jkkgVEjGr+G7nE5HIEfhurZQZGQCTw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFE8SQSyBLSMOTQSBMVeG6rE4gVE5kZAJRDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUOTkjhuqxQIMSQSeG7gk1kZAJTDw8WBB8FBQhvdXQtbWVudR8EAgJkZAJVDw8WBB8FBQhvdXQtbWVudR8EAgJkZAJXDw8WBB8FBQhvdXQtbWVudR8EAgJkZAJZDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUeWEVNIMSQSeG7gk0gTcOUTiBHSeG6ok5HIEThuqBZZGQCWw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHlhFTSDEkEnhu4JNIFThu5RORyBI4buiUCBM4buaUGRkAl0PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRVJTiBLSOG7kEkgTMav4buiTkcgR0RkZAJfDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUOVVBMT0FEIMSQSeG7gk1kZAJhDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUNVEtCIELhu5ggTcOUTmRkAmMPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRRM4buKQ0ggVEhJIELhu5ggTcOUTmRkAmUPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSZUSOG7kE5HIEvDiiBHSeG6ok5HIFZJw4pOIERVWeG7hlQgS1FES2RkAmcPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSJYRU0gVOG7lE5HIEjhu6JQIEtRIEjhu4xDIFThuqxQIFNWZGQCaQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCaw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCZg8PFgIfAgUYS+G6viBIT+G6oENIIEjhu4xDIFThuqxQZGQCbQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCbw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFFEjGr+G7mk5HIEThuqpOIMSQS01IZGQCcQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFIE5I4bqsUCDEkOG7ikEgQ0jhu4ggTkjhuqxOIFPDgUNIZGQCcw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFJMSQxIJORyBLw50gTkjhuqxOIFPDgUNIIE5HT8OASSBHSeG7nGRkAnUPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRvEkMOBTkggR0nDgSBDSOG6pFQgTMav4buiTkdkZAJ3Dw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUfxJAuS8OdIEThu7AgTOG7hCBU4buQVCBOR0hJ4buGUGRkAnkPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRNO4buYUCBDSOG7qE5HIENI4buIZGQCew8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFIVhFTSDEkOG7gCBDxq/GoE5HIFRST05HIELhu5ggTcOUTmRkAn0PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRlEQU5IIFPDgUNIIMSQLkvDnSBYw4lUIFROZGQCfw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHkRBTkggU8OBQ0ggxJAuS8OdIEThu7AgTOG7hCBUTmRkAoEBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUWVEjDlE5HIFRJTiBMVeG6rE4gVsSCTmRkAoMBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUjVFJBIEPhu6hVIFRIw5RORyBUSU4gVOG7kFQgTkdISeG7hlBkZAKFAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFEEPhu7BVIFNJTkggVknDik5kZAKHAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFF8SQxIJORyBLw50gWMOJVCBUVVnhu4JOZGQCiQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSBUSMOUTkcgVElOIEjhu5IgU8agIFRVWeG7gk4gU0lOSGRkAosBDw8WBB8FBQhvdXQtbWVudR8EAgJkZAKNAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFF0jDk0EgxJDGoE4gxJBJ4buGTiBU4busZGQCjwEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRZOR0jhu4ggROG6oFkgROG6oFkgQsOZZGQCkQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRfEkMSCTkcgS8OdIE5HSOG7iCBQSMOJUGRkApMBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUSxJDEgk5HIEvDnSBDT0kgVEhJZGQClQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRJYRU0gTOG7ikNIIENPSSBUSElkZAKXAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFG0tRIE5HSEnDik4gQ+G7qFUgS0hPQSBI4buMQ2RkApkBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUcWEVNIMSQ4buAIFTDgEkgTkNLSCBUSEFNIEdJQWRkApsBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ9kFgJmDw8WAh8CBSTEkMSCTkcgS8OdIFhJTiBHSeG6pFkgQ0jhu6hORyBOSOG6rE5kZAKdAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPZBYCZg8PFgIfAgUZQ+G6rFAgTkjhuqxUIE5HT+G6oEkgVFLDmmRkAp8BDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUbQ+G6rFAgTkjhuqxUIFRIxq/hu5xORyBUUsOaZGQCoQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRVD4bqoTSBOQU5HIFNJTkggVknDik5kZAKjAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHlhFTSBMVeG6rE4gVsSCTiBU4buQVCBOR0hJ4buGUGRkAqUBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUeWEVNIExV4bqsTiBWxIJOIEjGr+G7mk5HIEThuqpOZGQCpwEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBR1YRU0gTFXhuqxOIFbEgk4gUEjhuqJOIEJJ4buGTmRkAqkBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUkQsOBTyBCSeG7glUgUEjhu6RDIFbhu6QgTMODTkggxJDhuqBPZGQCqwEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRxUSOG7kE5HIEvDiiDEkMOTTkcgSFAgT05MSU5FZGQCrQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRfEkMSCTkcgS8OdIEvDnSBUw5pDIFjDgWRkAq8BDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUYVEhBTkggVE/DgU4gS8OdIFTDmkMgWMOBZGQCsQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSJD4bqsUCBOSOG6rFQgTMOdIEzhu4pDSCBLSE9BIEjhu4xDZGQCswEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRdD4bqsUCBOSOG6rFQgVC5USU4gQkhZVGRkArUBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUWWEVNIMSQSeG7gk0gxJDDgyBE4bqgWWRkArcBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUZSU4gS8OKIEtIQUkgR0nhu5wgR0nhuqJOR2RkArkBDw8WBB8FBQhvdXQtbWVudR8EAgJkZAK7AQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCvQEPDxYEHwUFCG91dC1tZW51HwQCAmRkAr8BDw8WBB8FBQhvdXQtbWVudR8EAgJkZALBAQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCBw9kFgICAQ9kFgJmD2QWCAIBDxAPFgQfAgUPVG/DoG4gdHLGsOG7nW5nHgdDaGVja2VkZ2RkZGQCAw8QDxYCHwIFGUPDoSBuaMOibiBuZ8aw4budaSBkw7luZzpkZGRkAgUPDxYEHwIFG05o4bqtcCBtw6Mgc+G7kSBj4bqnbiB4ZW06IB4HRW5hYmxlZGhkZAIHDw8WAh8IaGRkAgkPZBYIAgEPDxYCHwIFeUNvcHlyaWdodCDCqTIwMDkgVHLGsOG7nW5nIMSQSCBTw6BpIEfDsm4txJDhuqFpIGjhu41jIGNow61uaCBxdXkuIFF14bqjbiBsw70gYuG7n2kg4bumeSBiYW4gbmjDom4gZMOibiBUUC4gSOG7kyBDaMOtIE1pbmhkZAIDDw8WAh8CBQtUcmFuZyBDaOG7p2RkAgUPDxYCHwIFLVRoaeG6v3Qga+G6vyBi4bufaSBjdHkgUGjhuqduIG3hu4FtIEFuaCBRdcOibmRkAgcPDxYCHwIFDMSQ4bqndSBUcmFuZ2RkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYDBS9jdGwwMCRDb250ZW50UGxhY2VIb2xkZXIxJGN0bDAwJHJhZGlvVG9hblRydW9uZwUpY3RsMDAkQ29udGVudFBsYWNlSG9sZGVyMSRjdGwwMCRyYWRpb01hU1YFKWN0bDAwJENvbnRlbnRQbGFjZUhvbGRlcjEkY3RsMDAkcmFkaW9NYVNWbK4Kkwbou1MYG/cne/k2Togg9uc=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="CA0B0334" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$radio" Value="radioMaSV" RecordedValue="radioMaSV" CorrelationBinding="{{FormPostParam3.ctl00$ContentPlaceHolder1$ctl00$radio}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="d80ec5a6-3a4b-4458-9ecd-dbbb02f7796d" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/Default.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://thongtindaotao.sgu.edu.vn/Default.aspx?page=xemlichthi&amp;id=3119411042" ReportingName="" IgnoreHttpStatusCode="False">
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="nhapmasv" RecordedValue="nhapmasv" CorrelationBinding="{{QueryStringParam27.page}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="flag" Value="XemLichThi" RecordedValue="XemLichThi" CorrelationBinding="{{QueryStringParam28.flag}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="__EVENTTARGET" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="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" RecordedValue="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" CorrelationBinding="{{FormPostParam14.__VIEWSTATE}}" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="CA0B0334" RecordedValue="CA0B0334" CorrelationBinding="{{FormPostParam15.__VIEWSTATEGENERATOR}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$radio" Value="radioMaSV" RecordedValue="radioMaSV" CorrelationBinding="{{FormPostParam16.ctl00$ContentPlaceHolder1$ctl00$radio}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$txtMaSV" Value="3119411042" RecordedValue="3119411042" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$btnOK" Value="OK" RecordedValue="OK" CorrelationBinding="{{FormPostParam17.ctl00$ContentPlaceHolder1$ctl00$btnOK}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="8b5c08a7-6d47-4ccb-baf4-703709bdb463" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/Default.aspx" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://thongtindaotao.sgu.edu.vn/Default.aspx?page=xemlichthi&amp;id=3119411042" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="http://thongtindaotao.sgu.edu.vn/Default.aspx?page=nhapmasv&amp;flag=XemLichThi" />
      </Headers>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam31.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="5" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="nhapmasv" RecordedValue="nhapmasv" CorrelationBinding="{{QueryStringParam29.page}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="flag" Value="XemLichThi" RecordedValue="XemLichThi" CorrelationBinding="{{QueryStringParam30.flag}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__LASTFOCUS" Value="{{$HIDDEN1.__LASTFOCUS}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="CA0B0334" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$radio" Value="radioMaSV" RecordedValue="radioMaSV" CorrelationBinding="{{FormPostParam18.ctl00$ContentPlaceHolder1$ctl00$radio}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$txtMaSV" Value="3119411042" RecordedValue="3119411042" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$btnOK" Value="OK" RecordedValue="OK" CorrelationBinding="{{FormPostParam19.ctl00$ContentPlaceHolder1$ctl00$btnOK}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="9c3de0bf-7be0-424f-b464-de3556f491a1" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/Default.aspx" ThinkTime="4" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://thongtindaotao.sgu.edu.vn/default.aspx?page=nhapmasv&amp;flag=XemHocPhi" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="http://thongtindaotao.sgu.edu.vn/Default.aspx?page=xemlichthi&amp;id=3119411042" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam3.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam4.flag" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;flag=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam2.ctl00$ContentPlaceHolder1$ctl00$btnOK" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_ContentPlaceHolder1_ctl00_btnOK" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam32.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam33.flag" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;flag=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam20.ctl00$ContentPlaceHolder1$ctl00$btnOK" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_ContentPlaceHolder1_ctl00_btnOK" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="xemhocphi" RecordedValue="xemhocphi" CorrelationBinding="{{QueryStringParam31.page}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="01dc1070-483b-40ac-b2bd-3a1374993d59" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/default.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://thongtindaotao.sgu.edu.vn/Default.aspx?page=xemhocphi&amp;id=3119411042" ReportingName="" IgnoreHttpStatusCode="False">
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="nhapmasv" RecordedValue="nhapmasv" CorrelationBinding="{{QueryStringParam3.page}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="flag" Value="XemHocPhi" RecordedValue="XemHocPhi" CorrelationBinding="{{QueryStringParam4.flag}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="CA0B0334" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$txtMaSV" Value="3119411042" RecordedValue="3119411042" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$btnOK" Value="OK" RecordedValue="OK" CorrelationBinding="{{FormPostParam2.ctl00$ContentPlaceHolder1$ctl00$btnOK}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="e76159fe-842a-41e8-b7ce-8766d8978225" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/default.aspx" ThinkTime="4" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://thongtindaotao.sgu.edu.vn/Default.aspx?page=xemhocphi&amp;id=3119411042" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="http://thongtindaotao.sgu.edu.vn/default.aspx?page=nhapmasv&amp;flag=XemHocPhi" />
      </Headers>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam34.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="6" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="nhapmasv" RecordedValue="nhapmasv" CorrelationBinding="{{QueryStringParam32.page}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="flag" Value="XemHocPhi" RecordedValue="XemHocPhi" CorrelationBinding="{{QueryStringParam33.flag}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="CA0B0334" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$txtMaSV" Value="3119411042" RecordedValue="3119411042" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$btnOK" Value="OK" RecordedValue="OK" CorrelationBinding="{{FormPostParam20.ctl00$ContentPlaceHolder1$ctl00$btnOK}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="60db9781-78e2-444d-a641-e85ad0f2b0aa" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/Default.aspx" ThinkTime="3" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://thongtindaotao.sgu.edu.vn/default.aspx?page=nhapmasv&amp;flag=XemDiemThi" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="http://thongtindaotao.sgu.edu.vn/Default.aspx?page=xemhocphi&amp;id=3119411042" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam1.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam2.flag" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;flag=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam1.ctl00$ContentPlaceHolder1$ctl00$btnOK" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_ContentPlaceHolder1_ctl00_btnOK" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam35.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam36.flag" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;flag=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam21.ctl00$ContentPlaceHolder1$ctl00$btnOK" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_ContentPlaceHolder1_ctl00_btnOK" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="xemdiemthi" RecordedValue="xemdiemthi" CorrelationBinding="{{QueryStringParam34.page}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
    </Request>
    <Request Method="GET" Guid="df31631c-9307-4a55-b8a4-8e4576acc5c5" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/default.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://thongtindaotao.sgu.edu.vn/Default.aspx?page=xemdiemthi&amp;id=3119411042" ReportingName="" IgnoreHttpStatusCode="False">
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="nhapmasv" RecordedValue="nhapmasv" CorrelationBinding="{{QueryStringParam1.page}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="flag" Value="XemDiemThi" RecordedValue="XemDiemThi" CorrelationBinding="{{QueryStringParam2.flag}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="/wEPDwUKLTMxNjc3NTM3NQ9kFgJmD2QWBGYPZBYEAgEPFgIeB2NvbnRlbnRkZAICDxYCHgRocmVmBSkuL01lc3NhZ2VGaWxlL2Zhdmljb24tZGFpLWhvYy1zYWktZ29uLmpwZ2QCAQ9kFggCAw9kFgJmD2QWAgIBD2QWDGYPDxYCHgRUZXh0BQxDaMOgbyBi4bqhbiBkZAIBDw8WBB4JRm9yZUNvbG9yCQAz//8eBF8hU0ICBGRkAgIPDxYEHwMJADP//x8EAgRkZAIDDw8WBh8CBRhUaGF5IMSR4buVaSBt4bqtdCBraOG6qXUfAwkAM///HwQCBGRkAgQPDxYEHwMJADP//x8EAgRkZAIFDw8WBh8CBQ3EkMSDbmcgTmjhuq1wHwMJADP//x8EAgRkZAIFD2QWwgECAQ8PFgQeCENzc0NsYXNzBQhvdXQtbWVudR8EAgJkFgJmDw8WAh8CBQtUUkFORyBDSOG7pmRkAgMPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRdEQU5IIE3hu6RDIENI4buoQyBOxIJOR2RkAgUPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRtETSBDSOG7qEMgTsSCTkcgxJDDgU5IIEdJw4FkZAIHDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUjUVXhuqJOIEzDnSDEkMOBTkggR0nDgSBSw4hOIExVWeG7hk5kZAIJDw8WBh8FBQhvdXQtbWVudR8EAgIeB1Zpc2libGVoZBYCAgEPDxYCHwIFFcSQxIJORyBLw50gTcOUTiBI4buMQ2RkAgsPDxYEHwUFCG91dC1tZW51HwQCAmRkAg0PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBQdYRU0gVEtCZGQCDw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFEFhFTSDEkEnhu4JNIERBTkhkZAIRDw8WBB8FBQhvdXQtbWVudR8EAgJkFgJmDw8WAh8CBQ5YRU0gTOG7ikNIIFRISWRkAhMPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAgIBDw8WAh8CBRRYRU0gTOG7ikNIIFRISSBM4bqgSWRkAhUPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAgIBDw8WAh8CBRFYRU0gTOG7ikNIIFRISSBHS2RkAhcPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAgIBDw8WAh8CBSFHSEkgVMOTTSBU4bquVCBNw5ROIEdJ4bqiTkcgROG6oFlkZAIZDw8WBB8FBQhvdXQtbWVudR8EAgJkZAIbDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUOWEVNIEjhu4xDIFBIw41kZAIdDw8WBB8FBQhvdXQtbWVudR8EAgJkZAIfDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgULWEVNIMSQSeG7gk1kZAIhDw8WBh8FBQhvdXQtbWVudR8EAgIfBmhkFgICAQ8PFgIfAgUTxJBJ4buCTSBL4buyIFbhu4xOR2RkAiMPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRhL4bq+VCBRVeG6oiDEkEnhu4JNIERBTkhkZAIlDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUWS1EgxJBJ4buCTSBEQU5IIE9OTElORWRkAicPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRtYRU0gxJBJ4buCTSBEQU5IIFNJTkggVknDik5kZAIpDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUfR0nhuqJORyBWScOKTiBU4buwIMSQSeG7gk0gREFOSGRkAisPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBQlYRU0gQ1TEkFRkZAItDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgULWEVNIE3DlE4gVFFkZAIvDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUkxJDDgU5IIEdJw4EgS+G6vlQgUVXhuqIgUsOITiBMVVnhu4ZOZGQCMQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFJsSQw4FOSCBHScOBIEtRIFLDiE4gTFVZ4buGTiBTSU5IIFZJw4pOZGQCMw8PFgYfBQUIb3V0LW1lbnUfBAICHwZoZBYCAgEPDxYCHwIFElPhu6xBIFRUIEPDgSBOSMOCTmRkAjUPDxYGHwUFCG91dC1tZW51HwQCAh8GZ2QWAgIBDw8WAh8CBQ5Hw5NQIMOdIEtJ4bq+TmRkAjcPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAmYPDxYCHwIFEFPhu6xBIEzDnSBM4buKQ0hkZAI5Dw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUVUVXhuqJOIEzDnSBTSU5IIFZJw4pOZGQCOw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFIkvhur5UIFFV4bqiIFNJTkggVknDik4gxJDDgU5IIEdJw4FkZAI9Dw8WBB8FBQhvdXQtbWVudR8EAgJkZAI/Dw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ9kFgJmDw8WAh8CBRnEkMOBTkggR0nDgSBHSeG6ok5HIEThuqBZZGQCQQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFFMSQxIJORyBLw50gVEhJIEzhuqBJZGQCQw8PFgQfBQUIb3V0LW1lbnUfBAICZGQCRQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFEsSQSyBDSFVZw4pOIE5Hw4BOSGRkAkcPDxYEHwUFCG91dC1tZW51HwQCAmRkAkkPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRZLUSBYw4lUIFThu5BUIE5HSEnhu4ZQZGQCSw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHUtRIFjDiVQgVEnhu4BOIFThu5BUIE5HSEnhu4ZQZGQCTQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFGkPDglUgSOG7jkkgVEjGr+G7nE5HIEfhurZQZGQCTw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFE8SQSyBLSMOTQSBMVeG6rE4gVE5kZAJRDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUOTkjhuqxQIMSQSeG7gk1kZAJTDw8WBB8FBQhvdXQtbWVudR8EAgJkZAJVDw8WBB8FBQhvdXQtbWVudR8EAgJkZAJXDw8WBB8FBQhvdXQtbWVudR8EAgJkZAJZDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUeWEVNIMSQSeG7gk0gTcOUTiBHSeG6ok5HIEThuqBZZGQCWw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHlhFTSDEkEnhu4JNIFThu5RORyBI4buiUCBM4buaUGRkAl0PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRVJTiBLSOG7kEkgTMav4buiTkcgR0RkZAJfDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUOVVBMT0FEIMSQSeG7gk1kZAJhDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUNVEtCIELhu5ggTcOUTmRkAmMPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRRM4buKQ0ggVEhJIELhu5ggTcOUTmRkAmUPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSZUSOG7kE5HIEvDiiBHSeG6ok5HIFZJw4pOIERVWeG7hlQgS1FES2RkAmcPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSJYRU0gVOG7lE5HIEjhu6JQIEtRIEjhu4xDIFThuqxQIFNWZGQCaQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCaw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCZg8PFgIfAgUYS+G6viBIT+G6oENIIEjhu4xDIFThuqxQZGQCbQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCbw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFFEjGr+G7mk5HIEThuqpOIMSQS01IZGQCcQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFIE5I4bqsUCDEkOG7ikEgQ0jhu4ggTkjhuqxOIFPDgUNIZGQCcw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFJMSQxIJORyBLw50gTkjhuqxOIFPDgUNIIE5HT8OASSBHSeG7nGRkAnUPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRvEkMOBTkggR0nDgSBDSOG6pFQgTMav4buiTkdkZAJ3Dw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUfxJAuS8OdIEThu7AgTOG7hCBU4buQVCBOR0hJ4buGUGRkAnkPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRNO4buYUCBDSOG7qE5HIENI4buIZGQCew8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFIVhFTSDEkOG7gCBDxq/GoE5HIFRST05HIELhu5ggTcOUTmRkAn0PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRlEQU5IIFPDgUNIIMSQLkvDnSBYw4lUIFROZGQCfw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHkRBTkggU8OBQ0ggxJAuS8OdIEThu7AgTOG7hCBUTmRkAoEBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUWVEjDlE5HIFRJTiBMVeG6rE4gVsSCTmRkAoMBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUjVFJBIEPhu6hVIFRIw5RORyBUSU4gVOG7kFQgTkdISeG7hlBkZAKFAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFEEPhu7BVIFNJTkggVknDik5kZAKHAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFF8SQxIJORyBLw50gWMOJVCBUVVnhu4JOZGQCiQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSBUSMOUTkcgVElOIEjhu5IgU8agIFRVWeG7gk4gU0lOSGRkAosBDw8WBB8FBQhvdXQtbWVudR8EAgJkZAKNAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFF0jDk0EgxJDGoE4gxJBJ4buGTiBU4busZGQCjwEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRZOR0jhu4ggROG6oFkgROG6oFkgQsOZZGQCkQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRfEkMSCTkcgS8OdIE5HSOG7iCBQSMOJUGRkApMBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUSxJDEgk5HIEvDnSBDT0kgVEhJZGQClQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRJYRU0gTOG7ikNIIENPSSBUSElkZAKXAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFG0tRIE5HSEnDik4gQ+G7qFUgS0hPQSBI4buMQ2RkApkBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUcWEVNIMSQ4buAIFTDgEkgTkNLSCBUSEFNIEdJQWRkApsBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ9kFgJmDw8WAh8CBSTEkMSCTkcgS8OdIFhJTiBHSeG6pFkgQ0jhu6hORyBOSOG6rE5kZAKdAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPZBYCZg8PFgIfAgUZQ+G6rFAgTkjhuqxUIE5HT+G6oEkgVFLDmmRkAp8BDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUbQ+G6rFAgTkjhuqxUIFRIxq/hu5xORyBUUsOaZGQCoQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRVD4bqoTSBOQU5HIFNJTkggVknDik5kZAKjAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHlhFTSBMVeG6rE4gVsSCTiBU4buQVCBOR0hJ4buGUGRkAqUBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUeWEVNIExV4bqsTiBWxIJOIEjGr+G7mk5HIEThuqpOZGQCpwEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBR1YRU0gTFXhuqxOIFbEgk4gUEjhuqJOIEJJ4buGTmRkAqkBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUkQsOBTyBCSeG7glUgUEjhu6RDIFbhu6QgTMODTkggxJDhuqBPZGQCqwEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRxUSOG7kE5HIEvDiiDEkMOTTkcgSFAgT05MSU5FZGQCrQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRfEkMSCTkcgS8OdIEvDnSBUw5pDIFjDgWRkAq8BDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUYVEhBTkggVE/DgU4gS8OdIFTDmkMgWMOBZGQCsQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSJD4bqsUCBOSOG6rFQgTMOdIEzhu4pDSCBLSE9BIEjhu4xDZGQCswEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRdD4bqsUCBOSOG6rFQgVC5USU4gQkhZVGRkArUBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUWWEVNIMSQSeG7gk0gxJDDgyBE4bqgWWRkArcBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUZSU4gS8OKIEtIQUkgR0nhu5wgR0nhuqJOR2RkArkBDw8WBB8FBQhvdXQtbWVudR8EAgJkZAK7AQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCvQEPDxYEHwUFCG91dC1tZW51HwQCAmRkAr8BDw8WBB8FBQhvdXQtbWVudR8EAgJkZALBAQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCBw9kFgICAQ9kFgJmD2QWBgIBDxAPFgQfAgUPVG/DoG4gdHLGsOG7nW5nHwZoZGRkZAIDDxAPFgQfAgUZQ8OhIG5ow6JuIG5nxrDhu51pIGTDuW5nOh8GaGRkZGQCBQ8PFgIfAgUbTmjhuq1wIG3DoyBz4buRIGPhuqduIHhlbTogZGQCCQ9kFggCAQ8PFgIfAgV5Q29weXJpZ2h0IMKpMjAwOSBUcsaw4budbmcgxJBIIFPDoGkgR8Oybi3EkOG6oWkgaOG7jWMgY2jDrW5oIHF1eS4gUXXhuqNuIGzDvSBi4bufaSDhu6Z5IGJhbiBuaMOibiBkw6JuIFRQLiBI4buTIENow60gTWluaGRkAgMPDxYCHwIFC1RyYW5nIENo4bunZGQCBQ8PFgIfAgUtVGhp4bq/dCBr4bq/IGLhu59pIGN0eSBQaOG6p24gbeG7gW0gQW5oIFF1w6JuZGQCBw8PFgIfAgUMxJDhuqd1IFRyYW5nZGRkQgc/fdKXSvTbs36Iug9IJOOL4VE=" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="CA0B0334" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$txtMaSV" Value="3119411042" RecordedValue="3119411042" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$btnOK" Value="OK" RecordedValue="OK" CorrelationBinding="{{FormPostParam1.ctl00$ContentPlaceHolder1$ctl00$btnOK}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="198b2479-6174-4428-9f86-b0f010da915b" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/default.aspx" ThinkTime="12" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://thongtindaotao.sgu.edu.vn/Default.aspx?page=xemdiemthi&amp;id=3119411042" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="http://thongtindaotao.sgu.edu.vn/default.aspx?page=nhapmasv&amp;flag=XemDiemThi" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam37.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam38.id" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;id=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam22.__VIEWSTATE" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="2" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam23.__VIEWSTATEGENERATOR" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="3" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam24.ctl00$ContentPlaceHolder1$ctl00$btnChonHK" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; id=" />
            <RuleParameter Name="Index" Value="9" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam39.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&amp;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam40.id" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="&amp;amp;id=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam25.ctl00$ContentPlaceHolder1$ctl00$btnChonHK" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_ContentPlaceHolder1_ctl00_btnChonHK" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="nhapmasv" RecordedValue="nhapmasv" CorrelationBinding="{{QueryStringParam35.page}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="flag" Value="XemDiemThi" RecordedValue="XemDiemThi" CorrelationBinding="{{QueryStringParam36.flag}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="CA0B0334" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$txtMaSV" Value="3119411042" RecordedValue="3119411042" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$btnOK" Value="OK" RecordedValue="OK" CorrelationBinding="{{FormPostParam21.ctl00$ContentPlaceHolder1$ctl00$btnOK}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="5aca5297-06f0-4167-862a-4ccfc880c1c5" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/Default.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="POST" Guid="561844b4-9e96-4586-ac28-771f89aa8599" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/Default.aspx" ThinkTime="7" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="http://thongtindaotao.sgu.edu.vn/Default.aspx?page=xemdiemthi&amp;id=3119411042" />
          </Headers>
          <ExtractionRules>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
              <RuleParameters>
                <RuleParameter Name="Required" Value="True" />
                <RuleParameter Name="HtmlDecode" Value="True" />
              </RuleParameters>
            </ExtractionRule>
          </ExtractionRules>
          <CorrelationExtractionRules>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam41.page" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="?page=" />
                <RuleParameter Name="EndsWith" Value="&amp;" />
                <RuleParameter Name="Index" Value="0" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam42.id" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="&amp;amp;id=" />
                <RuleParameter Name="EndsWith" Value="&quot;" />
                <RuleParameter Name="Index" Value="0" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam26.__VIEWSTATE" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="lue=&quot;" />
                <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
                <RuleParameter Name="Index" Value="2" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam27.__VIEWSTATEGENERATOR" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="lue=&quot;" />
                <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
                <RuleParameter Name="Index" Value="3" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam28.ctl00$ContentPlaceHolder1$ctl00$txtChonHK" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="lue=&quot;" />
                <RuleParameter Name="EndsWith" Value="&quot; id=" />
                <RuleParameter Name="Index" Value="9" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam43.page" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="?page=" />
                <RuleParameter Name="EndsWith" Value="&amp;" />
                <RuleParameter Name="Index" Value="0" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam44.id" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="StartsWith" Value="&amp;amp;id=" />
                <RuleParameter Name="EndsWith" Value="&quot;" />
                <RuleParameter Name="Index" Value="0" />
                <RuleParameter Name="IgnoreCase" Value="False" />
                <RuleParameter Name="UseRegularExpression" Value="False" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
              </RuleParameters>
            </ExtractionRule>
            <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam29.ctl00$ContentPlaceHolder1$ctl00$txtChonHK" DisplayName="" Description="">
              <RuleParameters>
                <RuleParameter Name="Name" Value="ctl00_ContentPlaceHolder1_ctl00_txtChonHK" />
                <RuleParameter Name="HtmlDecode" Value="True" />
                <RuleParameter Name="Required" Value="False" />
                <RuleParameter Name="Index" Value="0" />
              </RuleParameters>
            </ExtractionRule>
          </CorrelationExtractionRules>
          <QueryStringParameters>
            <QueryStringParameter Name="page" Value="xemdiemthi" RecordedValue="xemdiemthi" CorrelationBinding="{{QueryStringParam39.page}}" UrlEncode="False" UseToGroupResults="False" />
            <QueryStringParameter Name="id" Value="3119411042" RecordedValue="3119411042" CorrelationBinding="{{QueryStringParam40.id}}" UrlEncode="False" UseToGroupResults="False" />
          </QueryStringParameters>
          <FormPostHttpBody>
            <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="CA0B0334" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$txtChonHK" Value="20078" RecordedValue="20078" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$btnChonHK" Value="Xem" RecordedValue="Xem" CorrelationBinding="{{FormPostParam25.ctl00$ContentPlaceHolder1$ctl00$btnChonHK}}" UrlEncode="True" />
          </FormPostHttpBody>
        </Request>
      </DependentRequests>
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="xemdiemthi" RecordedValue="xemdiemthi" CorrelationBinding="{{QueryStringParam37.page}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="id" Value="3119411042" RecordedValue="3119411042" CorrelationBinding="{{QueryStringParam38.id}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="__EVENTTARGET" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="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" RecordedValue="/wEPDwUKLTMxNjc3NTM3NQ9kFgJmD2QWBGYPZBYEAgEPFgIeB2NvbnRlbnRkZAICDxYCHgRocmVmBSkuL01lc3NhZ2VGaWxlL2Zhdmljb24tZGFpLWhvYy1zYWktZ29uLmpwZ2QCAQ9kFggCAw9kFgJmD2QWAgIBD2QWDGYPDxYCHgRUZXh0BQxDaMOgbyBi4bqhbiBkZAIBDw8WBB4JRm9yZUNvbG9yCQAz//8eBF8hU0ICBGRkAgIPDxYEHwMJADP//x8EAgRkZAIDDw8WBh8CBRhUaGF5IMSR4buVaSBt4bqtdCBraOG6qXUfAwkAM///HwQCBGRkAgQPDxYEHwMJADP//x8EAgRkZAIFDw8WBh8CBQ3EkMSDbmcgTmjhuq1wHwMJADP//x8EAgRkZAIFD2QWwgECAQ8PFgQeCENzc0NsYXNzBQhvdXQtbWVudR8EAgJkFgJmDw8WAh8CBQtUUkFORyBDSOG7pmRkAgMPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRdEQU5IIE3hu6RDIENI4buoQyBOxIJOR2RkAgUPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRtETSBDSOG7qEMgTsSCTkcgxJDDgU5IIEdJw4FkZAIHDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUjUVXhuqJOIEzDnSDEkMOBTkggR0nDgSBSw4hOIExVWeG7hk5kZAIJDw8WBh8FBQhvdXQtbWVudR8EAgIeB1Zpc2libGVoZBYCAgEPDxYCHwIFFcSQxIJORyBLw50gTcOUTiBI4buMQ2RkAgsPDxYEHwUFCG91dC1tZW51HwQCAmRkAg0PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBQdYRU0gVEtCZGQCDw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFEFhFTSDEkEnhu4JNIERBTkhkZAIRDw8WBB8FBQhvdXQtbWVudR8EAgJkFgJmDw8WAh8CBQ5YRU0gTOG7ikNIIFRISWRkAhMPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAgIBDw8WAh8CBRRYRU0gTOG7ikNIIFRISSBM4bqgSWRkAhUPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAgIBDw8WAh8CBRFYRU0gTOG7ikNIIFRISSBHS2RkAhcPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAgIBDw8WAh8CBSFHSEkgVMOTTSBU4bquVCBNw5ROIEdJ4bqiTkcgROG6oFlkZAIZDw8WBB8FBQhvdXQtbWVudR8EAgJkZAIbDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUOWEVNIEjhu4xDIFBIw41kZAIdDw8WBB8FBQhvdXQtbWVudR8EAgJkZAIfDw8WBB8FBQlvdmVyLW1lbnUfBAICZBYCAgEPDxYCHwIFC1hFTSDEkEnhu4JNZGQCIQ8PFgYfBQUIb3V0LW1lbnUfBAICHwZoZBYCAgEPDxYCHwIFE8SQSeG7gk0gS+G7siBW4buMTkdkZAIjDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUYS+G6vlQgUVXhuqIgxJBJ4buCTSBEQU5IZGQCJQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFFktRIMSQSeG7gk0gREFOSCBPTkxJTkVkZAInDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUbWEVNIMSQSeG7gk0gREFOSCBTSU5IIFZJw4pOZGQCKQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFH0dJ4bqiTkcgVknDik4gVOG7sCDEkEnhu4JNIERBTkhkZAIrDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUJWEVNIENUxJBUZGQCLQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFC1hFTSBNw5ROIFRRZGQCLw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFJMSQw4FOSCBHScOBIEvhur5UIFFV4bqiIFLDiE4gTFVZ4buGTmRkAjEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSbEkMOBTkggR0nDgSBLUSBSw4hOIExVWeG7hk4gU0lOSCBWScOKTmRkAjMPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAgIBDw8WAh8CBRJT4busQSBUVCBDw4EgTkjDgk5kZAI1Dw8WBh8FBQhvdXQtbWVudR8EAgIfBmdkFgICAQ8PFgIfAgUOR8OTUCDDnSBLSeG6vk5kZAI3Dw8WBh8FBQhvdXQtbWVudR8EAgIfBmhkFgJmDw8WAh8CBRBT4busQSBMw50gTOG7ikNIZGQCOQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFFVFV4bqiTiBMw50gU0lOSCBWScOKTmRkAjsPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSJL4bq+VCBRVeG6oiBTSU5IIFZJw4pOIMSQw4FOSCBHScOBZGQCPQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCPw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPZBYCZg8PFgIfAgUZxJDDgU5IIEdJw4EgR0nhuqJORyBE4bqgWWRkAkEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRTEkMSCTkcgS8OdIFRISSBM4bqgSWRkAkMPDxYEHwUFCG91dC1tZW51HwQCAmRkAkUPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRLEkEsgQ0hVWcOKTiBOR8OATkhkZAJHDw8WBB8FBQhvdXQtbWVudR8EAgJkZAJJDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUWS1EgWMOJVCBU4buQVCBOR0hJ4buGUGRkAksPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBR1LUSBYw4lUIFRJ4buATiBU4buQVCBOR0hJ4buGUGRkAk0PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRpDw4JVIEjhu45JIFRIxq/hu5xORyBH4bq2UGRkAk8PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRPEkEsgS0jDk0EgTFXhuqxOIFROZGQCUQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFDk5I4bqsUCDEkEnhu4JNZGQCUw8PFgQfBQUIb3V0LW1lbnUfBAICZGQCVQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCVw8PFgQfBQUIb3V0LW1lbnUfBAICZGQCWQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHlhFTSDEkEnhu4JNIE3DlE4gR0nhuqJORyBE4bqgWWRkAlsPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBR5YRU0gxJBJ4buCTSBU4buUTkcgSOG7olAgTOG7mlBkZAJdDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUVSU4gS0jhu5BJIEzGr+G7ok5HIEdEZGQCXw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFDlVQTE9BRCDEkEnhu4JNZGQCYQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFDVRLQiBC4buYIE3DlE5kZAJjDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUUTOG7ikNIIFRISSBC4buYIE3DlE5kZAJlDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUmVEjhu5BORyBLw4ogR0nhuqJORyBWScOKTiBEVVnhu4ZUIEtRREtkZAJnDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUiWEVNIFThu5RORyBI4buiUCBLUSBI4buMQyBU4bqsUCBTVmRkAmkPDxYEHwUFCG91dC1tZW51HwQCAmRkAmsPDxYEHwUFCG91dC1tZW51HwQCAmQWAmYPDxYCHwIFGEvhur4gSE/huqBDSCBI4buMQyBU4bqsUGRkAm0PDxYEHwUFCG91dC1tZW51HwQCAmRkAm8PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRRIxq/hu5pORyBE4bqqTiDEkEtNSGRkAnEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSBOSOG6rFAgxJDhu4pBIENI4buIIE5I4bqsTiBTw4FDSGRkAnMPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSTEkMSCTkcgS8OdIE5I4bqsTiBTw4FDSCBOR0/DgEkgR0nhu5xkZAJ1Dw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUbxJDDgU5IIEdJw4EgQ0jhuqRUIEzGr+G7ok5HZGQCdw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFH8SQLkvDnSBE4buwIEzhu4QgVOG7kFQgTkdISeG7hlBkZAJ5Dw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUTTuG7mFAgQ0jhu6hORyBDSOG7iGRkAnsPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSFYRU0gxJDhu4AgQ8avxqBORyBUUk9ORyBC4buYIE3DlE5kZAJ9Dw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUZREFOSCBTw4FDSCDEkC5Lw50gWMOJVCBUTmRkAn8PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBR5EQU5IIFPDgUNIIMSQLkvDnSBE4buwIEzhu4QgVE5kZAKBAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFFlRIw5RORyBUSU4gTFXhuqxOIFbEgk5kZAKDAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFI1RSQSBD4buoVSBUSMOUTkcgVElOIFThu5BUIE5HSEnhu4ZQZGQChQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRBD4buwVSBTSU5IIFZJw4pOZGQChwEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRfEkMSCTkcgS8OdIFjDiVQgVFVZ4buCTmRkAokBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUgVEjDlE5HIFRJTiBI4buSIFPGoCBUVVnhu4JOIFNJTkhkZAKLAQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCjQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRdIw5NBIMSQxqBOIMSQSeG7hk4gVOG7rGRkAo8BDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUWTkdI4buIIEThuqBZIEThuqBZIELDmWRkApEBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUXxJDEgk5HIEvDnSBOR0jhu4ggUEjDiVBkZAKTAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFEsSQxIJORyBLw50gQ09JIFRISWRkApUBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUSWEVNIEzhu4pDSCBDT0kgVEhJZGQClwEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRtLUSBOR0hJw4pOIEPhu6hVIEtIT0EgSOG7jENkZAKZAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHFhFTSDEkOG7gCBUw4BJIE5DS0ggVEhBTSBHSUFkZAKbAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPZBYCZg8PFgIfAgUkxJDEgk5HIEvDnSBYSU4gR0nhuqRZIENI4buoTkcgTkjhuqxOZGQCnQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBD2QWAmYPDxYCHwIFGUPhuqxQIE5I4bqsVCBOR0/huqBJIFRSw5pkZAKfAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFG0PhuqxQIE5I4bqsVCBUSMav4bucTkcgVFLDmmRkAqEBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUVQ+G6qE0gTkFORyBTSU5IIFZJw4pOZGQCowEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBR5YRU0gTFXhuqxOIFbEgk4gVOG7kFQgTkdISeG7hlBkZAKlAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHlhFTSBMVeG6rE4gVsSCTiBIxq/hu5pORyBE4bqqTmRkAqcBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUdWEVNIExV4bqsTiBWxIJOIFBI4bqiTiBCSeG7hk5kZAKpAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFJELDgU8gQknhu4JVIFBI4bukQyBW4bukIEzDg05IIMSQ4bqgT2RkAqsBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUcVEjhu5BORyBLw4ogxJDDk05HIEhQIE9OTElORWRkAq0BDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUXxJDEgk5HIEvDnSBLw50gVMOaQyBYw4FkZAKvAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFGFRIQU5IIFRPw4FOIEvDnSBUw5pDIFjDgWRkArEBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUiQ+G6rFAgTkjhuqxUIEzDnSBM4buKQ0ggS0hPQSBI4buMQ2RkArMBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUXQ+G6rFAgTkjhuqxUIFQuVElOIEJIWVRkZAK1AQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFFlhFTSDEkEnhu4JNIMSQw4MgROG6oFlkZAK3AQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFGUlOIEvDiiBLSEFJIEdJ4bucIEdJ4bqiTkdkZAK5AQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCuwEPDxYEHwUFCG91dC1tZW51HwQCAmRkAr0BDw8WBB8FBQhvdXQtbWVudR8EAgJkZAK/AQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCwQEPDxYEHwUFCG91dC1tZW51HwQCAmRkAgcPZBYCAgEPZBYCZg9kFgwCBQ9kFgQCAQ8PFgIfBmhkZAIDDxAPFgIfBmhkZBYAZAIHD2QWJmYPDxYCHwIFDk3DoyBzaW5oIHZpw6puZGQCAQ8PFgIfAgUKMzExOTQxMTA0MmRkAgIPDxYCHwIFD1TDqm4gc2luaCB2acOqbmRkAgMPDxYCHwIFFU5ndXnhu4VuIEjhu691IE5naMSpYWRkAgQPDxYCHwIFBVBow6FpZGQCBQ8PFgIfAgUDTmFtZGQCBg8PFgIfAgUJTsahaSBzaW5oZGQCBw8PFgIfAgUNUXXhuqNuZyBOZ8OjaWRkAggPDxYCHwIFBUzhu5twZGQCCQ8PFgIfAgVaRENUMTE5QzIoIMSQ4bqhaSBo4buNYyBjaMOtbmggcXV5IC0gbmfDoG5oIEPDtG5nIG5naOG7hyB0aMO0bmcgdGluIChDTEMpIC0gSy4xOSAtIEzhu5twIDIpZGQCCg8PFgIfAgUGTmfDoG5oZGQCCw8PFgIfAgUXQ8O0bmcgbmdo4buHIHRow7RuZyB0aW5kZAIODw8WAh8CBRdDw7RuZyBuZ2jhu4cgdGjDtG5nIHRpbmRkAg8PDxYCHwIFEEjhu4cgxJHDoG8gdOG6oW9kZAIQDw8WAh8CBRfEkOG6oWkgaOG7jWMgY2jDrW5oIHF1eWRkAhEPDxYCHwIFC0tow7NhIGjhu41jZGQCEg8PFgIfAgUJMjAxOS0yMDI0ZGQCEw8PFgIfAgUWQ+G7kSB24bqlbiBo4buNYyB04bqtcGRkAhQPDxYCHwIFIFBow7luZyBUaMOhaSBUaGnDqm4gVHJhbmcoMTAyMjcpZGQCCw9kFgwCAQ8PFgIfAgUcSOG7jWMga+G7syAxIE7Eg20gaOG7jWMgMjAyMWRkAgMPDxYCHwIFLU5o4bqtcCBo4buNYyBr4buzIHhlbSDEkWnhu4NtIHRoaSAodmQgMjAwNjEpOmRkAgcPDxYCHwIFA1hlbWRkAg0PZBYCAgEPZBYCZg8PFgQfBQUKdmlldy10YWJsZR8EAgJkZAIPDw8WAh8CBRxI4buNYyBr4buzIDEgTsSDbSBo4buNYyAyMDIxZGQCEw8PFgIfAgVFKCBE4buvIGxp4buHdSDEkcaw4bujYyBj4bqtcCBuaOG6rXQgdsOgbyBsw7pjOiAxNTozNCBOZ8OgeTogOS80LzIwMjIpZGQCDQ8PFgIfBmhkFgQCAw8QZGQWAGQCBQ88KwANAGQCDw8WAh4JaW5uZXJodG1sBQ5JTiDEkEnhu4JNIFRISWQCEQ8PFgIfAgURWFXhuqRUIEZJTEUgRVhDRUxkZAIJD2QWCAIBDw8WAh8CBXlDb3B5cmlnaHQgwqkyMDA5IFRyxrDhu51uZyDEkEggU8OgaSBHw7JuLcSQ4bqhaSBo4buNYyBjaMOtbmggcXV5LiBRdeG6o24gbMO9IGLhu59pIOG7pnkgYmFuIG5ow6JuIGTDom4gVFAuIEjhu5MgQ2jDrSBNaW5oZGQCAw8PFgIfAgULVHJhbmcgQ2jhu6dkZAIFDw8WAh8CBS1UaGnhur90IGvhur8gYuG7n2kgY3R5IFBo4bqnbiBt4buBbSBBbmggUXXDom5kZAIHDw8WAh8CBQzEkOG6p3UgVHJhbmdkZBgCBR5fX0NvbnRyb2xzUmVxdWlyZVBvc3RCYWNrS2V5X18WAgU6Y3RsMDAkQ29udGVudFBsYWNlSG9sZGVyMSRjdGwwMCRNZXNzYWdlQm94MSRpbWdDbG9zZUJ1dHRvbgUxY3RsMDAkQ29udGVudFBsYWNlSG9sZGVyMSRjdGwwMCRNZXNzYWdlQm94MSRidG5PawUpY3RsMDAkQ29udGVudFBsYWNlSG9sZGVyMSRjdGwwMCRndlhlbURpZW0PZ2TyZIMZQg73OYDbFVnOost/zHwX5Q==" CorrelationBinding="{{FormPostParam22.__VIEWSTATE}}" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="CA0B0334" RecordedValue="CA0B0334" CorrelationBinding="{{FormPostParam23.__VIEWSTATEGENERATOR}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$txtChonHK" Value="20078" RecordedValue="20078" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$btnChonHK" Value="Xem" RecordedValue="Xem" CorrelationBinding="{{FormPostParam24.ctl00$ContentPlaceHolder1$ctl00$btnChonHK}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="8d096976-28e5-4dde-94d4-8ce6395ac23d" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/Default.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://thongtindaotao.sgu.edu.vn/default.aspx?page=dangnhap" ReportingName="" IgnoreHttpStatusCode="False">
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="xemdiemthi" RecordedValue="xemdiemthi" CorrelationBinding="{{QueryStringParam41.page}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="id" Value="3119411042" RecordedValue="3119411042" CorrelationBinding="{{QueryStringParam42.id}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$Header1$Logout1$lbtnLogOut" RecordedValue="ctl00$Header1$Logout1$lbtnLogOut" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="/wEPDwUKLTMxNjc3NTM3NQ9kFgJmD2QWBGYPZBYEAgEPFgIeB2NvbnRlbnRkZAICDxYCHgRocmVmBSkuL01lc3NhZ2VGaWxlL2Zhdmljb24tZGFpLWhvYy1zYWktZ29uLmpwZ2QCAQ9kFggCAw9kFgJmD2QWAgIBD2QWDGYPDxYCHgRUZXh0BQxDaMOgbyBi4bqhbiBkZAIBDw8WBh8CBQ9YZW0gdGjDtG5nIGLDoW8eCUZvcmVDb2xvcgkAM///HgRfIVNCAgRkZAICDw8WBh8CBQMgfCAfAwkAM///HwQCBGRkAgMPDxYGHwIFGFRoYXkgxJHhu5VpIG3huq10IGto4bqpdR8DCQAz//8fBAIEZGQCBA8PFgYfAgUDIHwgHwMJADP//x8EAgRkZAIFDw8WBh8CBQ3EkMSDbmcgTmjhuq1wHwMJADP//x8EAgRkZAIFD2QWwgECAQ8PFgQeCENzc0NsYXNzBQhvdXQtbWVudR8EAgJkFgJmDw8WAh8CBQtUUkFORyBDSOG7pmRkAgMPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRdEQU5IIE3hu6RDIENI4buoQyBOxIJOR2RkAgUPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRtETSBDSOG7qEMgTsSCTkcgxJDDgU5IIEdJw4FkZAIHDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUjUVXhuqJOIEzDnSDEkMOBTkggR0nDgSBSw4hOIExVWeG7hk5kZAIJDw8WBh8FBQhvdXQtbWVudR8EAgIeB1Zpc2libGVoZBYCAgEPDxYCHwIFFcSQxIJORyBLw50gTcOUTiBI4buMQ2RkAgsPDxYEHwUFCG91dC1tZW51HwQCAmRkAg0PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBQdYRU0gVEtCZGQCDw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFEFhFTSDEkEnhu4JNIERBTkhkZAIRDw8WBB8FBQhvdXQtbWVudR8EAgJkFgJmDw8WAh8CBQ5YRU0gTOG7ikNIIFRISWRkAhMPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAgIBDw8WAh8CBRRYRU0gTOG7ikNIIFRISSBM4bqgSWRkAhUPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAgIBDw8WAh8CBRFYRU0gTOG7ikNIIFRISSBHS2RkAhcPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAgIBDw8WAh8CBSFHSEkgVMOTTSBU4bquVCBNw5ROIEdJ4bqiTkcgROG6oFlkZAIZDw8WBB8FBQhvdXQtbWVudR8EAgJkZAIbDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUOWEVNIEjhu4xDIFBIw41kZAIdDw8WBB8FBQhvdXQtbWVudR8EAgJkZAIfDw8WBB8FBQlvdmVyLW1lbnUfBAICZBYCAgEPDxYCHwIFC1hFTSDEkEnhu4JNZGQCIQ8PFgYfBQUIb3V0LW1lbnUfBAICHwZoZBYCAgEPDxYCHwIFE8SQSeG7gk0gS+G7siBW4buMTkdkZAIjDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUYS+G6vlQgUVXhuqIgxJBJ4buCTSBEQU5IZGQCJQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFFktRIMSQSeG7gk0gREFOSCBPTkxJTkVkZAInDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUbWEVNIMSQSeG7gk0gREFOSCBTSU5IIFZJw4pOZGQCKQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFH0dJ4bqiTkcgVknDik4gVOG7sCDEkEnhu4JNIERBTkhkZAIrDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUJWEVNIENUxJBUZGQCLQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFC1hFTSBNw5ROIFRRZGQCLw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFJMSQw4FOSCBHScOBIEvhur5UIFFV4bqiIFLDiE4gTFVZ4buGTmRkAjEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSbEkMOBTkggR0nDgSBLUSBSw4hOIExVWeG7hk4gU0lOSCBWScOKTmRkAjMPDxYGHwUFCG91dC1tZW51HwQCAh8GaGQWAgIBDw8WAh8CBRJT4busQSBUVCBDw4EgTkjDgk5kZAI1Dw8WBh8FBQhvdXQtbWVudR8EAgIfBmdkFgICAQ8PFgIfAgUOR8OTUCDDnSBLSeG6vk5kZAI3Dw8WBh8FBQhvdXQtbWVudR8EAgIfBmhkFgJmDw8WAh8CBRBT4busQSBMw50gTOG7ikNIZGQCOQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFFVFV4bqiTiBMw50gU0lOSCBWScOKTmRkAjsPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSJL4bq+VCBRVeG6oiBTSU5IIFZJw4pOIMSQw4FOSCBHScOBZGQCPQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCPw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPZBYCZg8PFgIfAgUZxJDDgU5IIEdJw4EgR0nhuqJORyBE4bqgWWRkAkEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRTEkMSCTkcgS8OdIFRISSBM4bqgSWRkAkMPDxYEHwUFCG91dC1tZW51HwQCAmRkAkUPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRLEkEsgQ0hVWcOKTiBOR8OATkhkZAJHDw8WBB8FBQhvdXQtbWVudR8EAgJkZAJJDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUWS1EgWMOJVCBU4buQVCBOR0hJ4buGUGRkAksPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBR1LUSBYw4lUIFRJ4buATiBU4buQVCBOR0hJ4buGUGRkAk0PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRpDw4JVIEjhu45JIFRIxq/hu5xORyBH4bq2UGRkAk8PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRPEkEsgS0jDk0EgTFXhuqxOIFROZGQCUQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFDk5I4bqsUCDEkEnhu4JNZGQCUw8PFgQfBQUIb3V0LW1lbnUfBAICZGQCVQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCVw8PFgQfBQUIb3V0LW1lbnUfBAICZGQCWQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHlhFTSDEkEnhu4JNIE3DlE4gR0nhuqJORyBE4bqgWWRkAlsPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBR5YRU0gxJBJ4buCTSBU4buUTkcgSOG7olAgTOG7mlBkZAJdDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUVSU4gS0jhu5BJIEzGr+G7ok5HIEdEZGQCXw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFDlVQTE9BRCDEkEnhu4JNZGQCYQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFDVRLQiBC4buYIE3DlE5kZAJjDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUUTOG7ikNIIFRISSBC4buYIE3DlE5kZAJlDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUmVEjhu5BORyBLw4ogR0nhuqJORyBWScOKTiBEVVnhu4ZUIEtRREtkZAJnDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUiWEVNIFThu5RORyBI4buiUCBLUSBI4buMQyBU4bqsUCBTVmRkAmkPDxYEHwUFCG91dC1tZW51HwQCAmRkAmsPDxYEHwUFCG91dC1tZW51HwQCAmQWAmYPDxYCHwIFGEvhur4gSE/huqBDSCBI4buMQyBU4bqsUGRkAm0PDxYEHwUFCG91dC1tZW51HwQCAmRkAm8PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRRIxq/hu5pORyBE4bqqTiDEkEtNSGRkAnEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSBOSOG6rFAgxJDhu4pBIENI4buIIE5I4bqsTiBTw4FDSGRkAnMPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSTEkMSCTkcgS8OdIE5I4bqsTiBTw4FDSCBOR0/DgEkgR0nhu5xkZAJ1Dw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUbxJDDgU5IIEdJw4EgQ0jhuqRUIEzGr+G7ok5HZGQCdw8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFH8SQLkvDnSBE4buwIEzhu4QgVOG7kFQgTkdISeG7hlBkZAJ5Dw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUTTuG7mFAgQ0jhu6hORyBDSOG7iGRkAnsPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSFYRU0gxJDhu4AgQ8avxqBORyBUUk9ORyBC4buYIE3DlE5kZAJ9Dw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUZREFOSCBTw4FDSCDEkC5Lw50gWMOJVCBUTmRkAn8PDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBR5EQU5IIFPDgUNIIMSQLkvDnSBE4buwIEzhu4QgVE5kZAKBAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFFlRIw5RORyBUSU4gTFXhuqxOIFbEgk5kZAKDAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFJ1RSQSBD4buoVSBWxIJOIELhurBORyBWw4AgQ0jhu6hORyBDSOG7iGRkAoUBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUQQ+G7sFUgU0lOSCBWScOKTmRkAocBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUXxJDEgk5HIEvDnSBYw4lUIFRVWeG7gk5kZAKJAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFIFRIw5RORyBUSU4gSOG7kiBTxqAgVFVZ4buCTiBTSU5IZGQCiwEPDxYEHwUFCG91dC1tZW51HwQCAmRkAo0BDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUXSMOTQSDEkMagTiDEkEnhu4ZOIFThu6xkZAKPAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFFk5HSOG7iCBE4bqgWSBE4bqgWSBCw5lkZAKRAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFF8SQxIJORyBLw50gTkdI4buIIFBIw4lQZGQCkwEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRLEkMSCTkcgS8OdIENPSSBUSElkZAKVAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFElhFTSBM4buKQ0ggQ09JIFRISWRkApcBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUbS1EgTkdIScOKTiBD4buoVSBLSE9BIEjhu4xDZGQCmQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRxYRU0gxJDhu4AgVMOASSBOQ0tIIFRIQU0gR0lBZGQCmwEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBD2QWAmYPDxYCHwIFJMSQxIJORyBLw50gWElOIEdJ4bqkWSBDSOG7qE5HIE5I4bqsTmRkAp0BDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ9kFgJmDw8WAh8CBRlD4bqsUCBOSOG6rFQgTkdP4bqgSSBUUsOaZGQCnwEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRtD4bqsUCBOSOG6rFQgVEjGr+G7nE5HIFRSw5pkZAKhAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFFUPhuqhNIE5BTkcgU0lOSCBWScOKTmRkAqMBDw8WBB8FBQhvdXQtbWVudR8EAgJkFgICAQ8PFgIfAgUeWEVNIExV4bqsTiBWxIJOIFThu5BUIE5HSEnhu4ZQZGQCpQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBR5YRU0gTFXhuqxOIFbEgk4gSMav4buaTkcgROG6qk5kZAKnAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHVhFTSBMVeG6rE4gVsSCTiBQSOG6ok4gQknhu4ZOZGQCqQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBSRCw4FPIEJJ4buCVSBQSOG7pEMgVuG7pCBMw4NOSCDEkOG6oE9kZAKrAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFHFRI4buQTkcgS8OKIMSQw5NORyBIUCBPTkxJTkVkZAKtAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFF8SQxIJORyBLw50gS8OdIFTDmkMgWMOBZGQCrwEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRhUSEFOSCBUT8OBTiBLw50gVMOaQyBYw4FkZAKxAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFIkPhuqxQIE5I4bqsVCBMw50gTOG7ikNIIEtIT0EgSOG7jENkZAKzAQ8PFgQfBQUIb3V0LW1lbnUfBAICZBYCAgEPDxYCHwIFF0PhuqxQIE5I4bqsVCBULlRJTiBCSFlUZGQCtQEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRZYRU0gxJBJ4buCTSDEkMODIEThuqBZZGQCtwEPDxYEHwUFCG91dC1tZW51HwQCAmQWAgIBDw8WAh8CBRlJTiBLw4ogS0hBSSBHSeG7nCBHSeG6ok5HZGQCuQEPDxYEHwUFCG91dC1tZW51HwQCAmRkArsBDw8WBB8FBQhvdXQtbWVudR8EAgJkZAK9AQ8PFgQfBQUIb3V0LW1lbnUfBAICZGQCvwEPDxYEHwUFCG91dC1tZW51HwQCAmRkAsEBDw8WBB8FBQhvdXQtbWVudR8EAgJkZAIHD2QWAgIBD2QWAmYPZBYMAgUPZBYEAgEPDxYEHwIFCE5nw6BuaDogHwZoZGQCAw8QDxYCHwZoZGQWAGQCBw9kFiZmDw8WAh8CBQ5Nw6Mgc2luaCB2acOqbmRkAgEPDxYCHwIFCjMxMTk0MTEwNDJkZAICDw8WAh8CBQ9Uw6puIHNpbmggdmnDqm5kZAIDDw8WAh8CBRVOZ3V54buFbiBI4buvdSBOZ2jEqWFkZAIEDw8WAh8CBQVQaMOhaWRkAgUPDxYCHwIFA05hbWRkAgYPDxYCHwIFCU7GoWkgc2luaGRkAgcPDxYCHwIFDVF14bqjbmcgTmfDo2lkZAIIDw8WAh8CBQVM4bubcGRkAgkPDxYCHwIFWkRDVDExOUMyKCDEkOG6oWkgaOG7jWMgY2jDrW5oIHF1eSAtIG5nw6BuaCBDw7RuZyBuZ2jhu4cgdGjDtG5nIHRpbiAoQ0xDKSAtIEsuMTkgLSBM4bubcCAyKWRkAgoPDxYCHwIFBk5nw6BuaGRkAgsPDxYCHwIFF0PDtG5nIG5naOG7hyB0aMO0bmcgdGluZGQCDg8PFgIfAgUXQ8O0bmcgbmdo4buHIHRow7RuZyB0aW5kZAIPDw8WAh8CBRBI4buHIMSRw6BvIHThuqFvZGQCEA8PFgIfAgUXxJDhuqFpIGjhu41jIGNow61uaCBxdXlkZAIRDw8WAh8CBQtLaMOzYSBo4buNY2RkAhIPDxYCHwIFCTIwMTktMjAyNGRkAhMPDxYCHwIFFkPhu5EgduG6pW4gaOG7jWMgdOG6rXBkZAIUDw8WAh8CBSBQaMO5bmcgVGjDoWkgVGhpw6puIFRyYW5nKDEwMjI3KWRkAgsPZBYMAgEPDxYCHwIFGVhlbSB04bqldCBj4bqjIGjhu41jIGvDrCBkZAIDDw8WAh8CBS1OaOG6rXAgaOG7jWMga+G7syB4ZW0gxJFp4buDbSB0aGkgKHZkIDIwMDYxKTpkZAIHDw8WAh8CBQNYZW1kZAIND2QWAgIBD2QWAmYPDxYEHwUFCnZpZXctdGFibGUfBAICZGQCDw8PFgIfAgUZWGVtIHThuqV0IGPhuqMgaOG7jWMga8OsIGRkAhMPDxYCHwIFRSggROG7ryBsaeG7h3UgxJHGsOG7o2MgY+G6rXAgbmjhuq10IHbDoG8gbMO6YzogMTU6MzQgTmfDoHk6IDkvNC8yMDIyKWRkAg0PDxYCHwZoZBYEAgMPEGRkFgBkAgUPPCsADQBkAg8PFgIeCWlubmVyaHRtbAUOSU4gxJBJ4buCTSBUSElkAhEPDxYCHwIFEVhV4bqkVCBGSUxFIEVYQ0VMZGQCCQ9kFggCAQ8PFgIfAgV5Q29weXJpZ2h0IMKpMjAwOSBUcsaw4budbmcgxJBIIFPDoGkgR8Oybi3EkOG6oWkgaOG7jWMgY2jDrW5oIHF1eS4gUXXhuqNuIGzDvSBi4bufaSDhu6Z5IGJhbiBuaMOibiBkw6JuIFRQLiBI4buTIENow60gTWluaGRkAgMPDxYCHwIFC1RyYW5nIENo4bunZGQCBQ8PFgIfAgUtVGhp4bq/dCBr4bq/IGLhu59pIGN0eSBQaOG6p24gbeG7gW0gQW5oIFF1w6JuZGQCBw8PFgIfAgUMxJDhuqd1IFRyYW5nZGQYAgUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgIFOmN0bDAwJENvbnRlbnRQbGFjZUhvbGRlcjEkY3RsMDAkTWVzc2FnZUJveDEkaW1nQ2xvc2VCdXR0b24FMWN0bDAwJENvbnRlbnRQbGFjZUhvbGRlcjEkY3RsMDAkTWVzc2FnZUJveDEkYnRuT2sFKWN0bDAwJENvbnRlbnRQbGFjZUhvbGRlcjEkY3RsMDAkZ3ZYZW1EaWVtD2dkNXr6nLe0mCedoxjibNtt7U5TcOE=" RecordedValue="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" CorrelationBinding="{{FormPostParam26.__VIEWSTATE}}" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="CA0B0334" RecordedValue="CA0B0334" CorrelationBinding="{{FormPostParam27.__VIEWSTATEGENERATOR}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$txtChonHK" Value="20078" RecordedValue="20078" CorrelationBinding="{{FormPostParam28.ctl00$ContentPlaceHolder1$ctl00$txtChonHK}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="9b5d5929-ff5f-4c2a-973d-2f71562d98e6" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/Default.aspx" ThinkTime="10" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://thongtindaotao.sgu.edu.vn/default.aspx?page=dangnhap" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="http://thongtindaotao.sgu.edu.vn/Default.aspx?page=xemdiemthi&amp;id=3119411042" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam45.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam30.__VIEWSTATE" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="2" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam31.__VIEWSTATEGENERATOR" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="3" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam32.ctl00$ContentPlaceHolder1$ctl00$btnDangNhap" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; id=" />
            <RuleParameter Name="Index" Value="9" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam46.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam33.ctl00$ContentPlaceHolder1$ctl00$btnDangNhap" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="Name" Value="ctl00_ContentPlaceHolder1_ctl00_btnDangNhap" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
            <RuleParameter Name="Index" Value="0" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="xemdiemthi" RecordedValue="xemdiemthi" CorrelationBinding="{{QueryStringParam43.page}}" UrlEncode="False" UseToGroupResults="False" />
        <QueryStringParameter Name="id" Value="3119411042" RecordedValue="3119411042" CorrelationBinding="{{QueryStringParam44.id}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$Header1$Logout1$lbtnLogOut" RecordedValue="ctl00$Header1$Logout1$lbtnLogOut" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="CA0B0334" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$txtChonHK" Value="20078" RecordedValue="20078" CorrelationBinding="{{FormPostParam29.ctl00$ContentPlaceHolder1$ctl00$txtChonHK}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="a8789c88-3f52-4203-8f3b-56086bc9fd16" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/default.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://thongtindaotao.sgu.edu.vn/default.aspx?page=gioithieu" ReportingName="" IgnoreHttpStatusCode="False">
      <DependentRequests>
        <Request Method="POST" Guid="65021f8b-eeb8-4447-b6ce-3364bb33dd00" Version="1.1" Url="https://za.zalo.me/v3/w/t" ThinkTime="2" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="" ReportingName="" IgnoreHttpStatusCode="False">
          <Headers>
            <Header Name="Referer" Value="http://thongtindaotao.sgu.edu.vn/default.aspx?page=gioithieu" />
          </Headers>
          <FormPostHttpBody>
            <FormPostParameter Name="zl" Value="http://thongtindaotao.sgu.edu.vn/default.aspx?page=gioithieu" RecordedValue="http://thongtindaotao.sgu.edu.vn/default.aspx?page=gioithieu" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="zrf" Value="http://thongtindaotao.sgu.edu.vn/default.aspx?page=dangnhap" RecordedValue="http://thongtindaotao.sgu.edu.vn/default.aspx?page=dangnhap" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="zch" Value="utf-8" RecordedValue="utf-8" CorrelationBinding="{{FormPostParam34.zch}}" UrlEncode="True" />
            <FormPostParameter Name="zts" Value="1649746024960" RecordedValue="1649746024960" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="zos" Value="Windows" RecordedValue="Windows" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="zla" Value="en-US," RecordedValue="en-US," CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="__zi" Value="2000.SSZzejyD2za-nEkXtmqOqsd6lx-H0m2HDTIreOD14eSds-kgYmHSZYVMxAU00XMA8j6feO8258uXrAcW.1" RecordedValue="2000.SSZzejyD2za-nEkXtmqOqsd6lx-H0m2HDTIreOD14eSds-kgYmHSZYVMxAU00XMA8j6feO8258uXrAcW.1" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="v" Value="2201101603" RecordedValue="2201101603" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="incog" Value="false" RecordedValue="false" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="zact" Value="pv" RecordedValue="pv" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="_zapp" Value="null" RecordedValue="null" CorrelationBinding="" UrlEncode="True" />
            <FormPostParameter Name="_zidnbaid" Value="null" RecordedValue="null" CorrelationBinding="" UrlEncode="True" />
          </FormPostHttpBody>
        </Request>
      </DependentRequests>
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="dangnhap" RecordedValue="dangnhap" CorrelationBinding="{{QueryStringParam45.page}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="__EVENTTARGET" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="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" RecordedValue="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" CorrelationBinding="{{FormPostParam30.__VIEWSTATE}}" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="CA0B0334" RecordedValue="CA0B0334" CorrelationBinding="{{FormPostParam31.__VIEWSTATEGENERATOR}}" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$txtTaiKhoa" Value="3119411042" RecordedValue="3119411042" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$txtMatKhau" Value="nghia0339941057" RecordedValue="nghia0339941057" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$btnDangNhap" Value="Đăng Nhập" RecordedValue="Đăng Nhập" CorrelationBinding="{{FormPostParam32.ctl00$ContentPlaceHolder1$ctl00$btnDangNhap}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="774b0f61-84d1-40d6-8770-43d88e2d1c8e" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/default.aspx" ThinkTime="1" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://thongtindaotao.sgu.edu.vn/default.aspx?page=gioithieu" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="http://thongtindaotao.sgu.edu.vn/default.aspx?page=dangnhap" />
      </Headers>
      <ExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="1" DisplayName="Extract Hidden Fields" Description="Extract all hidden fields from the response and place them into the test context.">
          <RuleParameters>
            <RuleParameter Name="Required" Value="True" />
            <RuleParameter Name="HtmlDecode" Value="True" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam35.__VIEWSTATE" DisplayName="Extract Text" Description="Extract text from the response and place it into the test context.">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="2" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </ExtractionRules>
      <CorrelationExtractionRules>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam47.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="FormPostParam36.__VIEWSTATEGENERATOR" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="lue=&quot;" />
            <RuleParameter Name="EndsWith" Value="&quot; /&gt;&#xD;" />
            <RuleParameter Name="Index" Value="3" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
        <ExtractionRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" VariableName="QueryStringParam48.page" DisplayName="" Description="">
          <RuleParameters>
            <RuleParameter Name="StartsWith" Value="?page=" />
            <RuleParameter Name="EndsWith" Value="&quot;" />
            <RuleParameter Name="Index" Value="0" />
            <RuleParameter Name="IgnoreCase" Value="False" />
            <RuleParameter Name="UseRegularExpression" Value="False" />
            <RuleParameter Name="HtmlDecode" Value="True" />
            <RuleParameter Name="Required" Value="False" />
          </RuleParameters>
        </ExtractionRule>
      </CorrelationExtractionRules>
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="dangnhap" RecordedValue="dangnhap" CorrelationBinding="{{QueryStringParam46.page}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="__EVENTTARGET" Value="{{$HIDDEN1.__EVENTTARGET}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="CA0B0334" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$txtTaiKhoa" Value="3119411042" RecordedValue="3119411042" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$txtMatKhau" Value="nghia0339941057" RecordedValue="nghia0339941057" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="ctl00$ContentPlaceHolder1$ctl00$btnDangNhap" Value="Đăng Nhập" RecordedValue="Đăng Nhập" CorrelationBinding="{{FormPostParam33.ctl00$ContentPlaceHolder1$ctl00$btnDangNhap}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="GET" Guid="26d238f4-40eb-40df-8fec-667293d56fb5" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/default.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://thongtindaotao.sgu.edu.vn/default.aspx?page=thaydoittcn" ReportingName="" IgnoreHttpStatusCode="False">
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="gioithieu" RecordedValue="gioithieu" CorrelationBinding="{{QueryStringParam47.page}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$Header1$Logout1$lbtnChangePass" RecordedValue="ctl00$Header1$Logout1$lbtnChangePass" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{FormPostParam35.__VIEWSTATE}}" RecordedValue="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aMOtbmggdGjhu6ljIGjGsOG7m25nIGThuqtuLCBnaeG6o2kgdGjDrWNoIHbhu4EgcXV5IGNo4bq/LCBxdXkgxJHhu4tuaC4gTuG6v3UgY8OybiBjaMawYSB0aOG7j2EgxJHDoW5nLCBTViDEkcSDbmcgbmjhuq1wIHbDoCBn4butaSDDvSBraeG6v24gdsOgbyBt4bulYyBHw7NwIMO9IGtp4bq/biDEkeG7gyBxdeG6o24gdHLhu4sgdmnDqm4gbuG6r20gdMOsbmggaMOsbmggY+G7pSB0aOG7gyBj4bunYSBTViDEkeG7gyBjw7MgdGjhu4Mga2nhu4NtIHRyYSwgZ2nhuqNpIHRow61jaCB2w6AgbuG6v3UgY+G6p24gaMaw4bubbmcgZOG6q24gY8OhY2ggeOG7rSBsw60ga+G7i3AgdGjhu51pLCDEkcO6bmcgxJHGoW4gduG7iyBjaOG7qWMgbsSDbmcgKHRyw6FuaCB04buTbiDEkeG7jW5nIGfDonkgcuG6r2MgcuG7kWkgduG7gSBzYXUpLiZuYnNwOzxiciAvPjxzdHJvbmc+KyBO4bq/dSBraMO0bmcgxJHEg25nIG5o4bqtcCDEkcaw4bujYyAodsOgbyB3ZWIgVGjDtG5nIHRpbiDEkcOgbyB04bqhbykgZG8gc2FpIG3huq10IGto4bqpdSDEkcSDbmcgbmjhuq1wPC9zdHJvbmc+LCBTViDEkeG6v24gdHLhu7FjIHRp4bq/cCBQLiDEkMOgbyB04bqhbyAoQy5DMDA3KSAoxJFlbSB0aGVvIHRo4bq7IFNWIMSR4buDIHjDoWMgdGjhu7FjKSZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyBjb2xvcjogI2ZmMDAwMDsiPihn4butaSBtYWlsIHbhu4EgcF9kYW90YW9Ac2d1LmVkdS52biwga8OobSB0aOG6uyBTVik8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwYTsiPi4gQ2jhu6ljIG7Eg25nIHThu7EgxJHhu5luZyBwaOG7pWMgaOG7k2kgbeG6rXQga2jhuql1IGLhurFuZyBlbWFpbCBj4bunYSB0cmFuZyB3ZWIgaGnhu4duIGtow7RuZyBob+G6oXQgxJHhu5luZyDEkcaw4bujYyAoZG8gZ2nhu5tpIGjhuqFuIGPhu6dhIGjhu5lwIHRoxrAgR29vZ2xlKS48L3NwYW4+PGJyIC8+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDBhOyI+KyDEkOG7gyBjw7Mgbmhp4buBdSBraMO0bmcgZ2lhbiBjaG8gcGjhuqduIGNow61uaCwgY8OhYyBjaGkgdGnhur90IMSRw6MgxJHEg25nIHPhur0gxJHGsOG7o2MgdHJ1eSBj4bqtcCDhu58gcGjhuqduIFhlbSBjaGkgdGnhur90ICjhu58gY3Xhu5FpIG3hu6VjIHRpbik8L3NwYW4+PGJyIC8+PGJyIC8+PHN0cm9uZz48c3BhbiBzdHlsZT0iY29sb3I6ICNmZjAwMDA7Ij4tLS0gVEjDlE5HIFRJTiBN4buaSSBOSOG6pFQgLS0tPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsiPjxiciAvPjwvc3Bhbj48L3N0cm9uZz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPjxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmMDAwMDsiPjxzdHJvbmc+KyBUaMO0bmcgYsOhbyDEkEtNSCBI4buNYyBr4buzIHBo4bulLCBuxINtIGjhu41jIDIwMjEgLSAyMDIyPC9zdHJvbmc+PGJyIC8+Jm5ic3A7ICZuYnNwOzxzdHJvbmc+KE5FVywgMDcvMDQvMjAyMik8L3N0cm9uZz4gVGjDtG5nIGLDoW8gxJHGsOG7o2MgZ+G7rWkgxJHhur9uIGPDoWMgS2hvYSB04burIDA3LzA0LzIwMjIgKDxhIGhyZWY9IlVwbG9hZC9maWxlL0hLMjEzX1RCNjQxX0RLTUgucGRmIj54ZW0gdGjDtG5nIGLDoW88L2E+KTxiciAvPjxzdHJvbmc+KyBI4buneSDEkEtNSCBISyBJSSwgMjAyMSAtIDIwMjIgxJHhu5FpIHbhu5tpIFNWIGLhu4sgdOG6oW0gZOG7q25nIGjhu41jLCBi4buLIGJ14buZYyB0aMO0aSBo4buNYyB2w6wga+G6v3QgcXXhuqMgxJBp4buDbSBy4bq7biBsdXnhu4duPC9zdHJvbmc+PGJyIC8+Jm5ic3A7ICZuYnNwOzxzdHJvbmc+KE5FVywgMDEvMDQvMjAyMikgPC9zdHJvbmc+Q8SDbiBj4bupIEvhur90IHF14bqjIHjDqXQgdOG6oW0gZOG7q25nLCBideG7mWMgdGjDtGkgaOG7jWMgdsOsIMSQUkwgKHNhdSBISyBJLCAyMDIxIC0gMjAyMikgKMSRw6MgxJHGsOG7o2MgdGjDtG5nIGLDoW8gxJHhur9uIGPDoWMgS2hvYS8gbmfDoG5oKSwgUGjDsm5nIMSQw6BvIHThuqFvIHRp4bq/biBow6BuaCBo4buneSDEkEtNSCBISyBr4bq/IChISyBJSSwgMjAyMSAtIDIwMjIpIGPDoWMgU1YgY8OzIHRyb25nIEvhur90IHF14bqjIHjDqXQuIFRo4budaSBraMOzYSBiaeG7g3UgdsOgIGjhu41jIHBow60gxJHGsOG7o2MgY+G6rXAgbmjhuq10IHThu6sgMTVnLCAwMS8wNC8yMDIyLiZuYnNwOzxiciAvPiZuYnNwOyAmbmJzcDtMxrB1IMO9IGPDsyAxNiBTViB04bqhbSBk4burbmcgKDxhIGhyZWY9IlVwbG9hZC9maWxlL0hLMjEyX1NWdGFtZHVuZ0RSTF9jb0RLTUgucGRmIj54ZW0gZGFuaCBzw6FjaDwvYT4pIHbDoCAxIFNWIEJUSCBjw7Mga+G6v3QgcXXhuqMgxJBLTUguPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmMDAwMDsiPiZuYnNwOyAmbmJzcDtTViBsacOqbiBo4buHIHbhu5tpIEtob2EgxJHhu4Mgbmjhuq1uIHF1eeG6v3QgxJHhu4tuaCB2w6AgbGnDqm4gaOG7hyB24bubaSBQaMOybmcgQ8O0bmcgdMOhYyBTViDEkeG7gyDEkcaw4bujYyBoxrDhu5tuZyBk4bqrbiBjw6FjIHbhuqVuIMSR4buBIGtow6FjICh2w60gZOG7pTogaOG7jWMgcGjDrSBISzIgbcOgIFNWIMSRw6MgxJHDs25nLCB0aOG7pyB04bulYyB2w6BvIGjhu41jIGzhuqFpIHNhdSBraGkgYuG7iyBideG7mWMgdOG6oW0gZOG7q25nLCAuLi4pLjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC13ZWlnaHQ6IGJvbGQ7IGNvbG9yOiAjMDAwMGZmOyI+KyBSw7p0IG3DtG4gaOG7jWMmbmJzcDsodOG7qyB0deG6p24gdGjhu6kgMyBj4bunYSBo4buNYyBrw6wpJm5ic3A7PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBjb2xvcjogIzAwMDBmZjsiPihTViB4ZW0gY2hpIHRp4bq/dCBzYXUgQsaw4bubYyA3IGPhu6dhIFF1eSB0csOsbmggxJBLTUgpPGJyIC8+PC9zcGFuPjxzdHJvbmcgc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgY29sb3I6ICNmZjAwMDA7Ij4tLS0tLS0tLS0tLS0tLTwvc3Ryb25nPjwvcD48cCBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij48c3Ryb25nPsSQxIJORyBLw50gTcOUTiBI4buMQyBI4buMQyBL4buyIElJLCBOxIJNIEjhu4xDIDIwMjEgLSAyMDIyPGJyIC8+PC9zdHJvbmc+PC9zcGFuPjxzdHJvbmcgc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPmTDoG5oIGNobyBTaW5oIHZpw6puIGNow61uaCBxdXkgdsOgIFNpbmggdmnDqm4gaOG7hyB24burYSBsw6BtIHbhu6thIGjhu41jIMSRw6BvIHThuqFvIHRoZW8gdMOtbiBjaOG7iTwvc3Ryb25nPjwvcD48cD48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsrIFNWIGNow7ogw70gdGjhu7FjIGhp4buHbiDEkeG7pyA3IGLGsOG7m2MgY+G7p2EgxJBLTUgsIHRoZW8gTOG7i2NoIMSQS01IIGPhu6dhIFRyxrDhu51uZywgc+G6vSBjw7MgY8OhYyBuaOG6r2Mgbmjhu58gY+G7pSB0aOG7gyDhu58gdOG7q25nIGLGsOG7m2MpPGJyIC8+PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+Jm5ic3A7KyBTViB4ZW0ga+G7uSA8c3Ryb25nPuKAnE5o4buvbmcgxJFp4buDbSBj4bqnbiBsxrB1IMO9IGtoaSDEkcSDbmcga8OtIG3DtG4gaOG7jWPigJ08L3N0cm9uZz4g4bufIHBo4bqnbiDigJxUaMO0bmcgdGluIGNodW5n4oCdIChjdeG7kWkgbcOgbiBow6xuaCBjaMOtbmgpPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsgPHN0cm9uZz5MxrB1IMO9IGPDoWMgcXV5IMSR4buLbmggduG7gSBtw6MgaOG7jWMgcGjhuqduIGPhu6dhIFFQLUFOIHbDoCBsw60gbHXhuq1uIGNow61uaCB0cuG7iyZuYnNwOzwvc3Ryb25nPih0csOtY2ggxJHEg25nKSAoeGVtIOG7nyBwaOG6p24gWGVtIGNoaSB0aeG6v3QpPC9zcGFuPjxiciAvPjwvcD48cD48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij48L3NwYW4+PC9zcGFuPjxzdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjAuIENodeG6qW4gYuG7izwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyB3aGl0ZS1zcGFjZTogcHJlOyBmb250LWZhbWlseTogVGFob21hOyI+CTwvc3Bhbj48YnIgLz48L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+KyZuYnNwO0jhu41jIGvDrCBJSSAtIDIwMjEtMjAyMiBi4bqvdCDEkeG6p3UgdOG7qyBuZ8OgeSAxNC8wMi8yMDIyPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3Ryb25nPisgVGjDtG5nIGLDoW8gxJDEg25nIGvDrSBtw7RuIGjhu41jJm5ic3A7PC9zdHJvbmc+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij7Ekcaw4bujYyB0aMO0bmcgdGluIMSR4bq/biBjw6FjIGtob2EvIG5nw6BuaCAodsOgIHThuqFpIHdlYiBQaMOybmcgxJDDoG8gdOG6oW8pPC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsoPC9zcGFuPjxhIGhyZWY9Imh0dHA6Ly90aG9uZ3RpbmRhb3Rhby5zZ3UuZWR1LnZuL1VwbG9hZC9maWxlL0hLMjEyX1RCX0RLTUgucGRmIiBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsgZm9udC1zaXplOiAxNnB4OyB0ZXh0LWRlY29yYXRpb24tbGluZTogbm9uZTsiPnhlbSB0aMO0bmcgYsOhbzwvYT48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+KTxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+PHN0cm9uZz4mbmJzcDsgQ2jGsMahbmcgdHLDrG5oIGNo4bqldCBsxrDhu6NuZyBjYW8gKG5nw6BuaCBDTlRUKSZuYnNwOzwvc3Ryb25nPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+ZG8gS2hvYSB2w6AgUGjDsm5nIMSQw6BvIHThuqFvIMSRxINuZyBrw70gY+G7kSDEkeG7i25oIHRoZW8gdGnhur9uIMSR4buZLiA8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiZuYnNwOyAtIFRoaSBraOG6o28gc8OhdCDEkeG6p3UgdsOgbyBUaeG6v25nIEFuaCBraMO0bmcgY2h1ecOqbiDEkeG7o3QgMSwgbsSDbSBo4buNYyAyMDIxIOKAkyAyMDIyIChuZ8OgeSAxMS8xMi8yMDIxKTxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+Jm5ic3A7IC0gS2nhu4NtIHRyYSBo4buNYyBwaMOtIEjhu41jIGvDrCBJICjEkeG7kWkgduG7m2kgU1YgbsSDbSB0aOG7qSBuaOG6pXQsIEtow7NhIDIxKTxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+PHNwYW4gc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoOyI+Jm5ic3A7Jm5ic3A7LSBEYW5oIHPDoWNoIFNWIMSRw6MgxJBLTUggbmjGsG5nIGtow7RuZyDEkcOzbmcgaOG7jWMgcGjDrSDhu58gSEsgdHLGsOG7m2M8L3NwYW4+Jm5ic3A7LSBU4bqhbSB0aOG7nWkga2jDtG5nIHjDqXQ8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDsiPiZuYnNwOyAtIERhbmggc8OhY2ggU1YgY2jGsGEgaG/DoG4gdOG6pXQgaOG7jWMgcGjDrSBI4buNYyBrw6wgSSwgMjAyMSDigJMgMjAyMiZuYnNwOzwvc3Bhbj4mbmJzcDstIFThuqFtIHRo4budaSBraMO0bmcgeMOpdCZuYnNwOzxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyBjb2xvcjogIzAwMDBmZjsiPjxzdHJvbmc+Jm5ic3A7ICZuYnNwOy0gRGFuaCBzw6FjaCBTViBraMO0bmcgY2jhuqVwIGjDoG5oIHZp4buHYyBu4buZcCBi4bqjbiBzYW8gYuG6sW5nIHThu5F0IG5naGnhu4dwIFRIUFQ8L3N0cm9uZz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiBUYWhvbWE7IGNvbG9yOiAjMDAwMGZmOyI+PGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsgJm5ic3A7LSBLaeG7g20gdHJhIHTDoGkga2hv4bqjbiB2w6AgbeG6rXQga2jhuql1PGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsgJm5ic3A7LSBD4bqtcCBuaOG6rXQgdMOsbmggdHLhuqFuZyBTViDEkeG7kWkgduG7m2kgU1YgdOG6oW0gZOG7q25nIHbDoG8gaOG7jWMgbOG6oWkg4bufIEhLIG3hu5tpPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4mbmJzcDsgJm5ic3A7LSBUaMO0bmcgYsOhbyDEkcOzbmcgaOG7jWMgcGjDrSAoY+G7p2EgUGjDsm5nIEvhur8gaG/huqFjaCAtIFTDoGkgY2jDrW5oKSAoeGVtIEzhu4tjaCDEkEtNSCAtIG3hu6VjIDUsIHBow61hIGTGsOG7m2kpPC9zcGFuPjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+Jm5ic3A7ICZuYnNwOy0gVOG6rXAgxJHEg25nIGvDrSBtw7RuIGjhu41jIGTDoG5oIGNobyBTViDEkeG6p3Uga2jDs2EmbmJzcDs8L3NwYW4+PGJyIC8+PC9wPjxwPjxzdHJvbmcgc3R5bGU9ImZvbnQtZmFtaWx5OiBUYWhvbWE7IGZvbnQtc2l6ZTogMTZweDsiPkzhu4pDSCDEkMSCTkcgS8ONIE3DlE4gSOG7jEMgSOG7jEMgS8OMIElJLCBOxIJNIEjhu4xDIDIwMjEgLSAyMDIyPGJyIC8+PC9zdHJvbmc+PHN0cm9uZyBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsgZm9udC1zaXplOiAxMnB0OyI+MS4gWGVtIFPhu5UgdGF5IMSQS01IICh2w6AgdGjDtG5nIHRpbiBuaMOzbSBs4bubcCkgKDAzLzEyLzIwMjEpPGJyIC8+PC9zdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Mi4gxJDEg25nIGvDrSBtw7RuIGjhu41jICjEkeG7o3QgY2jDrW5oKSZuYnNwOzwvc3Bhbj48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IHRleHQtZGVjb3JhdGlvbi1saW5lOiB1bmRlcmxpbmU7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4odOG7q25nIGtow7NhLCB0aGVvIGzhu4tjaCBUaMO0bmcgYsOhbyDEkEtNSCk8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij48c3Ryb25nPiZuYnNwOygwNi8xMiAtIDE0LzEyLzIwMjEpPGJyIC8+PC9zdHJvbmc+PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyBmb250LWZhbWlseTogVGFob21hOyI+KDA3LzEyLzIwMjEpIEx1aSB0aOG7nWkgZ2lhbiDEkEtNSCBkw6BuaCBjaG8gS2jDs2EgMjEgc2FuZyBuZ8OgeSZuYnNwOzE1IHbDoCAxNi8xMi8yMDIxLjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+KDE0LzEyLzIwMjEpIFjhu60gbMOtIGvhur90IHF14bqjIGvhu7MgdGhpIEto4bqjbyBzw6F0IFRp4bq/bmcgQW5oIMSR4bqndSB2w6BvIMSR4bujdCAxIG7Eg20gaOG7jWMgMjAyMSAtIDIwMjI8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJweDsgZm9udC1mYW1pbHk6IEFyaWFsOyI+PHNwYW4gc3R5bGU9ImZvbnQtd2VpZ2h0OiBib2xkOyBmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4zLiBYZW0gVGjDtG5nIGLDoW8gxJBLTUggYuG7lSBzdW5nIHbDoCBEYW5oIHPDoWNoIG5ow7NtIGzhu5twIGLhu4sgaOG7p3kgKGRvIHPhu5EgbMaw4bujbmcgxJBLIHF1w6Egw610KTwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+PHN0cm9uZz4mbmJzcDsoMTcvMTIvMjAyMSk8YnIgLz48L3N0cm9uZz48L3NwYW4+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsgJm5ic3A7Jm5ic3A7PC9zcGFuPjxzdHJvbmcgc3R5bGU9ImZvbnQtZmFtaWx5OiBUYWhvbWE7IGZvbnQtc2l6ZTogMTZweDsiPigxMmcsIDIwLzEyLzIwMjEpIFRow7RuZyBiw6FvIMSQS01IIGLhu5Ugc3VuZyB2w6AgRFMgbmjDs20gbOG7m3AgYuG7iyBo4buneSA8L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+KDwvc3Bhbj48YSBocmVmPSJVcGxvYWQvZmlsZS9ISzIxMl9UQkRLTUhfQlMucGRmIiBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsgZm9udC1zaXplOiAxNnB4OyI+eGVtIFRCIHbDoCBEUzwvYT48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+KTxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+Jm5ic3A7ICZuYnNwOyZuYnNwOzwvc3Bhbj48c3Ryb25nIHN0eWxlPSJmb250LWZhbWlseTogQXJpYWw7IGZvbnQtc2l6ZTogMTJweDsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij5D4bqtcCBuaOG6rXQgZOG7ryBsaeG7h3UmbmJzcDs8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPlRLQjwvc3Bhbj48L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+PHN0cm9uZz4mbmJzcDs8L3N0cm9uZz4odOG7qyAxNmczMCwgMjAvMTIvMjAyMSkgLSA8c3Ryb25nPkjhu41jIHBow60gPC9zdHJvbmc+Y8WpbmcgxJHGsOG7o2MgdMOtbmggdsOgIGPhuq1wIG5o4bqtdDxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LXdlaWdodDogYm9sZDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjQuIMSQxINuZyBrw60gbcO0biBo4buNYyAoxJHhu6N0IGLhu5Ugc3VuZykmbmJzcDs8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IHRleHQtZGVjb3JhdGlvbi1saW5lOiB1bmRlcmxpbmU7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4obOG7i2NoIMSRxINuZyBrw60gdGhlbyB04burbmcga2jDs2EpPC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3Ryb25nPiZuYnNwOygyMS8xMiAtIDI0LzEyLzIwMjEpPGJyIC8+PC9zdHJvbmc+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7IGNvbG9yOiAjMDAwMGZmOyI+PHN0cm9uZz4mbmJzcDsgKyBDw6FjIHRyxrDhu51uZyBo4bujcCDEkeG6t2MgYmnhu4d0IGLhuqNvIMSR4bqjbSB0aeG6v24gxJHhu5kgaOG7jWMgY8OhYyBtw7RuIGNodXnDqm4gbcO0biBj4bunYSBTViZuYnNwOzwvc3Ryb25nPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyBjb2xvcjogIzAwMDBmZjsiPih4ZW0g4bufIHBo4bqnbiBYZW0gY2hpIHRp4bq/dCk8YnIgLz48L3NwYW4+PHN0cm9uZyBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsgZm9udC1zaXplOiAxNnB4OyBjb2xvcjogIzAwMDBmZjsiPiZuYnNwOyArIEtoYWkgYsOhbyBo4buNYyBs4bqhaSBraMOhYyBtw6MgYmFuIMSR4bqndSA8L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyBjb2xvcjogIzAwMDBmZjsiPih4ZW0g4bufIHBo4bqnbiBYZW0gY2hpIHRp4bq/dCk8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsgY29sb3I6ICMwMDAwZmY7Ij48c3Ryb25nPiZuYnNwOyArIMSQxINuZyBrw60gZMaw4bubaSBz4buRIHTDrW4gY2jhu4kgcXV5IMSR4buLbmggKDE0IHTDrW4gY2jhu4kpJm5ic3A7PC9zdHJvbmc+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4oeGVtIOG7nyBwaOG6p24gWGVtIGNoaSB0aeG6v3QpPGJyIC8+PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+KDExZywgMjcvMTIvMjAyMSkgS+G6v3QgcXXhuqMgcsOgIHNvw6F0IGThu68gbGnhu4d1IMSQS01IIMSR4bujdCBi4buVIHN1bmcgKHhlbSDhu58gcGjhuqduIFhlbSBjaGkgdGnhur90KTxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+KDA5ZywgMTMvMDEvMjAyMikmbmJzcDs8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPkPhuq1wIG5o4bqtdCBUS0IgdsOgIGjhu41jIHBow60gxJHhu6N0IGN14buRaSBjaHXhuqluIGLhu4sgY2hvIMSR4bujdCDEkcOzbmcgaOG7jWMgcGjDrSBxdWEgbmfDom4gaMOgbmc8YnIgLz48L3NwYW4+PHN0cm9uZyBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsgZm9udC1zaXplOiAxNnB4OyI+NS4gxJDDs25nIGjhu41jIHBow60gKHRoZW8gdGjDtG5nIGLDoW8gY+G7p2EgUGjDsm5nIEvhur8gaG/huqFjaCAtIFTDoGkgY2jDrW5oKSAoY+G6rXAgbmjhuq10LCAxNy8wMSAtIDIxLzAxLzIwMjIpPGJyIC8+PC9zdHJvbmc+PHN0cm9uZyBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsgZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7Jm5ic3A7PC9zdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzdHJvbmc+KDMwLzEyLzIwMjEpIFRow7RuZyBiw6FvIEzhu4tjaCB0aHUgaOG7jWMgcGjDrSBISyBJSSwgMjAyMSAtIDIwMjI8L3N0cm9uZz4gKDxhIGhyZWY9IlVwbG9hZC9maWxlL0hLMjEyX1RCdGh1SFBfTlNQLnBkZiI+eGVtIHRow7RuZyBiw6FvPC9hPiksIMSR4buRaSB24bubaTo8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiZuYnNwOyAmbmJzcDsgJm5ic3A7KyBTViBuZ2/DoGkgc8awIHBo4bqhbSAodOG6pXQgY+G6oyBjw6FjIGtow7NhKTxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+Jm5ic3A7ICZuYnNwOyAmbmJzcDsrIFNWIHPGsCBwaOG6oW0gKGPDsyBo4buNYyBs4bqhaSkga2jDs2EgMjAgdHLhu58gduG7gSB0csaw4bubYyAoPC9zcGFuPjxzdHJvbmcgc3R5bGU9ImZvbnQtZmFtaWx5OiBUYWhvbWE7IGZvbnQtc2l6ZTogMTZweDsiPktow7NhIDIxIHPGsCBwaOG6oW0gc+G6vSBjw7MgdGjDtG5nIGLDoW8gc2F1PC9zdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPikuPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3Ryb25nPiZuYnNwOyAoMjYvMTIvMjAyMSk8L3N0cm9uZz4mbmJzcDs8c3Ryb25nPk5o4bqvYyBs4bqhaSB24buBJm5ic3A7PC9zdHJvbmc+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogVGFob21hOyI+PHNwYW4+PHN0cm9uZyBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+S2hhaSBiw6FvIGjhu41jIGzhuqFpIGtow6FjIG3DoyBiYW4gxJHhuqd1ICjEkeG6t2MgYmnhu4d0IHbhu5tpIFNWIHPGsCBwaOG6oW0pPC9zdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPjxzdHJvbmc+PGJyIC8+PC9zdHJvbmc+PC9zcGFuPjwvc3Bhbj48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij42LiBYZW0gRGFuaCBzw6FjaCBu4bujIGjhu41jIHBow60gKFBow7JuZyBL4bq/IGhv4bqhY2ggLSBUw6BpIGNow61uaCk8YnIgLz48L3N0cm9uZz48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij43LiBYZW0gVGjhu51pIGtow7NhIGJp4buDdSBjaMOtbmggdGjhu6ljICgyNy8wMS8yMDIyKTxiciAvPjwvc3Ryb25nPjxzdHJvbmcgc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwOyAmbmJzcDsgVOG7qyAxOGcsIDI1LzAxLzIwMjIsIHThuqV0IGPhuqMgU1YgbMawdSDDvSB0aGVvIGTDtWk6PGJyIC8+PC9zdHJvbmc+PHN0cm9uZyBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICsgQ+G6rXAgbmjhuq10ICJI4buNYyBwaMOtIMSRw6MgxJHDs25nIiZuYnNwOzwvc3Ryb25nPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij5zYXUgxJHhu6N0IMSRw7NuZyBo4buNYyBwaMOtIHF1YSBuZ8OibiBow6BuZzxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+PHN0cm9uZz4mbmJzcDsgKyBUaMO0bmcgYsOhbyBEYW5oIHPDoWNoIG7hu6MgaOG7jWMgcGjDrSAoY+G7p2EgUC4gS0hUQyk8YnIgLz48L3N0cm9uZz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwO0RTU1YgbuG7oyBo4buNYyBwaMOtIG5nb8OgaSBzxrAgcGjhuqFtICg8L3NwYW4+PGEgaHJlZj0iaHR0cDovL3Rob25ndGluZGFvdGFvLnNndS5lZHUudm4vVXBsb2FkL2ZpbGUvSEsyMTJfRFNTVl9ub2hvY3BoaV9uZ29haVNQLnBkZiIgc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPnhlbSBkYW5oIHPDoWNoPC9hPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4pOiBTViBz4bq9IGLhu4sgaOG7p3kgdOG6pXQgY+G6oyBr4bq/dCBxdeG6oyDEkEtNSDxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7RFNTViBu4bujIGjhu41jIHBow60gaOG7jWMgbOG6oWkgc8awIHBo4bqhbSAoPC9zcGFuPjxhIGhyZWY9Imh0dHA6Ly90aG9uZ3RpbmRhb3Rhby5zZ3UuZWR1LnZuL1VwbG9hZC9maWxlL0hLMjEyX0RTU1Zfbm9ob2NwaGlob2NsYWlfU1AucGRmIiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+eGVtIGRhbmggc8OhY2g8L2E+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPik6IFNWIHPhur0gYuG7iyBo4buneSB04bqldCBj4bqjIGvhur90IHF14bqjIMSQSyBo4buNYyBs4bqhaTxiciAvPjwvc3Bhbj48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsgKyBD4bqtcCBuaOG6rXQgVEtCJm5ic3A7PC9zdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPnNhdSBraGkgeOG7rSBsw60gaOG7p3kgxJBLIGPDoWMgU1YgbuG7oyBo4buNYyBwaMOtICg8L3NwYW4+PHN0cm9uZyBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Z2nhu68gbmd1ecOqbiB0aMO0bmcgdGluICJO4bujIGjhu41jIHBow60iPC9zdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwO8SR4buDIFNWIGJp4bq/dCk8YnIgLz48L3NwYW4+PHN0cm9uZyBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICsmbmJzcDs8L3N0cm9uZz48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij5UaeG6v3Agbmjhuq1uIHRo4bqvYyBt4bqvYyBob+G6t2MgecOqdSBj4bqndSAobuG6v3UgY8OzKSBj4bunYSBTViB24buBIGjhu41jIHBow60mbmJzcDs8L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+cXVhIG1haWwgcF9rZWhvYWNodGFpY2hpbmhAc2d1LmVkdS52bjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+Jm5ic3A7ICZuYnNwOyAmbmJzcDs8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiogxJDhu6N0IDEgxJHhur9uIDE1ZywgMjgvMDEvMjAyMjsgY+G6rXAgbmjhuq10IGvhur90IHF14bqjIHjhu60gbMOtIHThu6sgMTdnLCAyOC8wMS8yMDIyLjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICZuYnNwOyAmbmJzcDsqIMSQ4bujdCAyIChzYXUgdGjhu51pIGdpYW4gbmdo4buJIFThur90KSB04burIDA3LzAyIMSR4bq/biAxNWcsIDExLzAyLzIwMjI7IGPhuq1wIG5o4bqtdCBr4bq/dCBxdeG6oyB44butIGzDrSB04burIDE3ZywgMTEvMDIvMjAyMi48YnIgLz48L3NwYW4+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsgJm5ic3A7Jm5ic3A7PHN0cm9uZz4oPC9zdHJvbmc+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3Ryb25nPjE4ZywgMTEvMDIvMjAyMjwvc3Ryb25nPjwvc3Bhbj48c3Ryb25nIHN0eWxlPSJmb250LWZhbWlseTogVGFob21hOyBmb250LXNpemU6IDE2cHg7Ij4pJm5ic3A7PC9zdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzdHJvbmc+Q+G6rXAgbmjhuq10IFRLQiB2w6AgaOG7jWMgcGjDrSB0csaw4bubYyBraGkgYuG6r3QgxJHhuqd1IGjhu41jIGvDrDwvc3Ryb25nPjxzdHJvbmc+PGJyIC8+PC9zdHJvbmc+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsgJm5ic3A7ICZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNXB4OyB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7IGJhY2tncm91bmQtY29sb3I6ICNlNWVmZmY7IGZvbnQtZmFtaWx5OiAmcXVvdDtTZWdvZSBVSSZxdW90OywgU2Vnb2V1aVBjLCAmcXVvdDtTYW4gRnJhbmNpc2NvJnF1b3Q7LCAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywgSGVsdmV0aWNhLCAmcXVvdDtMdWNpZGEgR3JhbmRlJnF1b3Q7LCBSb2JvdG8sIFVidW50dSwgVGFob21hLCAmcXVvdDtNaWNyb3NvZnQgU2FucyBTZXJpZiZxdW90OywgQXJpYWwsIHNhbnMtc2VyaWY7Ij4rIEjhu41jIHBow60gdsOgIGvhur90IHF14bqjIMSQS01IOiBj4bqtcCBuaOG6rXQgKGLhu5Ugc3VuZyB2w6AgcGjhu6VjIGjhu5NpKSBr4bq/dCBxdeG6oyDEkEtNSCDEkcOjIMSRxrDhu6NjIHRp4bq/cCBuaOG6rW4gxJHhur9uIDE1ZywgMTEvMDIvMjAyMgo8L3NwYW4+PHNwYW4gc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNlNWVmZmY7IGZvbnQtc2l6ZTogMTVweDsgd2hpdGUtc3BhY2U6IHByZS13cmFwOyBmb250LWZhbWlseTogJnF1b3Q7U2Vnb2UgVUkmcXVvdDssIFNlZ29ldWlQYywgJnF1b3Q7U2FuIEZyYW5jaXNjbyZxdW90OywgJnF1b3Q7SGVsdmV0aWNhIE5ldWUmcXVvdDssIEhlbHZldGljYSwgJnF1b3Q7THVjaWRhIEdyYW5kZSZxdW90OywgUm9ib3RvLCBVYnVudHUsIFRhaG9tYSwgJnF1b3Q7TWljcm9zb2Z0IFNhbnMgU2VyaWYmcXVvdDssIEFyaWFsLCBzYW5zLXNlcmlmOyI+ICAgICAgKyBUaOG7nWkga2jDs2EgYmnhu4N1OiAKPC9zcGFuPjxzcGFuIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjZTVlZmZmOyBmb250LXNpemU6IDE1cHg7IHdoaXRlLXNwYWNlOiBwcmUtd3JhcDsgZm9udC1mYW1pbHk6ICZxdW90O1NlZ29lIFVJJnF1b3Q7LCBTZWdvZXVpUGMsICZxdW90O1NhbiBGcmFuY2lzY28mcXVvdDssICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCBIZWx2ZXRpY2EsICZxdW90O0x1Y2lkYSBHcmFuZGUmcXVvdDssIFJvYm90bywgVWJ1bnR1LCBUYWhvbWEsICZxdW90O01pY3Jvc29mdCBTYW5zIFNlcmlmJnF1b3Q7LCBBcmlhbCwgc2Fucy1zZXJpZjsiPiAgICAgICAgIDEpICjEkeG7lWkgR1YpIGPDoWMgbmjDs20gbOG7m3AgR0RRUCBsacOqbiBxdWFuIMSR4bq/biBHViBQaOG6oW0gVGhhbmggVsWpCjwvc3Bhbj48c3BhbiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI2U1ZWZmZjsgZm9udC1zaXplOiAxNXB4OyB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7IGZvbnQtZmFtaWx5OiAmcXVvdDtTZWdvZSBVSSZxdW90OywgU2Vnb2V1aVBjLCAmcXVvdDtTYW4gRnJhbmNpc2NvJnF1b3Q7LCAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywgSGVsdmV0aWNhLCAmcXVvdDtMdWNpZGEgR3JhbmRlJnF1b3Q7LCBSb2JvdG8sIFVidW50dSwgVGFob21hLCAmcXVvdDtNaWNyb3NvZnQgU2FucyBTZXJpZiZxdW90OywgQXJpYWwsIHNhbnMtc2VyaWY7Ij4gICAgICAgICAyKSAoxJFp4buBdSBjaOG7iW5oIG3DtG4gxJHEg25nIGvDrSkgTOG7m3AgRFFHMTIxeCAoU1YgbGnDqm4gaOG7hyB24bubaSBLaG9hIMSR4buDIGJp4bq/dCBjaGkgdGnhur90KQo8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiAmcXVvdDtTZWdvZSBVSSZxdW90OywgU2Vnb2V1aVBjLCAmcXVvdDtTYW4gRnJhbmNpc2NvJnF1b3Q7LCAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywgSGVsdmV0aWNhLCAmcXVvdDtMdWNpZGEgR3JhbmRlJnF1b3Q7LCBSb2JvdG8sIFVidW50dSwgVGFob21hLCAmcXVvdDtNaWNyb3NvZnQgU2FucyBTZXJpZiZxdW90OywgQXJpYWwsIHNhbnMtc2VyaWY7Ij48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNXB4OyB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7IGJhY2tncm91bmQtY29sb3I6ICNlNWVmZmY7Ij4gICAgICAgICAzKSAoxJFp4buBdSBjaHV54buDbiBwaMOybmcpIMSR4bq3YyBiaeG7h3QgY+G7p2EgY8OhYyBs4bubcCBLaG9hIENOVFQ7ICjEkWnhu4F1IGNo4buJbmggdGjhu51pIGtow7NhIGJp4buDdSkgbeG7mXQgc+G7kSBs4bubcCBDTEMgKENOVFQpCjwvc3Bhbj48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiZuYnNwOyAmbmJzcDsgUGjDsm5nIGjhu41jIMSRxrDhu6NjIHLDoCBzb8OhdCBs4bqnbiBjdeG7kWksJm5ic3A7PHN0cm9uZz504bqldCBj4bqjIFNWIGtp4buDbSB0cmEmbmJzcDs8L3N0cm9uZz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzdHJvbmc+VEtCIChk4bqhbmcgSEsgY8OhIG5ow6JuPHNwYW4gc3R5bGU9InRleHQtZGVjb3JhdGlvbi1saW5lOiB1bmRlcmxpbmU7Ij4pPC9zcGFuPjwvc3Ryb25nPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+PHN0cm9uZz4mbmJzcDt2w6AgbMawdSDDvSB24buBIHBow7JuZyBo4buNYzwvc3Ryb25nPi48YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiZuYnNwOyAmbmJzcDsgKFNWIHBo4bqjaSBYZW0gVEtCIGThuqFuZyAiVEtCIGjhu41jIGvhu7MgY8OhIG5ow6JuIiwga2jDtG5nIFhlbSAiVEJLIGThuqFuZyB0deG6p24iOyDEkeG7gyBTViB0aOG6pXkgdOG6pXQgY+G6oyBr4bq/dCBxdeG6oyDEkEsgxJHhurdjIGJp4buHdCB24bubaSBjw6FjIG5ow7NtIGzhu5twIGtow7RuZyBi4bqvdCDEkeG6p3UgaOG7jWMgdOG7qyBUdeG6p24gMSAtIDE0LzAyLzIwMjIgLSB2w6AgY8OhYyBuaMOzbSBs4bubcCBraMO0bmcgeOG6v3AgVEtCIG5oxrAgVGjhu7FjIHThur8sIC4uLikmbmJzcDs8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiZuYnNwOyAmbmJzcDsgU2F1IHRo4budaSDEkWnhu4NtIG7DoHksIG7hur91IFNWIHbhuqtuIGNoxrBhIGvhu4twIHBo4bqjbiBo4buTaSB0aOG6r2MgbeG6r2MgaG/hurdjIHnDqnUgY+G6p3UgduG7gSBo4buNYyBwaMOtIMSR4bq/biBQIEtIVEMgdGjDrCB0aeG6v3AgdOG7pWMgZ+G7rWkgdGhlbyBoxrDhu5tuZyBk4bqrbiDhu58gdHLDqm4gdsOgIHRoZW8gZMO1aSBr4bq/dCBxdeG6oyB44butIGzDrSB0cm9uZyBuZ8OgeSB0aOG7qSBoYWkgMTQvMDIvMjAyMi4mbmJzcDsoMTdnMzAsIDE0LzAyLzIwMjIpIEPhuq1wIG5o4bqtdCBUS0IgdsOgIGjhu41jIHBow60uJm5ic3A7PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4oMTdnLCAxOC8wMi8yMDIyKSBD4bqtcCBuaOG6rXQgVEtCIHbDoCBo4buNYyBwaMOtPC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4uPC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3Ryb25nPiZuYnNwOyAmbmJzcDs8YnIgLz48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4mbmJzcDsgJm5ic3A7ICgxOGcsIDI1LzAyLzIwMjIpIEPhuq1wIG5o4bqtdCBUS0IgdsOgIGjhu41jIHBow60gxJHhu6N0IGN14buRaSDEkeG7gyBwaMOhdCBow6BuaCBEUyBuaMOzbSBs4bubcCBjaMOtbmggdGjhu6ljPC9zcGFuPjwvc3Ryb25nPjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+Ljwvc3Bhbj48c3BhbiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI2U1ZWZmZjsgZm9udC1zaXplOiAxNXB4OyB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7IGZvbnQtZmFtaWx5OiAmcXVvdDtTZWdvZSBVSSZxdW90OywgU2Vnb2V1aVBjLCAmcXVvdDtTYW4gRnJhbmNpc2NvJnF1b3Q7LCAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywgSGVsdmV0aWNhLCAmcXVvdDtMdWNpZGEgR3JhbmRlJnF1b3Q7LCBSb2JvdG8sIFVidW50dSwgVGFob21hLCAmcXVvdDtNaWNyb3NvZnQgU2FucyBTZXJpZiZxdW90OywgQXJpYWwsIHNhbnMtc2VyaWY7Ij4gICAgPC9zcGFuPjwvc3Bhbj48L3A+PHA+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuPjxzdHJvbmc+KiDEkMSDbmcga8OtIGjhu41jIGzhuqFpLyBj4bqjaSB0aGnhu4duIHNhdSBraGkgY8OzIGvhur90IHF14bqjIGjhu41jIGvDrCAoc2F1IGvDrCB0aGkga+G6v3QgdGjDumMgaOG7jWMgcGjhuqduIGPhu6dhIEhLIHBo4bulKTxiciAvPjwvc3Ryb25nPjwvc3Bhbj48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiZuYnNwOyAmbmJzcDsqIFRo4budaSBnaWFuOiBU4burIDE0LzAyIMSR4bq/biAxNmcsIDE3LzAyLzIwMjIsIHF1YSBtYWlsIFBow7JuZyDEkMOgbyB04bqhby4gVGjDtG5nIHRpbiBj4bqtcCBuaOG6rXQgMThnLCAxNy8wMi8yMDIyLjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+Jm5ic3A7ICZuYnNwOyogxJDhu5FpIHTGsOG7o25nOiBTViBuxINtIGN14buRaSBjw7Mgbmh1IGPhuqd1IGjhu41jIGzhuqFpLyBj4bqjaSB0aGnhu4duIHbhu5tpIGjhu41jIHBo4bqnbiB24burYSBjw7MgxJFp4buDbSAoY+G7p2EgSEsgSSkgxJHhuqF0IMSRaeG7g20gRCBob+G6t2MgYuG7iyDEkWnhu4NtIEYuPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsgJm5ic3A7KiDEkMOzbmcgaOG7jWMgcGjDrTogbmfDoHkgMTgvMDIvMjAyMiAodHLhu7FjIHRp4bq/cCB04bqhaSBQLiBLSFRDIGhv4bq3YyBjaHV54buDbiBraG/huqNuKTxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij48c3Ryb25nPiogWOG7rSBsw60gdMawxqFuZyDEkcawxqFuZyBtw7RuIGjhu41jIChuaOG6r2MgxJHhu6N0IGN14buRaSBjaG8gU1Ygbmdvw6BpIHPGsCBwaOG6oW0pPGJyIC8+PC9zdHJvbmc+PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsgJm5ic3A7U1YgbuG7mXAgxJHGoW4gYsOhbyBjw6FvIMSRw6MgxJHEg25nIGvDrSBtw6MgaOG7jWMgcGjhuqduIGtow6FjIHbhu5tpIG3DoyBo4buNYyBwaOG6p24gcXV5IMSR4buLbmggY2hvIENUxJBUIChjaOG7pyB54bq/dSBkbyBTViBraMOzYSB0csaw4bubYyBo4buNYyBs4bqhaS8gaOG7jWMgY+G6o2kgdGhp4buHbi8gaOG7jWMgYsO5IHbhu5tpIEtow7NhIDIwIHRy4bufIMSRaSkgY2jhuq1tIG5o4bqldCBsw6AgdHJvbmcgdHXhuqduIHRo4bupIDMgY+G7p2EgSEsgKG7hu5lwIHRy4buxYyB0aeG6v3AgdOG6oWkgUGjDsm5nIMSQw6BvIHThuqFvIEMuQzAwNywgaG/hurdjIHF1YSBtYWlsIHBfZGFvdGFvQHNndS5lZHUudm4pLjwvc3Bhbj48L3NwYW4+PC9zcGFuPjwvcD48cD48c3BhbiBzdHlsZT0iY29sb3I6ICNmZjAwMDA7Ij48c3BhbiBzdHlsZT0iZm9udC13ZWlnaHQ6IGJvbGQ7IGZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiogUsO6dCBtw7RuIGjhu41jJm5ic3A7KHThu6sgdHXhuqduIHRo4bupIDMgY+G7p2EgaOG7jWMga8OsKTxiciAvPjwvc3Bhbj48L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjZmYwMDAwOyI+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICgxKSBTViBu4buZcCDEkcahbiBSw7p0IG3DtG4gaOG7jWMgdOG7qyBuZ8OgeSAyOC8wMi8yMDIyIMSR4bq/biBo4bq/dCBuZ8OgeSAwMS8wNC8yMDIyLCB04bqhaSBQaMOybmcgxJDDoG8gdOG6oW8gKEMuQzAwNyk8L3NwYW4+PGJyIC8+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPiZuYnNwOyAmbmJzcDs8L3NwYW4+PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpLCAmcXVvdDtzYW5zLXNlcmlmJnF1b3Q7OyI+Jm5ic3A7IDwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmksICZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Ij5O4buZaSBkdW5nIMSRxqFuOjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmksICZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Ij4mbmJzcDsgJm5ic3A7PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaSwgJnF1b3Q7c2Fucy1zZXJpZiZxdW90OzsiPiZuYnNwOwo8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpLCAmcXVvdDtzYW5zLXNlcmlmJnF1b3Q7OyI+KyBUaMO0bmcgdGluIFNWOiBNw6Mgc+G7kSBTViwgSOG7jSB0w6puIFNWLCBOZ8OgbmgsIEzhu5twPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaSwgJnF1b3Q7c2Fucy1zZXJpZiZxdW90OzsiPiZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmksICZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Ij4mbmJzcDsgJm5ic3A7Jm5ic3A7PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaSwgJnF1b3Q7c2Fucy1zZXJpZiZxdW90OzsiPisgQ8OhYyBo4buNYyBwaOG6p24geGluIHLDunQ6IE3DoyBIUCwgVMOqbiBIUCwgTcOjIG5ow7NtLCBT4buRIHTDrW4gY2jhu4kgKG3hu5dpIEhQIDEKZMOybmcpPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaSwgJnF1b3Q7c2Fucy1zZXJpZiZxdW90OzsiPiZuYnNwOyZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmksICZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Ij4mbmJzcDsgJm5ic3A7PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaSwgJnF1b3Q7c2Fucy1zZXJpZiZxdW90OzsiPisKVOG7lW5nIHPhu5EgdMOtbiBjaOG7iSBTViDEkcSDbmcga8O9IChjw7JuIGzhuqFpIHNhdSBraGkgcsO6dCBtw7RuIGjhu41jKSB0cm9uZyBo4buNYyBr4buzLjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmksICZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Ij4mbmJzcDsgJm5ic3A7ICZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmksICZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Ij4rIEzDvSBkbyB4aW4gcsO6dCBtw7RuIGjhu41jIChuw6p1IHLDtSBsw70gZG8pPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaSwgJnF1b3Q7c2Fucy1zZXJpZiZxdW90OzsiPiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmksICZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Ij4oTuG6v3UgdsOsIGzhu5dpIGNo4bunIHF1YW4gY+G7p2EgU1YgdGjDrCBTViBwaOG6o2kKcsO6dCBraW5oIG5naGnhu4dtIGPhu6UgdGjhu4MgxJHhu4Mga2jDtG5nIHBo4bqhbSBs4buXaSDhu58gY8OhYyDEkeG7o3QgxJBLIHNhdSk8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpLCAmcXVvdDtzYW5zLXNlcmlmJnF1b3Q7OyI+Jm5ic3A7ICZuYnNwOyAmbmJzcDs8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpLCAmcXVvdDtzYW5zLXNlcmlmJnF1b3Q7OyI+KyDDnSBraeG6v24gKGPhu6UgdGjhu4MpIGPhu6dhIGPhu5EgduG6pW4gaOG7jWMgdOG6rXAuPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmMDAwMDsiPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogVGFob21hOyI+PGJyIC8+PC9zcGFuPjwvc3Bhbj48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsgY29sb3I6ICNmZjAwMDA7Ij4mbmJzcDsgKDIpIFNWIHRoZW8gZMO1aSBEYW5oIHPDoWNoIHNpbmggdmnDqm4geGluIHLDunQgbcO0biBo4buNYyDEkcOjIMSRxrDhu6NjIGdoaSBuaOG6rW4gdOG6oWkgd2ViIFBow7JuZyDEkMOgbyB04bqhbyDEkeG7gyBraeG7g20gdHJhIHRow7RuZyB0aW4uPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmMDAwMDsiPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogVGFob21hOyI+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwOyAoMykgU1Ygbmjhuq1uIFRow7RuZyBiw6FvIHLDunQgbcO0biBo4buNYyDEkeG7gyB0csOsbmggY2hvIEdp4bqjbmcgdmnDqm4gc2F1IG5nw6B5IDE1LzA0LzIwMjIgdOG6oWkmbmJzcDs8L3NwYW4+PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyBjb2xvcjogI2ZmMDAwMDsiPlAuIMSQw6BvIHThuqFvIChDLkMwMDcpJm5ic3A7PC9zcGFuPjwvcD48cCBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDgwMDA7Ij4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMC42NjY3cHg7IGNvbG9yOiAjMDAwMDBhOyI+Jm5ic3A7PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmMDAwMDsiPjxzdHJvbmcgc3R5bGU9ImNvbG9yOiAjMDAwMDBhOyI+Q8OBQyBUSMOUTkcgVElOIEtIw4FDPC9zdHJvbmc+PHN0cm9uZz48YnIgLz48L3N0cm9uZz48L3NwYW4+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4rIFLDunQgbcO0biBo4buNYyBISyBJLCAyMDIxIC0gMjAyMjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+PHN0cm9uZz4rIEvhu7MgdGhpIGvhur90IHRow7pjIGjhu41jIHBo4bqnbiBI4buNYyBrw6wgSSwgbsSDbSBo4buNYyAyMDIxLTIwMjI8L3N0cm9uZz48L3NwYW4+PGJyIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IiAvPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsgJm5ic3A7KDEwLzEyLzIwMjEpIFRow7RuZyBiw6FvIHThu5UgY2jhu6ljIHRoaSBr4bq/dCB0aMO6YyBo4buNYyBwaOG6p24gKDwvc3Bhbj48YSBocmVmPSJodHRwOi8vdGhvbmd0aW5kYW90YW8uc2d1LmVkdS52bi9VcGxvYWQvZmlsZS8yNTY4X1RCJTIwdiVFMSVCQiU4MSUyMHZpJUUxJUJCJTg3YyUyMHQlRTElQkIlOTUlMjBjaCVFMSVCQiVBOWMlMjB0aGklMjBrJUUxJUJBJUJGdCUyMHRoJUMzJUJBYyUyMEhQJTIwSCVFMSVCQiU4RGMlMjBrJUMzJUFDJTIwSSUyMG4lQzQlODNtJTIwaCVFMSVCQiU4RGMlMjAyMDIxLTIwMjIuLnBkZiIgc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPlRCIDI1NjgvVEItxJBIU0csIDEwLzEyLzIwMjE8L2E+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPik8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPjxzdHJvbmc+KyBL4bq/dCBxdeG6oyBo4buNYyB04bqtcCBo4buNYyBrw6wgSOG7jWMga8OsIEksIG7Eg20gaOG7jWMgMjAyMS0yMDIyPC9zdHJvbmc+PGJyIC8+Jm5ic3A7ICZuYnNwOzxzdHJvbmc+KiDEkGnhu4NtIHF1w6EgdHLDrG5oPC9zdHJvbmc+ICjEkFFUKSZuYnNwO8SRxrDhu6NjIHRow7RuZyB0aW4gdOG7qyAxNmcsIDExLzAxLzIwMjImbmJzcDsgJm5ic3A7Jm5ic3A7PGJyIC8+PHN0cm9uZz4mbmJzcDsgJm5ic3A7Jm5ic3A7PC9zdHJvbmc+QuG7lSBzdW5nIMSQUVQgbcO0biBHRCB0aOG7gyBjaOG6pXQgdsOgIGPhuq1wIG5o4bqtdCBjw6FjIMSRaeG7gXUgY2jhu4luaCB24buBIMSQUVQgKHRoZW8gdOG7nSB0csOsbmggdOG7qyBHVikgdOG7qyAyOS8wMS8yMDIyLjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICZuYnNwOzxzdHJvbmc+KiDEkGnhu4NtIHRoaSBr4bq/dCB0aMO6YyBo4buNYyBwaOG6p24gPC9zdHJvbmc+xJHGsOG7o2MgdGjDtG5nIHRpbiB04burIDhnLCAyOS8wMS8yMDIyPGJyIC8+Jm5ic3A7ICZuYnNwOyZuYnNwO8SQxrDhu6NjIGPhuq1wIG5o4bqtdCBob8OgbiBjaOG7iW5oIHThu6sgMTdnLCAwNy8wMi8yMDIyLiZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICZuYnNwOyAmbmJzcDs8YnIgLz48L3NwYW4+PHN0cm9uZyBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICZuYnNwOyA8L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+QuG7lSBzdW5nLyBj4bqtcCBuaOG6rXQga+G6v3QgcXXhuqMgaOG7jWMgdOG6rXAgaOG7jWMga+G7syB04burPC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDs8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPjE2ZywgMTEvMDIvMjAyMjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+PHN0cm9uZz5QaMO6YyBraOG6o28gxJFp4buDbSB0aGkga+G6v3QgdGjDumMgaOG7jWMgcGjhuqduPGJyIC8+PC9zdHJvbmc+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsgJm5ic3A7LSBUaOG7nWkgZ2lhbiBuaOG6rW4gxJHGoW4geGluIHBow7pjIGto4bqjbyB2w6AgY2h1eeG7g24ga2hv4bqjbiBs4buHIHBow606IHThu6sgMDgvMDIvMjAyMiDEkeG6v24gMTUvMDIvMjAyMi48YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiZuYnNwOyAmbmJzcDstJm5ic3A7KDwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+MTBnLCAyOC8wMi8yMDIyKSZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+S+G6v3QgcXXhuqMgcGjDumMga2jhuqNvIMSRw6MgxJHGsOG7o2MgdGjDtG5nIHRpbiDEkeG6v24gY8OhYyBraG9hLyBuZ8OgbmguJm5ic3A7PGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGNvbG9yOiAjMDAwMDBhOyI+LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTwvc3Bhbj48L3A+PHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBUYWhvbWE7IGZvbnQtc2l6ZTogMTAuNjY2N3B4OyI+PHNwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgY29sb3I6ICNmZjAwMDA7Ij48c3Ryb25nPlThu5RORyBL4bq+VCBI4buMQyBLw4wgSSwgTsSCTSBI4buMQyAyMDIxIC0gMjAyMjwvc3Ryb25nPjwvc3Bhbj48YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPjxzdHJvbmc+KyBC4bqjbmcgxJFp4buDbSB04buVbmcgaOG7o3AgaOG7jWMga8OsPGJyIC8+PC9zdHJvbmc+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsgJm5ic3A7IDE3ZywgMTYvMDIvMjAyMiwgUGjDoXQgaMOgbmggQuG6o25nIMSRaeG7g20gdOG7lW5nIGjhu6NwIGzhu5twIGjhu41jIGvhu7MgxJHhur9uIGPDoWMgS2hvYS8gbmfDoG5oPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGNvbG9yOiAjMDAwMGZmOyI+KyZuYnNwOzxzdHJvbmc+WMOpdCBj4bqlcCBjaOG7qW5nIGNo4buJIEdpw6FvIGThu6VjIFF14buRYyBwaMOybmcgdsOgIEFuIG5pbmg7IMSR4bqhdCBtw7RuIGjhu41jIEdpw6FvIGThu6VjIHRo4buDIGNo4bqldDwvc3Ryb25nPjxiciAvPiZuYnNwOyAmbmJzcDsgJm5ic3A7RFMgxJHGsOG7o2MgdGjDtG5nIHRpbiB04bqhaSB3ZWIgUGjDsm5nIMSQw6BvIHThuqFvIHNhdSBuZ8OgeSAwMS8wMy8yMDIyPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsmbmJzcDsoMTEvMDMvMjAyMikmbmJzcDtEUyBjaMOtbmggdGjhu6ljIMSRxrDhu6NjIHRow7RuZyB0aW4gdOG6oWkgd2ViIFBow7JuZyDEkMOgbyB04bqhby48YnIgLz4mbmJzcDsgJm5ic3A7IMSQ4bq3YyBiaeG7h3QsJm5ic3A7PHN0cm9uZz5TViBLaMOzYSAxOCZuYnNwOzwvc3Ryb25nPijEkcaw4bujYyB4w6l0IHNhdSBISyBJLCAyMDIxIC0gMjAyMiwgdOG7qWMgSEsgdGjhu6kgNyBj4bunYSBraMOzYSDEkcOgbyB04bqhbykgbMawdSDDvSBraeG7g20gdHJhIGvhur90IHF14bqjIHjDqXQgdsOsIMSRw6J5IGzDoCDEkWnhu4F1IGtp4buHbiDEkeG7gyBTViDEkcaw4bujYyB4w6l0IHThu5F0IG5naGnhu4dwIHRoZW8gdGnhur9uIMSR4buZIHNhdSBISyBJSSwgMjAyMSAtIDIwMjIuIFNWIHBo4bqjbiBo4buTaSB0aOG6r2MgbeG6r2MgKG7hur91IGPDsykgxJHhur9uIFBow7JuZyDEkMOgbyB04bqhbywmbmJzcDs8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPnRyxrDhu5tjIG5nw6B5IDI3LzAzLzIwMjIsJm5ic3A7PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij7EkeG7gyDEkcaw4bujYyB4w6l0IGLhu5Ugc3VuZyB2w6BvIGN14buRaSBISyBJSS48YnIgLz48L3NwYW4+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGNvbG9yOiAjMDAwMGZmOyI+KyZuYnNwOzwvc3Bhbj48c3Ryb25nIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsgZm9udC1zaXplOiAxNnB4OyI+WMOpdCBj4bqjbmggYsOhbyBr4bq/dCBxdeG6oyBo4buNYyB04bqtcCwgYnXhu5ljIHRow7RpIGjhu41jIMSR4bujdCAxIG7Eg20gMjAyMiZuYnNwOzwvc3Ryb25nPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGNvbG9yOiAjMDAwMGZmOyI+KHNhdSBISyBJLCDEkeG7o3QgeMOpdCBuZ8OgeSAwMS8wMy8yMDIyKTxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB4OyBjb2xvcjogIzAwMDBmZjsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsgJm5ic3A7PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4oMjQvMDIvMjAyMik8c3Ryb25nPiZuYnNwOzwvc3Ryb25nPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+S+G6v3QgcXXhuqMgeMOpdCAoZOG7sSBraeG6v24pIMSRxrDhu6NjIHRow7RuZyB0aW4gxJHhur9uIGPDoWMga2hvYS8gbmfDoG5oLiBTViBsacOqbiBo4buHIHbhu5tpIGPhu5EgduG6pW4gaOG7jWMgdOG6rXAgxJHhu4MgYmnhur90IHRow7RuZyB0aW4uJm5ic3A7PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+U1YgcGjhuqNuIGjhu5NpIChu4bq/dSBjw7MpIHRow7RuZyBxdWEgS2hvYSB0csaw4bubYyAxMGcsIDI4LzAyLzIwMjIuPGJyIC8+PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBjb2xvcjogI2ZmMDAwMDsiPiZuYnNwOyAmbmJzcDs8L3NwYW4+PHN0cm9uZyBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBjb2xvcjogI2ZmMDAwMDsiPigxMC8wMy8yMDIyKSZuYnNwOzwvc3Ryb25nPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGNvbG9yOiAjZmYwMDAwOyI+RGFuaCBzw6FjaCBDQktRSFQsIEJUSCAoY2jDrW5oIHRo4bupYykgxJHGsOG7o2MgZ+G7rWkgxJHhur9uIHThu6tuZyBLaG9hLyBuZ8Ogbmg8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgY29sb3I6ICNmZjAwMDA7Ij4uPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGNvbG9yOiAjMDAwMGZmOyI+KyZuYnNwOzwvc3Bhbj48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGNvbG9yOiAjMDAwMGZmOyI+WMOpdCBideG7mWMgdGjDtGkgaOG7jWMgZG8gdsaw4bujdCBxdcOhIHRo4budaSBnaWFuIMSRw6BvIHThuqFvLCDEkeG7o3QgMSBuxINtIDIwMjImbmJzcDs8L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBjb2xvcjogIzAwMDBmZjsiPihzYXUgSEsgSSwgxJHhu6N0IHjDqXQgbmfDoHkgMDEvMDMvMjAyMik8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJweDsgY29sb3I6ICMwMDAwZmY7Ij48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+KDI0LzAyLzIwMjIpPHN0cm9uZz4mbmJzcDs8L3N0cm9uZz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPkvhur90IHF14bqjIHjDqXQgKGThu7Ega2nhur9uKSDEkcaw4bujYyB0aMO0bmcgdGluIMSR4bq/biBjw6FjIGtob2EvIG5nw6BuaC4gU1YgbGnDqm4gaOG7hyB24bubaSBj4buRIHbhuqVuIGjhu41jIHThuq1wIMSR4buDIGJp4bq/dCB0aMO0bmcgdGluLiZuYnNwOzwvc3Bhbj48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgY29sb3I6ICMwMDAwZmY7Ij5TViBwaOG6o24gaOG7k2kgKG7hur91IGPDsykgdGjDtG5nIHF1YSBLaG9hIHRyxrDhu5tjIDE4ZywgMDMvMDMvMjAyMi48YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgY29sb3I6ICNmZjAwMDA7Ij4mbmJzcDsgJm5ic3A7PC9zcGFuPjxzdHJvbmcgc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgY29sb3I6ICNmZjAwMDA7Ij4oMTAvMDMvMjAyMikmbmJzcDs8L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBjb2xvcjogI2ZmMDAwMDsiPkRhbmggc8OhY2ggQlRIIGRvIHbGsOG7o3QgcXXDoSB0aOG7nWkgZ2lhbiDEkcOgbyB04bqhbyAoY2jDrW5oIHRo4bupYykgxJHGsOG7o2MgZ+G7rWkgxJHhur9uIHThu6tuZyBLaG9hLyBuZ8Ogbmg8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgY29sb3I6ICNmZjAwMDA7Ij4uPC9zcGFuPjwvcD48cCBzdHlsZT0iY29sb3I6ICMwMDAwMGE7IGZvbnQtZmFtaWx5OiBUYWhvbWE7IGZvbnQtc2l6ZTogMTAuNjY2N3B4OyI+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPjxzdHJvbmcgc3R5bGU9ImNvbG9yOiAjZmYwMDAwOyI+LS0tLS0tLS0tLS0tLS0tLS0tLS0tLTxiciAvPljDiVQgQ8OUTkcgTkjhuqxOIFThu5BUIE5HSEnhu4ZQIE7Egk0gMjAyMjwvc3Ryb25nPjwvc3Bhbj48L3A+PHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBUYWhvbWE7IGZvbnQtc2l6ZTogMTAuNjY2N3B4OyI+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgY29sb3I6ICMwMDAwMGE7Ij48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij5Dw6FjIHF1eSDEkeG7i25oIMOhcCBk4bulbmcgdOG7qyBuxINtIDIwMjEgdHLhu58gxJFpPGJyIC8+PHN0cm9uZz4rJm5ic3A7UXV5IMSR4buLbmggduG7gSB4w6l0IGPDtG5nIG5o4bqtbiB04buRdCBuZ2hp4buHcCBow6xuaCB0aOG7qWMgxJHDoG8gdOG6oW8gY2jDrW5oIHF1eTwvc3Ryb25nPjwvc3Bhbj48YnIgLz48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4oeGVtIHThuqFpIHdlYiBQaMOybmcgxJDDoG8gdOG6oW8sIG3hu6VjIFRyYSBj4bupdSB2xINuIGLhuqNuKSZuYnNwOzwvc3Bhbj48YnIgLz48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4mbmJzcDsgJm5ic3A7IC0gSOG7hyBjaMOtbmggcXV5ICZuYnNwOzwvc3Bhbj48YnIgLz48ZW0gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+Jm5ic3A7ICZuYnNwOyAoUXV5IMSR4buLbmggMjgwMC9RecSQLcSQSFNHLcSQVCB2L3YgeMOpdCBjw7RuZyBuaOG6rW4gdOG7kXQgbmdoaeG7h3AgxJHhu5FpIHbhu5tpIHRyw6xuaCDEkeG7mSDEkEgsIEPEkCB0aGVvIGjhu4cgdGjhu5FuZyB0w61uIGNo4buJKTxiciAvPjwvZW0+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+Jm5ic3A7ICZuYnNwOyAtIEjhu4cgbGnDqm4gdGjDtG5nIHbDoCBi4bqxbmcgxJHhuqFpIGjhu41jIHRo4bupIGhhaSZuYnNwOzwvc3Bhbj48YnIgLz48ZW0gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+Jm5ic3A7ICZuYnNwOyAoVGjDtG5nIGLDoW8gMjU0NS9UQi3EkEhTRyB24buBIHZp4buHYyB4w6l0IGPDtG5nIG5o4bqtbiB04buRdCBuZ2hp4buHcCBuxINtIDIwMTkgaOG7hyDEkeG6oWkgaOG7jWMgYuG6sW5nIHRo4bupIGhhaSB2w6AgaOG7hyBsacOqbiB0aMO0bmcsIGjDrG5oIHRo4bupYyBjaMOtbmggcXV5KTwvZW0+PGJyIC8+PHN0cm9uZyBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4rIFF1eSDEkeG7i25oIHbhu4EgeMOpdCBjw7RuZyBuaOG6rW4gdOG7kXQgbmdoaeG7h3AgaMOsbmggdGjhu6ljIMSRw6BvIHThuqFvIHbhu6thIGzDoG0gduG7q2EgaOG7jWMmbmJzcDs8L3N0cm9uZz48YnIgLz48c3BhbiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uLWxpbmU6IHVuZGVybGluZTsgY29sb3I6ICMwMDAwZmY7Ij4oYuG6r3QgxJHhuqd1IMOhcCBk4bulbmcgdOG7qyBuxINtIDIwMjApPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsiPiZuYnNwOzwvc3Bhbj48YnIgLz48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4oeGVtIHThuqFpIHdlYiBQaMOybmcgxJDDoG8gdOG6oW8sIG3hu6VjIFRyYSBj4bupdSB2xINuIGLhuqNuKTwvc3Bhbj48YnIgLz48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4mbmJzcDsgJm5ic3A7IC0mbmJzcDtI4buHIMSR4bqhaSBo4buNYyB24burYSBsw6BtIHbhu6thIGjhu41jPC9zcGFuPjxiciAvPjxlbSBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4mbmJzcDsgJm5ic3A7IChRdXkgxJHhu4tuaCAyNjk1L1F5xJAtxJBIU0csIDIxLzEwLzIwMTksIHbhu4Egdmnhu4djIHjDqXQgY8O0bmcgbmjhuq1uIHThu5F0IG5naGnhu4dwIMSR4buRaSB24bubaSB0csOsbmggxJHhu5kgxJHhuqFpIGjhu41jIGjDrG5oIHRo4bupYyB24burYSBsw6BtIHbhu6thIGjhu41jKTwvZW0+PGJyIC8+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+Jm5ic3A7ICZuYnNwOyAtIEjhu4cgbGnDqm4gdGjDtG5nIHThu6sgdHLDrG5oIMSR4buZIGNhbyDEkeG6s25nIGzDqm4gxJHhuqFpIGjhu41jIHbhu6thIGzDoG0gduG7q2EgaOG7jWM8L3NwYW4+PGJyIC8+PGVtIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsiPiZuYnNwOyAmbmJzcDsgKFRow7RuZyBiw6FvIDI2OTYvVEItxJBIU0csIDIxLzEwLzIwMTksIHbhu4Egdmnhu4djIHjDqXQgY8O0bmcgbmjhuq1uIHThu5F0IG5naGnhu4dwIMSR4buRaSB24bubaSBo4buHIGxpw6puIHRow7RuZyB04burIHRyw6xuaCDEkeG7mSBjYW8gxJHhurNuZyBsw6puIHRyw6xuaCDEkeG7mSDEkeG6oWkgaOG7jWMsIGjDrG5oIHRo4bupYyB24burYSBsw6BtIHbhu6thIGjhu41jKTxiciAvPjwvZW0+PC9zcGFuPjxzdHJvbmcgc3R5bGU9ImNvbG9yOiAjMDAwMDBhOyBmb250LXNpemU6IDE2cHg7Ij48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4rIENodeG6qW4gxJHhuqd1IHJhIG5nb+G6oWkgbmfhu68gdHJvbmcgeMOpdCBjw7RuZyBuaOG6rW4gdOG7kXQgbmdoaeG7h3AgKMOhcCBk4bulbmcgdOG7qyBuxINtIDIwMjEpPGJyIC8+PC9zcGFuPjwvc3Ryb25nPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4mbmJzcDsgJm5ic3A7IChUaMO0bmcgYsOhbyA1MzYvxJBIU0ctxJBULCAzMC8wMy8yMDIwOyB4ZW0gdOG6oWkgd2ViIFBow7JuZyDEkMOgbyB04bqhbywgbeG7pWMgVHJhIGPhu6l1IHbEg24gYuG6o24pPC9zcGFuPjxiciAvPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsiPjxzdHJvbmc+KyBDw6FjIMSR4bujdCB4w6l0IGPDtG5nIG5o4bqtbiB04buRdCBuZ2hp4buHcCBuxINtIDIwMjImbmJzcDs8L3N0cm9uZz48YnIgLz48L3NwYW4+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGNvbG9yOiAjMDAwMGZmOyI+Jm5ic3A7ICZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+Q8SDbiBj4bupIEJpw6puIGNo4bq/IG7Eg20gaOG7jWMgMjAyMS0yMDIyIChiYW4gaMOgbmggbmfDoHkgMDIvMDgvMjAyMSk8YnIgLz4mbmJzcDsgJm5ic3A7xJDhu6N0IDE6IG5nw6B5IDAxLzAzLzIwMjI7Jm5ic3A7xJDhu6N0IDI6IDI0LzA2LzIwMjI7Jm5ic3A7xJDhu6N0IDM6IDEyLzA3LzIwMjI7Jm5ic3A7xJDhu6N0IDQ6Jm5ic3A7MDYvMDkvMjAyMjxiciAvPi0tLS0tPGJyIC8+PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+PHN0cm9uZz5Yw6l0IHThu5F0IG5naGnhu4dwIMSR4bujdCAxIG7Eg20gMjAyMjo8L3N0cm9uZz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwOyBOZ8OgeSB4w6l0OiAwMS8wMy8yMDIyPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsgJm5ic3A7Tmjhuq1uIGjhu5Mgc8ahIEPEkFIgdsOgIMSRxqFuIHjDqXQgVE4gc+G7m20vIHRy4buFIGjhuqFuOiB04burIDE3LzAxIMSR4bq/biAyMi8wMi8yMDIyLjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB4OyI+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwOyAmbmJzcDs8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPigyNC8wMi8yMDIyKTwvc3Bhbj48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwO0vhur90IHF14bqjIHjDqXQgdOG7kXQgbmdoaeG7h3AgKGThu7Ega2nhur9uKSDEkcaw4bujYyBn4butaSDEkeG6v24gY8OhYyBraG9hLyBuZ8OgbmguIFNWIGxpw6puIGjhu4cgduG7m2kga2hvYS8gbmfDoG5oIMSR4buDIGJp4bq/dCBjaGkgdGnhur90IChEUyB04buRdCBuZ2hp4buHcCB2w6AgRFMgY2jGsGEgdOG7kXQgbmdoaeG7h3Aga8OobSBsw60gZG8gY2jGsGEgdOG7kXQgbmdoaeG7h3ApLiBTViBwaOG6o24gaOG7k2kgKG7hur91IGPDsykgdGjDtG5nIHF1YSBLaG9hIHRyxrDhu5tjIDEwZywgMjgvMDIvMjAyMi48YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwOyAoMTEvMDMvMjAyMik8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwO0Rhbmggc8OhY2ggxJHGsOG7o2MgY8O0bmcgbmjhuq1uIHThu5F0IG5naGnhu4dwIGNow61uaCB0aOG7qWMgxJHhu6N0IDEgbsSDbSAyMDIyIMSRxrDhu6NjIMSRxINuZyB04bqhaSB3ZWIgUGjDsm5nIMSQw6BvIHThuqFvICg8L3NwYW4+PGEgaHJlZj0iaHR0cDovL3Rob25ndGluZGFvdGFvLnNndS5lZHUudm4vVXBsb2FkL2ZpbGUvSEsyMTFfRFNTVl9Ub3ROZ2hpZXBfRG90MS5yYXIiIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij504bqjaSBkYW5oIHPDoWNoPC9hPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4pLiZuYnNwO1NWIGPDsyBuaHUgY+G6p3UgY+G6pXAgR2nhuqV5IGNo4bupbmcgbmjhuq1uIHThu5F0IG5naGnhu4dwIHThuqFtIHRo4budaSwgbGnDqm4gaOG7hyB24bubaSBQaMOybmcgxJDDoG8gdOG6oW8gKMSR4bq/biB0cuG7sWMgdGnhur9wIHBow7JuZyBDLkMwMDggaG/hurdjIGfhu61pIG1haWwgcF9kYW90YW9Ac2d1LmVkdS52bikuPC9zcGFuPjwvcD48cCBzdHlsZT0iY29sb3I6ICMwMDAwMGE7IGZvbnQtZmFtaWx5OiBUYWhvbWE7IGZvbnQtc2l6ZTogMTAuNjY2N3B4OyI+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPi0tLS0tLS0tLS0tLS0tLS0tLS0tIFhlbSBjaGkgdGnhur90IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSZndDs8L3NwYW4+PC9wPjwvc3Bhbj48ZGl2IHN0eWxlPSd0ZXh0LWFsaWduOnJpZ2h0JyA+PGRpdiBjbGFzcz0nQ2hpVGlldCc+PGltZyBzcmM9J0FwcF9UaGVtZXMvU3RhbmRhcmQvSW1hZ2VzL2Fycm93X3IuZ2lmJyBhbHQ9JycvPiA8YSBjbGFzcz0nVGV4dFRob25nVGluJyBocmVmPSdkZWZhdWx0LmFzcHg/cGFnZT1jaGl0aWV0dGhvbmd0aW4maWQ9MTEnPlhlbSBDaGkgVGnhur90PC9hPjwvZGl2PjwvZGl2Ph8EAoCABGRkAgIPZBYCZg8PFgYfCAsrBAEfAgXeAjx0YWJsZSB3aWR0aD0nMzAwcHgnIHN0eWxlPSd0ZXh0LWFsaWduOmxlZnQnPjx0cj48dGQgcm93c3Bhbj0nMicgd2lkdGg9JzE1cHgnPjxpbWcgc3JjPScuLi8vQXBwX1RoZW1lcy9TdGFuZGFyZC9JbWFnZXMvaW1hZ2VzLmpwZycNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPScxNXB4JyBhbHQ9JycvPjwvdGQ+PHRkIGFsaWduPSdsZWZ0JyB3aWR0aD0nMjgwcHgnPiBC4bqjbiB0aW4gY8WpPC90ZD48dGQgYWxpZ249J2xlZnQnPjxzcGFuIGNsYXNzPSd0YXRjYWJhbnRpbic+PC90ZD48L3RyPjx0cj48dGQgY29sc3Bhbj0nMicgY2xhc3M9J2tlY2hhbSc+PC90ZD48L3RyPjwvdGFibGU+HwQCgIAEZGQCAw9kFgJmDw8WBh8ICysEAR8CBYkCPGltZyBzcmM9J0FwcF9UaGVtZXMvU3RhbmRhcmQvSW1hZ2VzL0J1bGw5LmdpZicgYWx0PScnLz48YSBjbGFzcz0nVGV4dFRpdGxlJyBocmVmPSdkZWZhdWx0LmFzcHg/cGFnZT1jaGl0aWV0dGhvbmd0aW4maWQ9MTAnPjxzdHJvbmc+VGjDtG5nIHRpbiDEkcOgbyB04bqhbyBjdeG7kWkgSEsgcGjhu6UsIDIwMjAtMjAyMTsgxJHhuqd1IEhLIEksIDIwMjEtMjAyMjwvc3Ryb25nPi4uLiA8c3BhbiBjbGFzcz0nTmdheVRpdGxlJz4oMTQvMDgvMjAyMSk8L3NwYW4+PC9hPh8EAoCABGRkAgQPZBYCZg8PFgYfCAsrBAEfAgWLAjxpbWcgc3JjPSdBcHBfVGhlbWVzL1N0YW5kYXJkL0ltYWdlcy9CdWxsOS5naWYnIGFsdD0nJy8+PGEgY2xhc3M9J1RleHRUaXRsZScgaHJlZj0nZGVmYXVsdC5hc3B4P3BhZ2U9Y2hpdGlldHRob25ndGluJmlkPTknPjxzdHJvbmc+VGjDtG5nIHRpbiDEkcOgbyB04bqhbyBjdeG7kWkgSEsgSUksIMSR4bqndSBISyBwaOG7pSwgbsSDbSBo4buNYyAyMDIwIC0gMjAyMTwvc3Ryb25nPi4uLiA8c3BhbiBjbGFzcz0nTmdheVRpdGxlJz4oMjAvMDQvMjAyMSk8L3NwYW4+PC9hPh8EAoCABGRkAgUPZBYCZg8PFgYfCAsrBAEfAgWIAjxpbWcgc3JjPSdBcHBfVGhlbWVzL1N0YW5kYXJkL0ltYWdlcy9CdWxsOS5naWYnIGFsdD0nJy8+PGEgY2xhc3M9J1RleHRUaXRsZScgaHJlZj0nZGVmYXVsdC5hc3B4P3BhZ2U9Y2hpdGlldHRob25ndGluJmlkPTgnPjxzdHJvbmc+VGjDtG5nIHRpbiDEkcOgbyB04bqhbyBjdeG7kWkgSEsgSSwgxJHhuqd1IEhLIElJIC0gTsSDbSBo4buNYyAyMDIwIC0gMjAyMTwvc3Ryb25nPi4uLiA8c3BhbiBjbGFzcz0nTmdheVRpdGxlJz4oMTcvMTEvMjAyMCk8L3NwYW4+PC9hPh8EAoCABGRkAgYPZBYCZg8PFgYfCAsrBAEfAgWOAjxpbWcgc3JjPSdBcHBfVGhlbWVzL1N0YW5kYXJkL0ltYWdlcy9CdWxsOS5naWYnIGFsdD0nJy8+PGEgY2xhc3M9J1RleHRUaXRsZScgaHJlZj0nZGVmYXVsdC5hc3B4P3BhZ2U9Y2hpdGlldHRob25ndGluJmlkPTYnPjxzdHJvbmc+VGjDtG5nIHRpbiDEkcOgbyB04bqhbyBjdeG7kWkgSEsgcGjhu6UgTkggMjAxOS0yMDIwLCDEkeG6p3UgSEsgMSBOSCAyMDIwIC0gMjAyMTwvc3Ryb25nPi4uLiA8c3BhbiBjbGFzcz0nTmdheVRpdGxlJz4oMDgvMDgvMjAyMCk8L3NwYW4+PC9hPh8EAoCABGRkAgcPZBYCZg8PFgYfCAsrBAEfAgWEAjxpbWcgc3JjPSdBcHBfVGhlbWVzL1N0YW5kYXJkL0ltYWdlcy9CdWxsOS5naWYnIGFsdD0nJy8+PGEgY2xhc3M9J1RleHRUaXRsZScgaHJlZj0nZGVmYXVsdC5hc3B4P3BhZ2U9Y2hpdGlldHRob25ndGluJmlkPTUnPjxzdHJvbmc+VGjDtG5nIHRpbiDEkcOgbyB04bqhbyBjdeG7kWkgSEsyLCDEkeG6p3UgSEszLCBuxINtIGjhu41jIDIwMTkgLSAyMDIwPC9zdHJvbmc+Li4uIDxzcGFuIGNsYXNzPSdOZ2F5VGl0bGUnPigwNC8wNi8yMDIwKTwvc3Bhbj48L2E+HwQCgIAEZGQCCA9kFgJmDw8WBh8ICysEAR8CBYQCPGltZyBzcmM9J0FwcF9UaGVtZXMvU3RhbmRhcmQvSW1hZ2VzL0J1bGw5LmdpZicgYWx0PScnLz48YSBjbGFzcz0nVGV4dFRpdGxlJyBocmVmPSdkZWZhdWx0LmFzcHg/cGFnZT1jaGl0aWV0dGhvbmd0aW4maWQ9NCc+PHN0cm9uZz5UaMO0bmcgdGluIMSRw6BvIHThuqFvIGN14buRaSBISzEsIMSR4bqndSBISzIsIG7Eg20gaOG7jWMgMjAxOSAtIDIwMjA8L3N0cm9uZz4uLi4gPHNwYW4gY2xhc3M9J05nYXlUaXRsZSc+KDI5LzEwLzIwMTkpPC9zcGFuPjwvYT4fBAKAgARkZAIJD2QWAmYPDxYGHwgLKwQBHwIFmAI8aW1nIHNyYz0nQXBwX1RoZW1lcy9TdGFuZGFyZC9JbWFnZXMvQnVsbDkuZ2lmJyBhbHQ9JycvPjxhIGNsYXNzPSdUZXh0VGl0bGUnIGhyZWY9J2RlZmF1bHQuYXNweD9wYWdlPWNoaXRpZXR0aG9uZ3RpbiZpZD0zJz48c3Ryb25nPlRow7RuZyB0aW4gxJHDoG8gdOG6oW8gY3Xhu5FpIEhLMywgbsSDbSBo4buNYyAyMDE4LTIwMTk7IMSR4bqndSBISzEsIG7Eg20gaOG7jWMgMjAxOS0yMDIwPC9zdHJvbmc+Li4uIDxzcGFuIGNsYXNzPSdOZ2F5VGl0bGUnPigyNC8wNy8yMDE5KTwvc3Bhbj48L2E+HwQCgIAEZGQCCg9kFgJmDw8WBh8ICysEAR8CBYQCPGltZyBzcmM9J0FwcF9UaGVtZXMvU3RhbmRhcmQvSW1hZ2VzL0J1bGw5LmdpZicgYWx0PScnLz48YSBjbGFzcz0nVGV4dFRpdGxlJyBocmVmPSdkZWZhdWx0LmFzcHg/cGFnZT1jaGl0aWV0dGhvbmd0aW4maWQ9MSc+PHN0cm9uZz5UaMO0bmcgdGluIMSRw6BvIHThuqFvIGN14buRaSBISzIsIMSR4bqndSBISzMsIG7Eg20gaOG7jWMgMjAxOCAtIDIwMTk8L3N0cm9uZz4uLi4gPHNwYW4gY2xhc3M9J05nYXlUaXRsZSc+KDIwLzA0LzIwMTkpPC9zcGFuPjwvYT4fBAKAgARkZAILD2QWAmYPDxYGHwgLKwQBHwIFhAI8aW1nIHNyYz0nQXBwX1RoZW1lcy9TdGFuZGFyZC9JbWFnZXMvQnVsbDkuZ2lmJyBhbHQ9JycvPjxhIGNsYXNzPSdUZXh0VGl0bGUnIGhyZWY9J2RlZmF1bHQuYXNweD9wYWdlPWNoaXRpZXR0aG9uZ3RpbiZpZD0wJz48c3Ryb25nPlRow7RuZyB0aW4gxJHDoG8gdOG6oW8gY3Xhu5FpIEhLMSwgxJHhuqd1IEhLMiwgbsSDbSBo4buNYyAyMDE4IC0gMjAxOTwvc3Ryb25nPi4uLiA8c3BhbiBjbGFzcz0nTmdheVRpdGxlJz4oMjIvMTEvMjAxOCk8L3NwYW4+PC9hPh8EAoCABGRkAgwPZBYCZg8PFgYfCAsrBAMfAgVnPHNwYW4gY2xhc3M9J3RhdGNhYmFudGluJz48YSBocmVmPSdkZWZhdWx0LmFzcHg/cGFnZT1kYW5oc2FjaHRob25ndGluJnR5cGU9MSc+WGVtIHThuqV0IGPhuqM8L2E+PC9zcGFuPh8EAoCABGRkAggPFgIfAgUOPC90ZD48L3RyPjx0cj5kAgoPFgIfAgUEPHRkPmQCCw8PFgIfAgUmVEjDlE5HIFRJTiBI4buGIFbhu6pBIEjhu4xDIFbhu6pBIEzDgE1kZAIMD2QWBmYPZBYCZg8PFggfAgXzATxhIGNsYXNzPSdUZXh0VGl0bGUnIGhyZWY9J2RlZmF1bHQuYXNweD9wYWdlPWNoaXRpZXR0aG9uZ3RpbiZpZD0yJz48c3Ryb25nPlRow7RuZyB0aW4gxJHDoG8gdOG6oW8gY8OhYyBs4bubcCBMacOqbiB0aMO0bmcgKGNow61uaCBxdXksIHbhu6thIGzDoG0gduG7q2EgaOG7jWMpLCBWxINuIGLhurFuZyAyIChjaMOtbmggcXV5KTwvc3Ryb25nPjwvYT48c3BhbiBjbGFzcz0nTmdheVRpdGxlJz4gKDIwLzA0LzIwMTkpPC9zcGFuPh8DCiUfCAsrBAEfBAKEgARkZAIBD2QWAmYPDxYGHwgLKwQBHwIFnhY8c3BhbiBjbGFzcz0nVGV4dFRob25nVGluJyBzdHlsZT0ndGV4dC1hbGlnbjpsZWZ0Jz48cD48L3A+PHN0cm9uZyBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyBmb250LWZhbWlseTogVGFob21hOyI+VEjDlE5HIFRJTiBDw4FDIEtIw5NBIMSQw4MgxJDDgE8gVOG6oE88L3N0cm9uZz48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDEycHQ7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48YnIgLz48L3N0cm9uZz48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDEycHQ7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4tIEjhu4YgTEnDik4gVEjDlE5HIC0gSMOMTkggVEjhu6hDIFbhu6pBIEzDgE0gVuG7qkEgSOG7jEM8YnIgLz48L3N0cm9uZz48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDgwMDA7Ij48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDEycHQ7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4rIEtow7NhIDE5IChjw6FjIGzhu5twIERTQTMxOTEsIERHVDMxOTEsIERHVDMxOTIpPC9zdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxiciAvPjxzdHJvbmc+Jm5ic3A7ICZuYnNwOyZuYnNwOzwvc3Ryb25nPljDqXQgdOG7kXQgbmdoaeG7h3AgxJHDum5nIHRp4bq/biDEkeG7mSB2w6BvIMSQ4bujdCAxLCBuxINtIDIwMjEgKHbDoG8gbmfDoHkgMDIvMDMvMjAyMSk8YnIgLz48L3NwYW4+PC9zcGFuPjxzdHJvbmcgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPi0gSOG7hiDEkOG6oEkgSOG7jEMgQuG6sE5HIFRI4buoIDIgLSBIw4xOSCBUSOG7qEMgQ0jDjU5IIFFVWTxiciAvPjwvc3Ryb25nPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwODAwMDsiPjxzdHJvbmcgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPisgS2jDs2EgMTcgKGzhu5twIERBTjUxNzEgKTwvc3Ryb25nPjxiciBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyBmb250LWZhbWlseTogVGFob21hOyIgLz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyBmb250LWZhbWlseTogVGFob21hOyI+Jm5ic3A7ICZuYnNwOzwvc3Bhbj48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDEycHQ7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij5Yw6l0IHThu5F0IG5naGnhu4dwIMSRw7puZyB0aeG6v24gxJHhu5k8L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyBmb250LWZhbWlseTogVGFob21hOyI+IHbDoG8gxJDhu6N0IDEsIE7Eg20gMjAyMCAoMjUvMDIvMjAyMCkuJm5ic3A7PC9zcGFuPjwvc3Bhbj48ZW0gc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsgZm9udC1mYW1pbHk6IFRhaG9tYTsgY29sb3I6ICMwMDAwZmY7Ij48YnIgLz48L2VtPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwODAwMDsiPjxzdHJvbmcgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPisgS2jDs2EgMTggKGzhu5twIERBTjUxODEpPC9zdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxiciAvPiZuYnNwOyAmbmJzcDtYw6l0IHThu5F0IG5naGnhu4dwIMSRw7puZyB0aeG6v24gxJHhu5kgdsOgbyDEkOG7o3QgMSwgbsSDbSAyMDIxICh2w6BvIG5nw6B5IDAyLzAzLzIwMjEpPGJyIC8+PC9zcGFuPjwvc3Bhbj48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDEycHQ7IGZvbnQtZmFtaWx5OiBUYWhvbWE7IGNvbG9yOiAjZmYwMDAwOyI+KyBLaMOzYSAyMCAobOG7m3AgREFONTIwMSkgPC9zdHJvbmc+PGJyIHN0eWxlPSJmb250LXNpemU6IDEycHQ7IGZvbnQtZmFtaWx5OiBUYWhvbWE7IiAvPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDEycHQ7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsgJm5ic3A7SOG7jWMga8OsIHRo4bupIDEgY+G7p2Ega2jDs2EgxJHDoG8gdOG6oW8gKMSRw6MgY8OzIGvhur90IHF14bqjIGjhu41jIHThuq1wIEhLIHThu6sgdGjDoW5nIDAxLzIwMjEpPGJyIC8+Jm5ic3A7ICZuYnNwO0jhu41jIGvDrCB0aOG7qSAyIGPhu6dhIGtow7NhIMSRw6BvIHThuqFvICjhu6luZyB24bubaSBISzEsIDIwMjAgLSAyMDIxKTxiciAvPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsiPiZuYnNwOyAmbmJzcDtI4buNYyBrw6wgdGjhu6kgMyBj4bunYSBraMOzYSDEkcOgbyB04bqhbyAo4bupbmcgduG7m2kgSEsyLCAyMDIwIC0gMjAyMSkmbmJzcDs8L3NwYW4+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogVGFob21hOyBmb250LXNpemU6IDE2cHg7Ij48c3BhbiBzdHlsZT0iY29sb3I6ICNmZjAwMDA7Ij4oTkVXOiDEkcOjIGPDsyBr4bq/dCBxdeG6oyBo4buNYyB04bqtcCBISyB04burIDExLzAxLzIwMjIpPC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyBmb250LWZhbWlseTogVGFob21hOyI+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+PGJyIC8+Jm5ic3A7ICZuYnNwO0jhu41jIGvDrSB0aOG7qSA0IGPhu6dhIGtow7NhIMSRw6BvIHThuqFvICjhu6luZyB24bubaSBISzEsIDIwMjEgLSAyMDIyKSZuYnNwOygxNS8wNy8yMDIxKSBTViB4ZW0gVEtCIEhLIHRo4bupIDQsIMSR4bujdCAxICho4buNYyB04burIDIyLzExLzIwMjEpPC9zcGFuPjwvc3Bhbj48L3NwYW4+PGRpdiBzdHls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" CorrelationBinding="{{FormPostParam35.__VIEWSTATE}}" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="CA0B0334" RecordedValue="CA0B0334" CorrelationBinding="{{FormPostParam36.__VIEWSTATEGENERATOR}}" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
    <Request Method="POST" Guid="72bdc832-1f29-4103-9745-a8320bd1cda1" Version="1.1" Url="http://thongtindaotao.sgu.edu.vn/default.aspx" ThinkTime="0" Timeout="300" ParseDependentRequests="True" FollowRedirects="True" RecordResult="True" Cache="False" ResponseTimeGoal="0" Encoding="utf-8" ExpectedHttpStatusCode="0" ExpectedResponseUrl="http://thongtindaotao.sgu.edu.vn/default.aspx?page=thaydoittcn" ReportingName="" IgnoreHttpStatusCode="False">
      <Headers>
        <Header Name="Referer" Value="http://thongtindaotao.sgu.edu.vn/default.aspx?page=gioithieu" />
      </Headers>
      <QueryStringParameters>
        <QueryStringParameter Name="page" Value="gioithieu" RecordedValue="gioithieu" CorrelationBinding="{{QueryStringParam48.page}}" UrlEncode="False" UseToGroupResults="False" />
      </QueryStringParameters>
      <FormPostHttpBody>
        <FormPostParameter Name="__EVENTTARGET" Value="ctl00$Header1$Logout1$lbtnChangePass" RecordedValue="ctl00$Header1$Logout1$lbtnChangePass" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__EVENTARGUMENT" Value="{{$HIDDEN1.__EVENTARGUMENT}}" RecordedValue="" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATE" Value="{{$HIDDEN1.__VIEWSTATE}}" RecordedValue="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aMOtbmggdGjhu6ljIGjGsOG7m25nIGThuqtuLCBnaeG6o2kgdGjDrWNoIHbhu4EgcXV5IGNo4bq/LCBxdXkgxJHhu4tuaC4gTuG6v3UgY8OybiBjaMawYSB0aOG7j2EgxJHDoW5nLCBTViDEkcSDbmcgbmjhuq1wIHbDoCBn4butaSDDvSBraeG6v24gdsOgbyBt4bulYyBHw7NwIMO9IGtp4bq/biDEkeG7gyBxdeG6o24gdHLhu4sgdmnDqm4gbuG6r20gdMOsbmggaMOsbmggY+G7pSB0aOG7gyBj4bunYSBTViDEkeG7gyBjw7MgdGjhu4Mga2nhu4NtIHRyYSwgZ2nhuqNpIHRow61jaCB2w6AgbuG6v3UgY+G6p24gaMaw4bubbmcgZOG6q24gY8OhY2ggeOG7rSBsw60ga+G7i3AgdGjhu51pLCDEkcO6bmcgxJHGoW4gduG7iyBjaOG7qWMgbsSDbmcgKHRyw6FuaCB04buTbiDEkeG7jW5nIGfDonkgcuG6r2MgcuG7kWkgduG7gSBzYXUpLiZuYnNwOzxiciAvPjxzdHJvbmc+KyBO4bq/dSBraMO0bmcgxJHEg25nIG5o4bqtcCDEkcaw4bujYyAodsOgbyB3ZWIgVGjDtG5nIHRpbiDEkcOgbyB04bqhbykgZG8gc2FpIG3huq10IGto4bqpdSDEkcSDbmcgbmjhuq1wPC9zdHJvbmc+LCBTViDEkeG6v24gdHLhu7FjIHRp4bq/cCBQLiDEkMOgbyB04bqhbyAoQy5DMDA3KSAoxJFlbSB0aGVvIHRo4bq7IFNWIMSR4buDIHjDoWMgdGjhu7FjKSZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyBjb2xvcjogI2ZmMDAwMDsiPihn4butaSBtYWlsIHbhu4EgcF9kYW90YW9Ac2d1LmVkdS52biwga8OobSB0aOG6uyBTVik8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwYTsiPi4gQ2jhu6ljIG7Eg25nIHThu7EgxJHhu5luZyBwaOG7pWMgaOG7k2kgbeG6rXQga2jhuql1IGLhurFuZyBlbWFpbCBj4bunYSB0cmFuZyB3ZWIgaGnhu4duIGtow7RuZyBob+G6oXQgxJHhu5luZyDEkcaw4bujYyAoZG8gZ2nhu5tpIGjhuqFuIGPhu6dhIGjhu5lwIHRoxrAgR29vZ2xlKS48L3NwYW4+PGJyIC8+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDBhOyI+KyDEkOG7gyBjw7Mgbmhp4buBdSBraMO0bmcgZ2lhbiBjaG8gcGjhuqduIGNow61uaCwgY8OhYyBjaGkgdGnhur90IMSRw6MgxJHEg25nIHPhur0gxJHGsOG7o2MgdHJ1eSBj4bqtcCDhu58gcGjhuqduIFhlbSBjaGkgdGnhur90ICjhu58gY3Xhu5FpIG3hu6VjIHRpbik8L3NwYW4+PGJyIC8+PGJyIC8+PHN0cm9uZz48c3BhbiBzdHlsZT0iY29sb3I6ICNmZjAwMDA7Ij4tLS0gVEjDlE5HIFRJTiBN4buaSSBOSOG6pFQgLS0tPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsiPjxiciAvPjwvc3Bhbj48L3N0cm9uZz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPjxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmMDAwMDsiPjxzdHJvbmc+KyBUaMO0bmcgYsOhbyDEkEtNSCBI4buNYyBr4buzIHBo4bulLCBuxINtIGjhu41jIDIwMjEgLSAyMDIyPC9zdHJvbmc+PGJyIC8+Jm5ic3A7ICZuYnNwOzxzdHJvbmc+KE5FVywgMDcvMDQvMjAyMik8L3N0cm9uZz4gVGjDtG5nIGLDoW8gxJHGsOG7o2MgZ+G7rWkgxJHhur9uIGPDoWMgS2hvYSB04burIDA3LzA0LzIwMjIgKDxhIGhyZWY9IlVwbG9hZC9maWxlL0hLMjEzX1RCNjQxX0RLTUgucGRmIj54ZW0gdGjDtG5nIGLDoW88L2E+KTxiciAvPjxzdHJvbmc+KyBI4buneSDEkEtNSCBISyBJSSwgMjAyMSAtIDIwMjIgxJHhu5FpIHbhu5tpIFNWIGLhu4sgdOG6oW0gZOG7q25nIGjhu41jLCBi4buLIGJ14buZYyB0aMO0aSBo4buNYyB2w6wga+G6v3QgcXXhuqMgxJBp4buDbSBy4bq7biBsdXnhu4duPC9zdHJvbmc+PGJyIC8+Jm5ic3A7ICZuYnNwOzxzdHJvbmc+KE5FVywgMDEvMDQvMjAyMikgPC9zdHJvbmc+Q8SDbiBj4bupIEvhur90IHF14bqjIHjDqXQgdOG6oW0gZOG7q25nLCBideG7mWMgdGjDtGkgaOG7jWMgdsOsIMSQUkwgKHNhdSBISyBJLCAyMDIxIC0gMjAyMikgKMSRw6MgxJHGsOG7o2MgdGjDtG5nIGLDoW8gxJHhur9uIGPDoWMgS2hvYS8gbmfDoG5oKSwgUGjDsm5nIMSQw6BvIHThuqFvIHRp4bq/biBow6BuaCBo4buneSDEkEtNSCBISyBr4bq/IChISyBJSSwgMjAyMSAtIDIwMjIpIGPDoWMgU1YgY8OzIHRyb25nIEvhur90IHF14bqjIHjDqXQuIFRo4budaSBraMOzYSBiaeG7g3UgdsOgIGjhu41jIHBow60gxJHGsOG7o2MgY+G6rXAgbmjhuq10IHThu6sgMTVnLCAwMS8wNC8yMDIyLiZuYnNwOzxiciAvPiZuYnNwOyAmbmJzcDtMxrB1IMO9IGPDsyAxNiBTViB04bqhbSBk4burbmcgKDxhIGhyZWY9IlVwbG9hZC9maWxlL0hLMjEyX1NWdGFtZHVuZ0RSTF9jb0RLTUgucGRmIj54ZW0gZGFuaCBzw6FjaDwvYT4pIHbDoCAxIFNWIEJUSCBjw7Mga+G6v3QgcXXhuqMgxJBLTUguPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmMDAwMDsiPiZuYnNwOyAmbmJzcDtTViBsacOqbiBo4buHIHbhu5tpIEtob2EgxJHhu4Mgbmjhuq1uIHF1eeG6v3QgxJHhu4tuaCB2w6AgbGnDqm4gaOG7hyB24bubaSBQaMOybmcgQ8O0bmcgdMOhYyBTViDEkeG7gyDEkcaw4bujYyBoxrDhu5tuZyBk4bqrbiBjw6FjIHbhuqVuIMSR4buBIGtow6FjICh2w60gZOG7pTogaOG7jWMgcGjDrSBISzIgbcOgIFNWIMSRw6MgxJHDs25nLCB0aOG7pyB04bulYyB2w6BvIGjhu41jIGzhuqFpIHNhdSBraGkgYuG7iyBideG7mWMgdOG6oW0gZOG7q25nLCAuLi4pLjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC13ZWlnaHQ6IGJvbGQ7IGNvbG9yOiAjMDAwMGZmOyI+KyBSw7p0IG3DtG4gaOG7jWMmbmJzcDsodOG7qyB0deG6p24gdGjhu6kgMyBj4bunYSBo4buNYyBrw6wpJm5ic3A7PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBjb2xvcjogIzAwMDBmZjsiPihTViB4ZW0gY2hpIHRp4bq/dCBzYXUgQsaw4bubYyA3IGPhu6dhIFF1eSB0csOsbmggxJBLTUgpPGJyIC8+PC9zcGFuPjxzdHJvbmcgc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgY29sb3I6ICNmZjAwMDA7Ij4tLS0tLS0tLS0tLS0tLTwvc3Ryb25nPjwvcD48cCBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij48c3Ryb25nPsSQxIJORyBLw50gTcOUTiBI4buMQyBI4buMQyBL4buyIElJLCBOxIJNIEjhu4xDIDIwMjEgLSAyMDIyPGJyIC8+PC9zdHJvbmc+PC9zcGFuPjxzdHJvbmcgc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPmTDoG5oIGNobyBTaW5oIHZpw6puIGNow61uaCBxdXkgdsOgIFNpbmggdmnDqm4gaOG7hyB24burYSBsw6BtIHbhu6thIGjhu41jIMSRw6BvIHThuqFvIHRoZW8gdMOtbiBjaOG7iTwvc3Ryb25nPjwvcD48cD48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsrIFNWIGNow7ogw70gdGjhu7FjIGhp4buHbiDEkeG7pyA3IGLGsOG7m2MgY+G7p2EgxJBLTUgsIHRoZW8gTOG7i2NoIMSQS01IIGPhu6dhIFRyxrDhu51uZywgc+G6vSBjw7MgY8OhYyBuaOG6r2Mgbmjhu58gY+G7pSB0aOG7gyDhu58gdOG7q25nIGLGsOG7m2MpPGJyIC8+PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+Jm5ic3A7KyBTViB4ZW0ga+G7uSA8c3Ryb25nPuKAnE5o4buvbmcgxJFp4buDbSBj4bqnbiBsxrB1IMO9IGtoaSDEkcSDbmcga8OtIG3DtG4gaOG7jWPigJ08L3N0cm9uZz4g4bufIHBo4bqnbiDigJxUaMO0bmcgdGluIGNodW5n4oCdIChjdeG7kWkgbcOgbiBow6xuaCBjaMOtbmgpPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsgPHN0cm9uZz5MxrB1IMO9IGPDoWMgcXV5IMSR4buLbmggduG7gSBtw6MgaOG7jWMgcGjhuqduIGPhu6dhIFFQLUFOIHbDoCBsw60gbHXhuq1uIGNow61uaCB0cuG7iyZuYnNwOzwvc3Ryb25nPih0csOtY2ggxJHEg25nKSAoeGVtIOG7nyBwaOG6p24gWGVtIGNoaSB0aeG6v3QpPC9zcGFuPjxiciAvPjwvcD48cD48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij48L3NwYW4+PC9zcGFuPjxzdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjAuIENodeG6qW4gYuG7izwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyB3aGl0ZS1zcGFjZTogcHJlOyBmb250LWZhbWlseTogVGFob21hOyI+CTwvc3Bhbj48YnIgLz48L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+KyZuYnNwO0jhu41jIGvDrCBJSSAtIDIwMjEtMjAyMiBi4bqvdCDEkeG6p3UgdOG7qyBuZ8OgeSAxNC8wMi8yMDIyPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3Ryb25nPisgVGjDtG5nIGLDoW8gxJDEg25nIGvDrSBtw7RuIGjhu41jJm5ic3A7PC9zdHJvbmc+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij7Ekcaw4bujYyB0aMO0bmcgdGluIMSR4bq/biBjw6FjIGtob2EvIG5nw6BuaCAodsOgIHThuqFpIHdlYiBQaMOybmcgxJDDoG8gdOG6oW8pPC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsoPC9zcGFuPjxhIGhyZWY9Imh0dHA6Ly90aG9uZ3RpbmRhb3Rhby5zZ3UuZWR1LnZuL1VwbG9hZC9maWxlL0hLMjEyX1RCX0RLTUgucGRmIiBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsgZm9udC1zaXplOiAxNnB4OyB0ZXh0LWRlY29yYXRpb24tbGluZTogbm9uZTsiPnhlbSB0aMO0bmcgYsOhbzwvYT48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+KTxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+PHN0cm9uZz4mbmJzcDsgQ2jGsMahbmcgdHLDrG5oIGNo4bqldCBsxrDhu6NuZyBjYW8gKG5nw6BuaCBDTlRUKSZuYnNwOzwvc3Ryb25nPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+ZG8gS2hvYSB2w6AgUGjDsm5nIMSQw6BvIHThuqFvIMSRxINuZyBrw70gY+G7kSDEkeG7i25oIHRoZW8gdGnhur9uIMSR4buZLiA8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiZuYnNwOyAtIFRoaSBraOG6o28gc8OhdCDEkeG6p3UgdsOgbyBUaeG6v25nIEFuaCBraMO0bmcgY2h1ecOqbiDEkeG7o3QgMSwgbsSDbSBo4buNYyAyMDIxIOKAkyAyMDIyIChuZ8OgeSAxMS8xMi8yMDIxKTxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+Jm5ic3A7IC0gS2nhu4NtIHRyYSBo4buNYyBwaMOtIEjhu41jIGvDrCBJICjEkeG7kWkgduG7m2kgU1YgbsSDbSB0aOG7qSBuaOG6pXQsIEtow7NhIDIxKTxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+PHNwYW4gc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoOyI+Jm5ic3A7Jm5ic3A7LSBEYW5oIHPDoWNoIFNWIMSRw6MgxJBLTUggbmjGsG5nIGtow7RuZyDEkcOzbmcgaOG7jWMgcGjDrSDhu58gSEsgdHLGsOG7m2M8L3NwYW4+Jm5ic3A7LSBU4bqhbSB0aOG7nWkga2jDtG5nIHjDqXQ8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDsiPiZuYnNwOyAtIERhbmggc8OhY2ggU1YgY2jGsGEgaG/DoG4gdOG6pXQgaOG7jWMgcGjDrSBI4buNYyBrw6wgSSwgMjAyMSDigJMgMjAyMiZuYnNwOzwvc3Bhbj4mbmJzcDstIFThuqFtIHRo4budaSBraMO0bmcgeMOpdCZuYnNwOzxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyBjb2xvcjogIzAwMDBmZjsiPjxzdHJvbmc+Jm5ic3A7ICZuYnNwOy0gRGFuaCBzw6FjaCBTViBraMO0bmcgY2jhuqVwIGjDoG5oIHZp4buHYyBu4buZcCBi4bqjbiBzYW8gYuG6sW5nIHThu5F0IG5naGnhu4dwIFRIUFQ8L3N0cm9uZz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiBUYWhvbWE7IGNvbG9yOiAjMDAwMGZmOyI+PGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsgJm5ic3A7LSBLaeG7g20gdHJhIHTDoGkga2hv4bqjbiB2w6AgbeG6rXQga2jhuql1PGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsgJm5ic3A7LSBD4bqtcCBuaOG6rXQgdMOsbmggdHLhuqFuZyBTViDEkeG7kWkgduG7m2kgU1YgdOG6oW0gZOG7q25nIHbDoG8gaOG7jWMgbOG6oWkg4bufIEhLIG3hu5tpPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4mbmJzcDsgJm5ic3A7LSBUaMO0bmcgYsOhbyDEkcOzbmcgaOG7jWMgcGjDrSAoY+G7p2EgUGjDsm5nIEvhur8gaG/huqFjaCAtIFTDoGkgY2jDrW5oKSAoeGVtIEzhu4tjaCDEkEtNSCAtIG3hu6VjIDUsIHBow61hIGTGsOG7m2kpPC9zcGFuPjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+Jm5ic3A7ICZuYnNwOy0gVOG6rXAgxJHEg25nIGvDrSBtw7RuIGjhu41jIGTDoG5oIGNobyBTViDEkeG6p3Uga2jDs2EmbmJzcDs8L3NwYW4+PGJyIC8+PC9wPjxwPjxzdHJvbmcgc3R5bGU9ImZvbnQtZmFtaWx5OiBUYWhvbWE7IGZvbnQtc2l6ZTogMTZweDsiPkzhu4pDSCDEkMSCTkcgS8ONIE3DlE4gSOG7jEMgSOG7jEMgS8OMIElJLCBOxIJNIEjhu4xDIDIwMjEgLSAyMDIyPGJyIC8+PC9zdHJvbmc+PHN0cm9uZyBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsgZm9udC1zaXplOiAxMnB0OyI+MS4gWGVtIFPhu5UgdGF5IMSQS01IICh2w6AgdGjDtG5nIHRpbiBuaMOzbSBs4bubcCkgKDAzLzEyLzIwMjEpPGJyIC8+PC9zdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Mi4gxJDEg25nIGvDrSBtw7RuIGjhu41jICjEkeG7o3QgY2jDrW5oKSZuYnNwOzwvc3Bhbj48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IHRleHQtZGVjb3JhdGlvbi1saW5lOiB1bmRlcmxpbmU7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4odOG7q25nIGtow7NhLCB0aGVvIGzhu4tjaCBUaMO0bmcgYsOhbyDEkEtNSCk8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij48c3Ryb25nPiZuYnNwOygwNi8xMiAtIDE0LzEyLzIwMjEpPGJyIC8+PC9zdHJvbmc+PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyBmb250LWZhbWlseTogVGFob21hOyI+KDA3LzEyLzIwMjEpIEx1aSB0aOG7nWkgZ2lhbiDEkEtNSCBkw6BuaCBjaG8gS2jDs2EgMjEgc2FuZyBuZ8OgeSZuYnNwOzE1IHbDoCAxNi8xMi8yMDIxLjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+KDE0LzEyLzIwMjEpIFjhu60gbMOtIGvhur90IHF14bqjIGvhu7MgdGhpIEto4bqjbyBzw6F0IFRp4bq/bmcgQW5oIMSR4bqndSB2w6BvIMSR4bujdCAxIG7Eg20gaOG7jWMgMjAyMSAtIDIwMjI8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJweDsgZm9udC1mYW1pbHk6IEFyaWFsOyI+PHNwYW4gc3R5bGU9ImZvbnQtd2VpZ2h0OiBib2xkOyBmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4zLiBYZW0gVGjDtG5nIGLDoW8gxJBLTUggYuG7lSBzdW5nIHbDoCBEYW5oIHPDoWNoIG5ow7NtIGzhu5twIGLhu4sgaOG7p3kgKGRvIHPhu5EgbMaw4bujbmcgxJBLIHF1w6Egw610KTwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+PHN0cm9uZz4mbmJzcDsoMTcvMTIvMjAyMSk8YnIgLz48L3N0cm9uZz48L3NwYW4+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsgJm5ic3A7Jm5ic3A7PC9zcGFuPjxzdHJvbmcgc3R5bGU9ImZvbnQtZmFtaWx5OiBUYWhvbWE7IGZvbnQtc2l6ZTogMTZweDsiPigxMmcsIDIwLzEyLzIwMjEpIFRow7RuZyBiw6FvIMSQS01IIGLhu5Ugc3VuZyB2w6AgRFMgbmjDs20gbOG7m3AgYuG7iyBo4buneSA8L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+KDwvc3Bhbj48YSBocmVmPSJVcGxvYWQvZmlsZS9ISzIxMl9UQkRLTUhfQlMucGRmIiBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsgZm9udC1zaXplOiAxNnB4OyI+eGVtIFRCIHbDoCBEUzwvYT48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+KTxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+Jm5ic3A7ICZuYnNwOyZuYnNwOzwvc3Bhbj48c3Ryb25nIHN0eWxlPSJmb250LWZhbWlseTogQXJpYWw7IGZvbnQtc2l6ZTogMTJweDsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij5D4bqtcCBuaOG6rXQgZOG7ryBsaeG7h3UmbmJzcDs8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPlRLQjwvc3Bhbj48L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+PHN0cm9uZz4mbmJzcDs8L3N0cm9uZz4odOG7qyAxNmczMCwgMjAvMTIvMjAyMSkgLSA8c3Ryb25nPkjhu41jIHBow60gPC9zdHJvbmc+Y8WpbmcgxJHGsOG7o2MgdMOtbmggdsOgIGPhuq1wIG5o4bqtdDxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LXdlaWdodDogYm9sZDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjQuIMSQxINuZyBrw60gbcO0biBo4buNYyAoxJHhu6N0IGLhu5Ugc3VuZykmbmJzcDs8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IHRleHQtZGVjb3JhdGlvbi1saW5lOiB1bmRlcmxpbmU7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4obOG7i2NoIMSRxINuZyBrw60gdGhlbyB04burbmcga2jDs2EpPC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3Ryb25nPiZuYnNwOygyMS8xMiAtIDI0LzEyLzIwMjEpPGJyIC8+PC9zdHJvbmc+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7IGNvbG9yOiAjMDAwMGZmOyI+PHN0cm9uZz4mbmJzcDsgKyBDw6FjIHRyxrDhu51uZyBo4bujcCDEkeG6t2MgYmnhu4d0IGLhuqNvIMSR4bqjbSB0aeG6v24gxJHhu5kgaOG7jWMgY8OhYyBtw7RuIGNodXnDqm4gbcO0biBj4bunYSBTViZuYnNwOzwvc3Ryb25nPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyBjb2xvcjogIzAwMDBmZjsiPih4ZW0g4bufIHBo4bqnbiBYZW0gY2hpIHRp4bq/dCk8YnIgLz48L3NwYW4+PHN0cm9uZyBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsgZm9udC1zaXplOiAxNnB4OyBjb2xvcjogIzAwMDBmZjsiPiZuYnNwOyArIEtoYWkgYsOhbyBo4buNYyBs4bqhaSBraMOhYyBtw6MgYmFuIMSR4bqndSA8L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyBjb2xvcjogIzAwMDBmZjsiPih4ZW0g4bufIHBo4bqnbiBYZW0gY2hpIHRp4bq/dCk8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsgY29sb3I6ICMwMDAwZmY7Ij48c3Ryb25nPiZuYnNwOyArIMSQxINuZyBrw60gZMaw4bubaSBz4buRIHTDrW4gY2jhu4kgcXV5IMSR4buLbmggKDE0IHTDrW4gY2jhu4kpJm5ic3A7PC9zdHJvbmc+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4oeGVtIOG7nyBwaOG6p24gWGVtIGNoaSB0aeG6v3QpPGJyIC8+PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+KDExZywgMjcvMTIvMjAyMSkgS+G6v3QgcXXhuqMgcsOgIHNvw6F0IGThu68gbGnhu4d1IMSQS01IIMSR4bujdCBi4buVIHN1bmcgKHhlbSDhu58gcGjhuqduIFhlbSBjaGkgdGnhur90KTxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+KDA5ZywgMTMvMDEvMjAyMikmbmJzcDs8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPkPhuq1wIG5o4bqtdCBUS0IgdsOgIGjhu41jIHBow60gxJHhu6N0IGN14buRaSBjaHXhuqluIGLhu4sgY2hvIMSR4bujdCDEkcOzbmcgaOG7jWMgcGjDrSBxdWEgbmfDom4gaMOgbmc8YnIgLz48L3NwYW4+PHN0cm9uZyBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsgZm9udC1zaXplOiAxNnB4OyI+NS4gxJDDs25nIGjhu41jIHBow60gKHRoZW8gdGjDtG5nIGLDoW8gY+G7p2EgUGjDsm5nIEvhur8gaG/huqFjaCAtIFTDoGkgY2jDrW5oKSAoY+G6rXAgbmjhuq10LCAxNy8wMSAtIDIxLzAxLzIwMjIpPGJyIC8+PC9zdHJvbmc+PHN0cm9uZyBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsgZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7Jm5ic3A7PC9zdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzdHJvbmc+KDMwLzEyLzIwMjEpIFRow7RuZyBiw6FvIEzhu4tjaCB0aHUgaOG7jWMgcGjDrSBISyBJSSwgMjAyMSAtIDIwMjI8L3N0cm9uZz4gKDxhIGhyZWY9IlVwbG9hZC9maWxlL0hLMjEyX1RCdGh1SFBfTlNQLnBkZiI+eGVtIHRow7RuZyBiw6FvPC9hPiksIMSR4buRaSB24bubaTo8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiZuYnNwOyAmbmJzcDsgJm5ic3A7KyBTViBuZ2/DoGkgc8awIHBo4bqhbSAodOG6pXQgY+G6oyBjw6FjIGtow7NhKTxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+Jm5ic3A7ICZuYnNwOyAmbmJzcDsrIFNWIHPGsCBwaOG6oW0gKGPDsyBo4buNYyBs4bqhaSkga2jDs2EgMjAgdHLhu58gduG7gSB0csaw4bubYyAoPC9zcGFuPjxzdHJvbmcgc3R5bGU9ImZvbnQtZmFtaWx5OiBUYWhvbWE7IGZvbnQtc2l6ZTogMTZweDsiPktow7NhIDIxIHPGsCBwaOG6oW0gc+G6vSBjw7MgdGjDtG5nIGLDoW8gc2F1PC9zdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPikuPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3Ryb25nPiZuYnNwOyAoMjYvMTIvMjAyMSk8L3N0cm9uZz4mbmJzcDs8c3Ryb25nPk5o4bqvYyBs4bqhaSB24buBJm5ic3A7PC9zdHJvbmc+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogVGFob21hOyI+PHNwYW4+PHN0cm9uZyBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+S2hhaSBiw6FvIGjhu41jIGzhuqFpIGtow6FjIG3DoyBiYW4gxJHhuqd1ICjEkeG6t2MgYmnhu4d0IHbhu5tpIFNWIHPGsCBwaOG6oW0pPC9zdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPjxzdHJvbmc+PGJyIC8+PC9zdHJvbmc+PC9zcGFuPjwvc3Bhbj48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij42LiBYZW0gRGFuaCBzw6FjaCBu4bujIGjhu41jIHBow60gKFBow7JuZyBL4bq/IGhv4bqhY2ggLSBUw6BpIGNow61uaCk8YnIgLz48L3N0cm9uZz48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij43LiBYZW0gVGjhu51pIGtow7NhIGJp4buDdSBjaMOtbmggdGjhu6ljICgyNy8wMS8yMDIyKTxiciAvPjwvc3Ryb25nPjxzdHJvbmcgc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwOyAmbmJzcDsgVOG7qyAxOGcsIDI1LzAxLzIwMjIsIHThuqV0IGPhuqMgU1YgbMawdSDDvSB0aGVvIGTDtWk6PGJyIC8+PC9zdHJvbmc+PHN0cm9uZyBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICsgQ+G6rXAgbmjhuq10ICJI4buNYyBwaMOtIMSRw6MgxJHDs25nIiZuYnNwOzwvc3Ryb25nPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij5zYXUgxJHhu6N0IMSRw7NuZyBo4buNYyBwaMOtIHF1YSBuZ8OibiBow6BuZzxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+PHN0cm9uZz4mbmJzcDsgKyBUaMO0bmcgYsOhbyBEYW5oIHPDoWNoIG7hu6MgaOG7jWMgcGjDrSAoY+G7p2EgUC4gS0hUQyk8YnIgLz48L3N0cm9uZz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwO0RTU1YgbuG7oyBo4buNYyBwaMOtIG5nb8OgaSBzxrAgcGjhuqFtICg8L3NwYW4+PGEgaHJlZj0iaHR0cDovL3Rob25ndGluZGFvdGFvLnNndS5lZHUudm4vVXBsb2FkL2ZpbGUvSEsyMTJfRFNTVl9ub2hvY3BoaV9uZ29haVNQLnBkZiIgc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPnhlbSBkYW5oIHPDoWNoPC9hPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4pOiBTViBz4bq9IGLhu4sgaOG7p3kgdOG6pXQgY+G6oyBr4bq/dCBxdeG6oyDEkEtNSDxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICZuYnNwOyAmbmJzcDsgJm5ic3A7RFNTViBu4bujIGjhu41jIHBow60gaOG7jWMgbOG6oWkgc8awIHBo4bqhbSAoPC9zcGFuPjxhIGhyZWY9Imh0dHA6Ly90aG9uZ3RpbmRhb3Rhby5zZ3UuZWR1LnZuL1VwbG9hZC9maWxlL0hLMjEyX0RTU1Zfbm9ob2NwaGlob2NsYWlfU1AucGRmIiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+eGVtIGRhbmggc8OhY2g8L2E+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPik6IFNWIHPhur0gYuG7iyBo4buneSB04bqldCBj4bqjIGvhur90IHF14bqjIMSQSyBo4buNYyBs4bqhaTxiciAvPjwvc3Bhbj48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsgKyBD4bqtcCBuaOG6rXQgVEtCJm5ic3A7PC9zdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPnNhdSBraGkgeOG7rSBsw60gaOG7p3kgxJBLIGPDoWMgU1YgbuG7oyBo4buNYyBwaMOtICg8L3NwYW4+PHN0cm9uZyBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Z2nhu68gbmd1ecOqbiB0aMO0bmcgdGluICJO4bujIGjhu41jIHBow60iPC9zdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwO8SR4buDIFNWIGJp4bq/dCk8YnIgLz48L3NwYW4+PHN0cm9uZyBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICsmbmJzcDs8L3N0cm9uZz48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij5UaeG6v3Agbmjhuq1uIHRo4bqvYyBt4bqvYyBob+G6t2MgecOqdSBj4bqndSAobuG6v3UgY8OzKSBj4bunYSBTViB24buBIGjhu41jIHBow60mbmJzcDs8L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+cXVhIG1haWwgcF9rZWhvYWNodGFpY2hpbmhAc2d1LmVkdS52bjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+Jm5ic3A7ICZuYnNwOyAmbmJzcDs8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiogxJDhu6N0IDEgxJHhur9uIDE1ZywgMjgvMDEvMjAyMjsgY+G6rXAgbmjhuq10IGvhur90IHF14bqjIHjhu60gbMOtIHThu6sgMTdnLCAyOC8wMS8yMDIyLjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICZuYnNwOyAmbmJzcDsqIMSQ4bujdCAyIChzYXUgdGjhu51pIGdpYW4gbmdo4buJIFThur90KSB04burIDA3LzAyIMSR4bq/biAxNWcsIDExLzAyLzIwMjI7IGPhuq1wIG5o4bqtdCBr4bq/dCBxdeG6oyB44butIGzDrSB04burIDE3ZywgMTEvMDIvMjAyMi48YnIgLz48L3NwYW4+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsgJm5ic3A7Jm5ic3A7PHN0cm9uZz4oPC9zdHJvbmc+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3Ryb25nPjE4ZywgMTEvMDIvMjAyMjwvc3Ryb25nPjwvc3Bhbj48c3Ryb25nIHN0eWxlPSJmb250LWZhbWlseTogVGFob21hOyBmb250LXNpemU6IDE2cHg7Ij4pJm5ic3A7PC9zdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzdHJvbmc+Q+G6rXAgbmjhuq10IFRLQiB2w6AgaOG7jWMgcGjDrSB0csaw4bubYyBraGkgYuG6r3QgxJHhuqd1IGjhu41jIGvDrDwvc3Ryb25nPjxzdHJvbmc+PGJyIC8+PC9zdHJvbmc+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsgJm5ic3A7ICZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNXB4OyB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7IGJhY2tncm91bmQtY29sb3I6ICNlNWVmZmY7IGZvbnQtZmFtaWx5OiAmcXVvdDtTZWdvZSBVSSZxdW90OywgU2Vnb2V1aVBjLCAmcXVvdDtTYW4gRnJhbmNpc2NvJnF1b3Q7LCAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywgSGVsdmV0aWNhLCAmcXVvdDtMdWNpZGEgR3JhbmRlJnF1b3Q7LCBSb2JvdG8sIFVidW50dSwgVGFob21hLCAmcXVvdDtNaWNyb3NvZnQgU2FucyBTZXJpZiZxdW90OywgQXJpYWwsIHNhbnMtc2VyaWY7Ij4rIEjhu41jIHBow60gdsOgIGvhur90IHF14bqjIMSQS01IOiBj4bqtcCBuaOG6rXQgKGLhu5Ugc3VuZyB2w6AgcGjhu6VjIGjhu5NpKSBr4bq/dCBxdeG6oyDEkEtNSCDEkcOjIMSRxrDhu6NjIHRp4bq/cCBuaOG6rW4gxJHhur9uIDE1ZywgMTEvMDIvMjAyMgo8L3NwYW4+PHNwYW4gc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNlNWVmZmY7IGZvbnQtc2l6ZTogMTVweDsgd2hpdGUtc3BhY2U6IHByZS13cmFwOyBmb250LWZhbWlseTogJnF1b3Q7U2Vnb2UgVUkmcXVvdDssIFNlZ29ldWlQYywgJnF1b3Q7U2FuIEZyYW5jaXNjbyZxdW90OywgJnF1b3Q7SGVsdmV0aWNhIE5ldWUmcXVvdDssIEhlbHZldGljYSwgJnF1b3Q7THVjaWRhIEdyYW5kZSZxdW90OywgUm9ib3RvLCBVYnVudHUsIFRhaG9tYSwgJnF1b3Q7TWljcm9zb2Z0IFNhbnMgU2VyaWYmcXVvdDssIEFyaWFsLCBzYW5zLXNlcmlmOyI+ICAgICAgKyBUaOG7nWkga2jDs2EgYmnhu4N1OiAKPC9zcGFuPjxzcGFuIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjZTVlZmZmOyBmb250LXNpemU6IDE1cHg7IHdoaXRlLXNwYWNlOiBwcmUtd3JhcDsgZm9udC1mYW1pbHk6ICZxdW90O1NlZ29lIFVJJnF1b3Q7LCBTZWdvZXVpUGMsICZxdW90O1NhbiBGcmFuY2lzY28mcXVvdDssICZxdW90O0hlbHZldGljYSBOZXVlJnF1b3Q7LCBIZWx2ZXRpY2EsICZxdW90O0x1Y2lkYSBHcmFuZGUmcXVvdDssIFJvYm90bywgVWJ1bnR1LCBUYWhvbWEsICZxdW90O01pY3Jvc29mdCBTYW5zIFNlcmlmJnF1b3Q7LCBBcmlhbCwgc2Fucy1zZXJpZjsiPiAgICAgICAgIDEpICjEkeG7lWkgR1YpIGPDoWMgbmjDs20gbOG7m3AgR0RRUCBsacOqbiBxdWFuIMSR4bq/biBHViBQaOG6oW0gVGhhbmggVsWpCjwvc3Bhbj48c3BhbiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI2U1ZWZmZjsgZm9udC1zaXplOiAxNXB4OyB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7IGZvbnQtZmFtaWx5OiAmcXVvdDtTZWdvZSBVSSZxdW90OywgU2Vnb2V1aVBjLCAmcXVvdDtTYW4gRnJhbmNpc2NvJnF1b3Q7LCAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywgSGVsdmV0aWNhLCAmcXVvdDtMdWNpZGEgR3JhbmRlJnF1b3Q7LCBSb2JvdG8sIFVidW50dSwgVGFob21hLCAmcXVvdDtNaWNyb3NvZnQgU2FucyBTZXJpZiZxdW90OywgQXJpYWwsIHNhbnMtc2VyaWY7Ij4gICAgICAgICAyKSAoxJFp4buBdSBjaOG7iW5oIG3DtG4gxJHEg25nIGvDrSkgTOG7m3AgRFFHMTIxeCAoU1YgbGnDqm4gaOG7hyB24bubaSBLaG9hIMSR4buDIGJp4bq/dCBjaGkgdGnhur90KQo8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiAmcXVvdDtTZWdvZSBVSSZxdW90OywgU2Vnb2V1aVBjLCAmcXVvdDtTYW4gRnJhbmNpc2NvJnF1b3Q7LCAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywgSGVsdmV0aWNhLCAmcXVvdDtMdWNpZGEgR3JhbmRlJnF1b3Q7LCBSb2JvdG8sIFVidW50dSwgVGFob21hLCAmcXVvdDtNaWNyb3NvZnQgU2FucyBTZXJpZiZxdW90OywgQXJpYWwsIHNhbnMtc2VyaWY7Ij48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNXB4OyB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7IGJhY2tncm91bmQtY29sb3I6ICNlNWVmZmY7Ij4gICAgICAgICAzKSAoxJFp4buBdSBjaHV54buDbiBwaMOybmcpIMSR4bq3YyBiaeG7h3QgY+G7p2EgY8OhYyBs4bubcCBLaG9hIENOVFQ7ICjEkWnhu4F1IGNo4buJbmggdGjhu51pIGtow7NhIGJp4buDdSkgbeG7mXQgc+G7kSBs4bubcCBDTEMgKENOVFQpCjwvc3Bhbj48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiZuYnNwOyAmbmJzcDsgUGjDsm5nIGjhu41jIMSRxrDhu6NjIHLDoCBzb8OhdCBs4bqnbiBjdeG7kWksJm5ic3A7PHN0cm9uZz504bqldCBj4bqjIFNWIGtp4buDbSB0cmEmbmJzcDs8L3N0cm9uZz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzdHJvbmc+VEtCIChk4bqhbmcgSEsgY8OhIG5ow6JuPHNwYW4gc3R5bGU9InRleHQtZGVjb3JhdGlvbi1saW5lOiB1bmRlcmxpbmU7Ij4pPC9zcGFuPjwvc3Ryb25nPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+PHN0cm9uZz4mbmJzcDt2w6AgbMawdSDDvSB24buBIHBow7JuZyBo4buNYzwvc3Ryb25nPi48YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiZuYnNwOyAmbmJzcDsgKFNWIHBo4bqjaSBYZW0gVEtCIGThuqFuZyAiVEtCIGjhu41jIGvhu7MgY8OhIG5ow6JuIiwga2jDtG5nIFhlbSAiVEJLIGThuqFuZyB0deG6p24iOyDEkeG7gyBTViB0aOG6pXkgdOG6pXQgY+G6oyBr4bq/dCBxdeG6oyDEkEsgxJHhurdjIGJp4buHdCB24bubaSBjw6FjIG5ow7NtIGzhu5twIGtow7RuZyBi4bqvdCDEkeG6p3UgaOG7jWMgdOG7qyBUdeG6p24gMSAtIDE0LzAyLzIwMjIgLSB2w6AgY8OhYyBuaMOzbSBs4bubcCBraMO0bmcgeOG6v3AgVEtCIG5oxrAgVGjhu7FjIHThur8sIC4uLikmbmJzcDs8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiZuYnNwOyAmbmJzcDsgU2F1IHRo4budaSDEkWnhu4NtIG7DoHksIG7hur91IFNWIHbhuqtuIGNoxrBhIGvhu4twIHBo4bqjbiBo4buTaSB0aOG6r2MgbeG6r2MgaG/hurdjIHnDqnUgY+G6p3UgduG7gSBo4buNYyBwaMOtIMSR4bq/biBQIEtIVEMgdGjDrCB0aeG6v3AgdOG7pWMgZ+G7rWkgdGhlbyBoxrDhu5tuZyBk4bqrbiDhu58gdHLDqm4gdsOgIHRoZW8gZMO1aSBr4bq/dCBxdeG6oyB44butIGzDrSB0cm9uZyBuZ8OgeSB0aOG7qSBoYWkgMTQvMDIvMjAyMi4mbmJzcDsoMTdnMzAsIDE0LzAyLzIwMjIpIEPhuq1wIG5o4bqtdCBUS0IgdsOgIGjhu41jIHBow60uJm5ic3A7PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4oMTdnLCAxOC8wMi8yMDIyKSBD4bqtcCBuaOG6rXQgVEtCIHbDoCBo4buNYyBwaMOtPC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4uPC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3Ryb25nPiZuYnNwOyAmbmJzcDs8YnIgLz48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4mbmJzcDsgJm5ic3A7ICgxOGcsIDI1LzAyLzIwMjIpIEPhuq1wIG5o4bqtdCBUS0IgdsOgIGjhu41jIHBow60gxJHhu6N0IGN14buRaSDEkeG7gyBwaMOhdCBow6BuaCBEUyBuaMOzbSBs4bubcCBjaMOtbmggdGjhu6ljPC9zcGFuPjwvc3Ryb25nPjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+Ljwvc3Bhbj48c3BhbiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI2U1ZWZmZjsgZm9udC1zaXplOiAxNXB4OyB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7IGZvbnQtZmFtaWx5OiAmcXVvdDtTZWdvZSBVSSZxdW90OywgU2Vnb2V1aVBjLCAmcXVvdDtTYW4gRnJhbmNpc2NvJnF1b3Q7LCAmcXVvdDtIZWx2ZXRpY2EgTmV1ZSZxdW90OywgSGVsdmV0aWNhLCAmcXVvdDtMdWNpZGEgR3JhbmRlJnF1b3Q7LCBSb2JvdG8sIFVidW50dSwgVGFob21hLCAmcXVvdDtNaWNyb3NvZnQgU2FucyBTZXJpZiZxdW90OywgQXJpYWwsIHNhbnMtc2VyaWY7Ij4gICAgPC9zcGFuPjwvc3Bhbj48L3A+PHA+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuPjxzdHJvbmc+KiDEkMSDbmcga8OtIGjhu41jIGzhuqFpLyBj4bqjaSB0aGnhu4duIHNhdSBraGkgY8OzIGvhur90IHF14bqjIGjhu41jIGvDrCAoc2F1IGvDrCB0aGkga+G6v3QgdGjDumMgaOG7jWMgcGjhuqduIGPhu6dhIEhLIHBo4bulKTxiciAvPjwvc3Ryb25nPjwvc3Bhbj48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiZuYnNwOyAmbmJzcDsqIFRo4budaSBnaWFuOiBU4burIDE0LzAyIMSR4bq/biAxNmcsIDE3LzAyLzIwMjIsIHF1YSBtYWlsIFBow7JuZyDEkMOgbyB04bqhby4gVGjDtG5nIHRpbiBj4bqtcCBuaOG6rXQgMThnLCAxNy8wMi8yMDIyLjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+Jm5ic3A7ICZuYnNwOyogxJDhu5FpIHTGsOG7o25nOiBTViBuxINtIGN14buRaSBjw7Mgbmh1IGPhuqd1IGjhu41jIGzhuqFpLyBj4bqjaSB0aGnhu4duIHbhu5tpIGjhu41jIHBo4bqnbiB24burYSBjw7MgxJFp4buDbSAoY+G7p2EgSEsgSSkgxJHhuqF0IMSRaeG7g20gRCBob+G6t2MgYuG7iyDEkWnhu4NtIEYuPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsgJm5ic3A7KiDEkMOzbmcgaOG7jWMgcGjDrTogbmfDoHkgMTgvMDIvMjAyMiAodHLhu7FjIHRp4bq/cCB04bqhaSBQLiBLSFRDIGhv4bq3YyBjaHV54buDbiBraG/huqNuKTxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij48c3Ryb25nPiogWOG7rSBsw60gdMawxqFuZyDEkcawxqFuZyBtw7RuIGjhu41jIChuaOG6r2MgxJHhu6N0IGN14buRaSBjaG8gU1Ygbmdvw6BpIHPGsCBwaOG6oW0pPGJyIC8+PC9zdHJvbmc+PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsgJm5ic3A7U1YgbuG7mXAgxJHGoW4gYsOhbyBjw6FvIMSRw6MgxJHEg25nIGvDrSBtw6MgaOG7jWMgcGjhuqduIGtow6FjIHbhu5tpIG3DoyBo4buNYyBwaOG6p24gcXV5IMSR4buLbmggY2hvIENUxJBUIChjaOG7pyB54bq/dSBkbyBTViBraMOzYSB0csaw4bubYyBo4buNYyBs4bqhaS8gaOG7jWMgY+G6o2kgdGhp4buHbi8gaOG7jWMgYsO5IHbhu5tpIEtow7NhIDIwIHRy4bufIMSRaSkgY2jhuq1tIG5o4bqldCBsw6AgdHJvbmcgdHXhuqduIHRo4bupIDMgY+G7p2EgSEsgKG7hu5lwIHRy4buxYyB0aeG6v3AgdOG6oWkgUGjDsm5nIMSQw6BvIHThuqFvIEMuQzAwNywgaG/hurdjIHF1YSBtYWlsIHBfZGFvdGFvQHNndS5lZHUudm4pLjwvc3Bhbj48L3NwYW4+PC9zcGFuPjwvcD48cD48c3BhbiBzdHlsZT0iY29sb3I6ICNmZjAwMDA7Ij48c3BhbiBzdHlsZT0iZm9udC13ZWlnaHQ6IGJvbGQ7IGZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiogUsO6dCBtw7RuIGjhu41jJm5ic3A7KHThu6sgdHXhuqduIHRo4bupIDMgY+G7p2EgaOG7jWMga8OsKTxiciAvPjwvc3Bhbj48L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjZmYwMDAwOyI+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiBUYWhvbWE7Ij48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICgxKSBTViBu4buZcCDEkcahbiBSw7p0IG3DtG4gaOG7jWMgdOG7qyBuZ8OgeSAyOC8wMi8yMDIyIMSR4bq/biBo4bq/dCBuZ8OgeSAwMS8wNC8yMDIyLCB04bqhaSBQaMOybmcgxJDDoG8gdOG6oW8gKEMuQzAwNyk8L3NwYW4+PGJyIC8+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsiPiZuYnNwOyAmbmJzcDs8L3NwYW4+PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyI+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpLCAmcXVvdDtzYW5zLXNlcmlmJnF1b3Q7OyI+Jm5ic3A7IDwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmksICZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Ij5O4buZaSBkdW5nIMSRxqFuOjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmksICZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Ij4mbmJzcDsgJm5ic3A7PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaSwgJnF1b3Q7c2Fucy1zZXJpZiZxdW90OzsiPiZuYnNwOwo8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpLCAmcXVvdDtzYW5zLXNlcmlmJnF1b3Q7OyI+KyBUaMO0bmcgdGluIFNWOiBNw6Mgc+G7kSBTViwgSOG7jSB0w6puIFNWLCBOZ8OgbmgsIEzhu5twPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaSwgJnF1b3Q7c2Fucy1zZXJpZiZxdW90OzsiPiZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmksICZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Ij4mbmJzcDsgJm5ic3A7Jm5ic3A7PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaSwgJnF1b3Q7c2Fucy1zZXJpZiZxdW90OzsiPisgQ8OhYyBo4buNYyBwaOG6p24geGluIHLDunQ6IE3DoyBIUCwgVMOqbiBIUCwgTcOjIG5ow7NtLCBT4buRIHTDrW4gY2jhu4kgKG3hu5dpIEhQIDEKZMOybmcpPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaSwgJnF1b3Q7c2Fucy1zZXJpZiZxdW90OzsiPiZuYnNwOyZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmksICZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Ij4mbmJzcDsgJm5ic3A7PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaSwgJnF1b3Q7c2Fucy1zZXJpZiZxdW90OzsiPisKVOG7lW5nIHPhu5EgdMOtbiBjaOG7iSBTViDEkcSDbmcga8O9IChjw7JuIGzhuqFpIHNhdSBraGkgcsO6dCBtw7RuIGjhu41jKSB0cm9uZyBo4buNYyBr4buzLjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmksICZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Ij4mbmJzcDsgJm5ic3A7ICZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmksICZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Ij4rIEzDvSBkbyB4aW4gcsO6dCBtw7RuIGjhu41jIChuw6p1IHLDtSBsw70gZG8pPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogQ2FsaWJyaSwgJnF1b3Q7c2Fucy1zZXJpZiZxdW90OzsiPiZuYnNwOyAmbmJzcDsgJm5ic3A7ICZuYnNwOyZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6IENhbGlicmksICZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Ij4oTuG6v3UgdsOsIGzhu5dpIGNo4bunIHF1YW4gY+G7p2EgU1YgdGjDrCBTViBwaOG6o2kKcsO6dCBraW5oIG5naGnhu4dtIGPhu6UgdGjhu4MgxJHhu4Mga2jDtG5nIHBo4bqhbSBs4buXaSDhu58gY8OhYyDEkeG7o3QgxJBLIHNhdSk8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpLCAmcXVvdDtzYW5zLXNlcmlmJnF1b3Q7OyI+Jm5ic3A7ICZuYnNwOyAmbmJzcDs8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiBDYWxpYnJpLCAmcXVvdDtzYW5zLXNlcmlmJnF1b3Q7OyI+KyDDnSBraeG6v24gKGPhu6UgdGjhu4MpIGPhu6dhIGPhu5EgduG6pW4gaOG7jWMgdOG6rXAuPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmMDAwMDsiPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogVGFob21hOyI+PGJyIC8+PC9zcGFuPjwvc3Bhbj48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsgY29sb3I6ICNmZjAwMDA7Ij4mbmJzcDsgKDIpIFNWIHRoZW8gZMO1aSBEYW5oIHPDoWNoIHNpbmggdmnDqm4geGluIHLDunQgbcO0biBo4buNYyDEkcOjIMSRxrDhu6NjIGdoaSBuaOG6rW4gdOG6oWkgd2ViIFBow7JuZyDEkMOgbyB04bqhbyDEkeG7gyBraeG7g20gdHJhIHRow7RuZyB0aW4uPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmMDAwMDsiPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogVGFob21hOyI+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwOyAoMykgU1Ygbmjhuq1uIFRow7RuZyBiw6FvIHLDunQgbcO0biBo4buNYyDEkeG7gyB0csOsbmggY2hvIEdp4bqjbmcgdmnDqm4gc2F1IG5nw6B5IDE1LzA0LzIwMjIgdOG6oWkmbmJzcDs8L3NwYW4+PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyBjb2xvcjogI2ZmMDAwMDsiPlAuIMSQw6BvIHThuqFvIChDLkMwMDcpJm5ic3A7PC9zcGFuPjwvcD48cCBzdHlsZT0iZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDgwMDA7Ij4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMC42NjY3cHg7IGNvbG9yOiAjMDAwMDBhOyI+Jm5ic3A7PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmMDAwMDsiPjxzdHJvbmcgc3R5bGU9ImNvbG9yOiAjMDAwMDBhOyI+Q8OBQyBUSMOUTkcgVElOIEtIw4FDPC9zdHJvbmc+PHN0cm9uZz48YnIgLz48L3N0cm9uZz48L3NwYW4+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4rIFLDunQgbcO0biBo4buNYyBISyBJLCAyMDIxIC0gMjAyMjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+PHN0cm9uZz4rIEvhu7MgdGhpIGvhur90IHRow7pjIGjhu41jIHBo4bqnbiBI4buNYyBrw6wgSSwgbsSDbSBo4buNYyAyMDIxLTIwMjI8L3N0cm9uZz48L3NwYW4+PGJyIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IiAvPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsgJm5ic3A7KDEwLzEyLzIwMjEpIFRow7RuZyBiw6FvIHThu5UgY2jhu6ljIHRoaSBr4bq/dCB0aMO6YyBo4buNYyBwaOG6p24gKDwvc3Bhbj48YSBocmVmPSJodHRwOi8vdGhvbmd0aW5kYW90YW8uc2d1LmVkdS52bi9VcGxvYWQvZmlsZS8yNTY4X1RCJTIwdiVFMSVCQiU4MSUyMHZpJUUxJUJCJTg3YyUyMHQlRTElQkIlOTUlMjBjaCVFMSVCQiVBOWMlMjB0aGklMjBrJUUxJUJBJUJGdCUyMHRoJUMzJUJBYyUyMEhQJTIwSCVFMSVCQiU4RGMlMjBrJUMzJUFDJTIwSSUyMG4lQzQlODNtJTIwaCVFMSVCQiU4RGMlMjAyMDIxLTIwMjIuLnBkZiIgc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPlRCIDI1NjgvVEItxJBIU0csIDEwLzEyLzIwMjE8L2E+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPik8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPjxzdHJvbmc+KyBL4bq/dCBxdeG6oyBo4buNYyB04bqtcCBo4buNYyBrw6wgSOG7jWMga8OsIEksIG7Eg20gaOG7jWMgMjAyMS0yMDIyPC9zdHJvbmc+PGJyIC8+Jm5ic3A7ICZuYnNwOzxzdHJvbmc+KiDEkGnhu4NtIHF1w6EgdHLDrG5oPC9zdHJvbmc+ICjEkFFUKSZuYnNwO8SRxrDhu6NjIHRow7RuZyB0aW4gdOG7qyAxNmcsIDExLzAxLzIwMjImbmJzcDsgJm5ic3A7Jm5ic3A7PGJyIC8+PHN0cm9uZz4mbmJzcDsgJm5ic3A7Jm5ic3A7PC9zdHJvbmc+QuG7lSBzdW5nIMSQUVQgbcO0biBHRCB0aOG7gyBjaOG6pXQgdsOgIGPhuq1wIG5o4bqtdCBjw6FjIMSRaeG7gXUgY2jhu4luaCB24buBIMSQUVQgKHRoZW8gdOG7nSB0csOsbmggdOG7qyBHVikgdOG7qyAyOS8wMS8yMDIyLjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICZuYnNwOzxzdHJvbmc+KiDEkGnhu4NtIHRoaSBr4bq/dCB0aMO6YyBo4buNYyBwaOG6p24gPC9zdHJvbmc+xJHGsOG7o2MgdGjDtG5nIHRpbiB04burIDhnLCAyOS8wMS8yMDIyPGJyIC8+Jm5ic3A7ICZuYnNwOyZuYnNwO8SQxrDhu6NjIGPhuq1wIG5o4bqtdCBob8OgbiBjaOG7iW5oIHThu6sgMTdnLCAwNy8wMi8yMDIyLiZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICZuYnNwOyAmbmJzcDs8YnIgLz48L3NwYW4+PHN0cm9uZyBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICZuYnNwOyA8L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+QuG7lSBzdW5nLyBj4bqtcCBuaOG6rXQga+G6v3QgcXXhuqMgaOG7jWMgdOG6rXAgaOG7jWMga+G7syB04burPC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDs8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPjE2ZywgMTEvMDIvMjAyMjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+PHN0cm9uZz5QaMO6YyBraOG6o28gxJFp4buDbSB0aGkga+G6v3QgdGjDumMgaOG7jWMgcGjhuqduPGJyIC8+PC9zdHJvbmc+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsgJm5ic3A7LSBUaOG7nWkgZ2lhbiBuaOG6rW4gxJHGoW4geGluIHBow7pjIGto4bqjbyB2w6AgY2h1eeG7g24ga2hv4bqjbiBs4buHIHBow606IHThu6sgMDgvMDIvMjAyMiDEkeG6v24gMTUvMDIvMjAyMi48YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPiZuYnNwOyAmbmJzcDstJm5ic3A7KDwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+MTBnLCAyOC8wMi8yMDIyKSZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBmb250LWZhbWlseTogVGFob21hOyI+S+G6v3QgcXXhuqMgcGjDumMga2jhuqNvIMSRw6MgxJHGsOG7o2MgdGjDtG5nIHRpbiDEkeG6v24gY8OhYyBraG9hLyBuZ8OgbmguJm5ic3A7PGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGNvbG9yOiAjMDAwMDBhOyI+LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTwvc3Bhbj48L3A+PHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBUYWhvbWE7IGZvbnQtc2l6ZTogMTAuNjY2N3B4OyI+PHNwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgY29sb3I6ICNmZjAwMDA7Ij48c3Ryb25nPlThu5RORyBL4bq+VCBI4buMQyBLw4wgSSwgTsSCTSBI4buMQyAyMDIxIC0gMjAyMjwvc3Ryb25nPjwvc3Bhbj48YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPjxzdHJvbmc+KyBC4bqjbmcgxJFp4buDbSB04buVbmcgaOG7o3AgaOG7jWMga8OsPGJyIC8+PC9zdHJvbmc+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsgJm5ic3A7IDE3ZywgMTYvMDIvMjAyMiwgUGjDoXQgaMOgbmggQuG6o25nIMSRaeG7g20gdOG7lW5nIGjhu6NwIGzhu5twIGjhu41jIGvhu7MgxJHhur9uIGPDoWMgS2hvYS8gbmfDoG5oPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGNvbG9yOiAjMDAwMGZmOyI+KyZuYnNwOzxzdHJvbmc+WMOpdCBj4bqlcCBjaOG7qW5nIGNo4buJIEdpw6FvIGThu6VjIFF14buRYyBwaMOybmcgdsOgIEFuIG5pbmg7IMSR4bqhdCBtw7RuIGjhu41jIEdpw6FvIGThu6VjIHRo4buDIGNo4bqldDwvc3Ryb25nPjxiciAvPiZuYnNwOyAmbmJzcDsgJm5ic3A7RFMgxJHGsOG7o2MgdGjDtG5nIHRpbiB04bqhaSB3ZWIgUGjDsm5nIMSQw6BvIHThuqFvIHNhdSBuZ8OgeSAwMS8wMy8yMDIyPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsmbmJzcDsoMTEvMDMvMjAyMikmbmJzcDtEUyBjaMOtbmggdGjhu6ljIMSRxrDhu6NjIHRow7RuZyB0aW4gdOG6oWkgd2ViIFBow7JuZyDEkMOgbyB04bqhby48YnIgLz4mbmJzcDsgJm5ic3A7IMSQ4bq3YyBiaeG7h3QsJm5ic3A7PHN0cm9uZz5TViBLaMOzYSAxOCZuYnNwOzwvc3Ryb25nPijEkcaw4bujYyB4w6l0IHNhdSBISyBJLCAyMDIxIC0gMjAyMiwgdOG7qWMgSEsgdGjhu6kgNyBj4bunYSBraMOzYSDEkcOgbyB04bqhbykgbMawdSDDvSBraeG7g20gdHJhIGvhur90IHF14bqjIHjDqXQgdsOsIMSRw6J5IGzDoCDEkWnhu4F1IGtp4buHbiDEkeG7gyBTViDEkcaw4bujYyB4w6l0IHThu5F0IG5naGnhu4dwIHRoZW8gdGnhur9uIMSR4buZIHNhdSBISyBJSSwgMjAyMSAtIDIwMjIuIFNWIHBo4bqjbiBo4buTaSB0aOG6r2MgbeG6r2MgKG7hur91IGPDsykgxJHhur9uIFBow7JuZyDEkMOgbyB04bqhbywmbmJzcDs8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPnRyxrDhu5tjIG5nw6B5IDI3LzAzLzIwMjIsJm5ic3A7PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij7EkeG7gyDEkcaw4bujYyB4w6l0IGLhu5Ugc3VuZyB2w6BvIGN14buRaSBISyBJSS48YnIgLz48L3NwYW4+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGNvbG9yOiAjMDAwMGZmOyI+KyZuYnNwOzwvc3Bhbj48c3Ryb25nIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsgZm9udC1zaXplOiAxNnB4OyI+WMOpdCBj4bqjbmggYsOhbyBr4bq/dCBxdeG6oyBo4buNYyB04bqtcCwgYnXhu5ljIHRow7RpIGjhu41jIMSR4bujdCAxIG7Eg20gMjAyMiZuYnNwOzwvc3Ryb25nPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGNvbG9yOiAjMDAwMGZmOyI+KHNhdSBISyBJLCDEkeG7o3QgeMOpdCBuZ8OgeSAwMS8wMy8yMDIyKTxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB4OyBjb2xvcjogIzAwMDBmZjsiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsgJm5ic3A7PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4oMjQvMDIvMjAyMik8c3Ryb25nPiZuYnNwOzwvc3Ryb25nPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+S+G6v3QgcXXhuqMgeMOpdCAoZOG7sSBraeG6v24pIMSRxrDhu6NjIHRow7RuZyB0aW4gxJHhur9uIGPDoWMga2hvYS8gbmfDoG5oLiBTViBsacOqbiBo4buHIHbhu5tpIGPhu5EgduG6pW4gaOG7jWMgdOG6rXAgxJHhu4MgYmnhur90IHRow7RuZyB0aW4uJm5ic3A7PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+U1YgcGjhuqNuIGjhu5NpIChu4bq/dSBjw7MpIHRow7RuZyBxdWEgS2hvYSB0csaw4bubYyAxMGcsIDI4LzAyLzIwMjIuPGJyIC8+PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBjb2xvcjogI2ZmMDAwMDsiPiZuYnNwOyAmbmJzcDs8L3NwYW4+PHN0cm9uZyBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBjb2xvcjogI2ZmMDAwMDsiPigxMC8wMy8yMDIyKSZuYnNwOzwvc3Ryb25nPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGNvbG9yOiAjZmYwMDAwOyI+RGFuaCBzw6FjaCBDQktRSFQsIEJUSCAoY2jDrW5oIHRo4bupYykgxJHGsOG7o2MgZ+G7rWkgxJHhur9uIHThu6tuZyBLaG9hLyBuZ8Ogbmg8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgY29sb3I6ICNmZjAwMDA7Ij4uPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGNvbG9yOiAjMDAwMGZmOyI+KyZuYnNwOzwvc3Bhbj48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGNvbG9yOiAjMDAwMGZmOyI+WMOpdCBideG7mWMgdGjDtGkgaOG7jWMgZG8gdsaw4bujdCBxdcOhIHRo4budaSBnaWFuIMSRw6BvIHThuqFvLCDEkeG7o3QgMSBuxINtIDIwMjImbmJzcDs8L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBjb2xvcjogIzAwMDBmZjsiPihzYXUgSEsgSSwgxJHhu6N0IHjDqXQgbmfDoHkgMDEvMDMvMjAyMik8YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJweDsgY29sb3I6ICMwMDAwZmY7Ij48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+Jm5ic3A7ICZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+KDI0LzAyLzIwMjIpPHN0cm9uZz4mbmJzcDs8L3N0cm9uZz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPkvhur90IHF14bqjIHjDqXQgKGThu7Ega2nhur9uKSDEkcaw4bujYyB0aMO0bmcgdGluIMSR4bq/biBjw6FjIGtob2EvIG5nw6BuaC4gU1YgbGnDqm4gaOG7hyB24bubaSBj4buRIHbhuqVuIGjhu41jIHThuq1wIMSR4buDIGJp4bq/dCB0aMO0bmcgdGluLiZuYnNwOzwvc3Bhbj48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgY29sb3I6ICMwMDAwZmY7Ij5TViBwaOG6o24gaOG7k2kgKG7hur91IGPDsykgdGjDtG5nIHF1YSBLaG9hIHRyxrDhu5tjIDE4ZywgMDMvMDMvMjAyMi48YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgY29sb3I6ICNmZjAwMDA7Ij4mbmJzcDsgJm5ic3A7PC9zcGFuPjxzdHJvbmcgc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgY29sb3I6ICNmZjAwMDA7Ij4oMTAvMDMvMjAyMikmbmJzcDs8L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyBjb2xvcjogI2ZmMDAwMDsiPkRhbmggc8OhY2ggQlRIIGRvIHbGsOG7o3QgcXXDoSB0aOG7nWkgZ2lhbiDEkcOgbyB04bqhbyAoY2jDrW5oIHRo4bupYykgxJHGsOG7o2MgZ+G7rWkgxJHhur9uIHThu6tuZyBLaG9hLyBuZ8Ogbmg8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgY29sb3I6ICNmZjAwMDA7Ij4uPC9zcGFuPjwvcD48cCBzdHlsZT0iY29sb3I6ICMwMDAwMGE7IGZvbnQtZmFtaWx5OiBUYWhvbWE7IGZvbnQtc2l6ZTogMTAuNjY2N3B4OyI+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPjxzdHJvbmcgc3R5bGU9ImNvbG9yOiAjZmYwMDAwOyI+LS0tLS0tLS0tLS0tLS0tLS0tLS0tLTxiciAvPljDiVQgQ8OUTkcgTkjhuqxOIFThu5BUIE5HSEnhu4ZQIE7Egk0gMjAyMjwvc3Ryb25nPjwvc3Bhbj48L3A+PHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBUYWhvbWE7IGZvbnQtc2l6ZTogMTAuNjY2N3B4OyI+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsgY29sb3I6ICMwMDAwMGE7Ij48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij5Dw6FjIHF1eSDEkeG7i25oIMOhcCBk4bulbmcgdOG7qyBuxINtIDIwMjEgdHLhu58gxJFpPGJyIC8+PHN0cm9uZz4rJm5ic3A7UXV5IMSR4buLbmggduG7gSB4w6l0IGPDtG5nIG5o4bqtbiB04buRdCBuZ2hp4buHcCBow6xuaCB0aOG7qWMgxJHDoG8gdOG6oW8gY2jDrW5oIHF1eTwvc3Ryb25nPjwvc3Bhbj48YnIgLz48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4oeGVtIHThuqFpIHdlYiBQaMOybmcgxJDDoG8gdOG6oW8sIG3hu6VjIFRyYSBj4bupdSB2xINuIGLhuqNuKSZuYnNwOzwvc3Bhbj48YnIgLz48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4mbmJzcDsgJm5ic3A7IC0gSOG7hyBjaMOtbmggcXV5ICZuYnNwOzwvc3Bhbj48YnIgLz48ZW0gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+Jm5ic3A7ICZuYnNwOyAoUXV5IMSR4buLbmggMjgwMC9RecSQLcSQSFNHLcSQVCB2L3YgeMOpdCBjw7RuZyBuaOG6rW4gdOG7kXQgbmdoaeG7h3AgxJHhu5FpIHbhu5tpIHRyw6xuaCDEkeG7mSDEkEgsIEPEkCB0aGVvIGjhu4cgdGjhu5FuZyB0w61uIGNo4buJKTxiciAvPjwvZW0+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+Jm5ic3A7ICZuYnNwOyAtIEjhu4cgbGnDqm4gdGjDtG5nIHbDoCBi4bqxbmcgxJHhuqFpIGjhu41jIHRo4bupIGhhaSZuYnNwOzwvc3Bhbj48YnIgLz48ZW0gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+Jm5ic3A7ICZuYnNwOyAoVGjDtG5nIGLDoW8gMjU0NS9UQi3EkEhTRyB24buBIHZp4buHYyB4w6l0IGPDtG5nIG5o4bqtbiB04buRdCBuZ2hp4buHcCBuxINtIDIwMTkgaOG7hyDEkeG6oWkgaOG7jWMgYuG6sW5nIHRo4bupIGhhaSB2w6AgaOG7hyBsacOqbiB0aMO0bmcsIGjDrG5oIHRo4bupYyBjaMOtbmggcXV5KTwvZW0+PGJyIC8+PHN0cm9uZyBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4rIFF1eSDEkeG7i25oIHbhu4EgeMOpdCBjw7RuZyBuaOG6rW4gdOG7kXQgbmdoaeG7h3AgaMOsbmggdGjhu6ljIMSRw6BvIHThuqFvIHbhu6thIGzDoG0gduG7q2EgaOG7jWMmbmJzcDs8L3N0cm9uZz48YnIgLz48c3BhbiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uLWxpbmU6IHVuZGVybGluZTsgY29sb3I6ICMwMDAwZmY7Ij4oYuG6r3QgxJHhuqd1IMOhcCBk4bulbmcgdOG7qyBuxINtIDIwMjApPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsiPiZuYnNwOzwvc3Bhbj48YnIgLz48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4oeGVtIHThuqFpIHdlYiBQaMOybmcgxJDDoG8gdOG6oW8sIG3hu6VjIFRyYSBj4bupdSB2xINuIGLhuqNuKTwvc3Bhbj48YnIgLz48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4mbmJzcDsgJm5ic3A7IC0mbmJzcDtI4buHIMSR4bqhaSBo4buNYyB24burYSBsw6BtIHbhu6thIGjhu41jPC9zcGFuPjxiciAvPjxlbSBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4mbmJzcDsgJm5ic3A7IChRdXkgxJHhu4tuaCAyNjk1L1F5xJAtxJBIU0csIDIxLzEwLzIwMTksIHbhu4Egdmnhu4djIHjDqXQgY8O0bmcgbmjhuq1uIHThu5F0IG5naGnhu4dwIMSR4buRaSB24bubaSB0csOsbmggxJHhu5kgxJHhuqFpIGjhu41jIGjDrG5oIHRo4bupYyB24burYSBsw6BtIHbhu6thIGjhu41jKTwvZW0+PGJyIC8+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+Jm5ic3A7ICZuYnNwOyAtIEjhu4cgbGnDqm4gdGjDtG5nIHThu6sgdHLDrG5oIMSR4buZIGNhbyDEkeG6s25nIGzDqm4gxJHhuqFpIGjhu41jIHbhu6thIGzDoG0gduG7q2EgaOG7jWM8L3NwYW4+PGJyIC8+PGVtIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsiPiZuYnNwOyAmbmJzcDsgKFRow7RuZyBiw6FvIDI2OTYvVEItxJBIU0csIDIxLzEwLzIwMTksIHbhu4Egdmnhu4djIHjDqXQgY8O0bmcgbmjhuq1uIHThu5F0IG5naGnhu4dwIMSR4buRaSB24bubaSBo4buHIGxpw6puIHRow7RuZyB04burIHRyw6xuaCDEkeG7mSBjYW8gxJHhurNuZyBsw6puIHRyw6xuaCDEkeG7mSDEkeG6oWkgaOG7jWMsIGjDrG5oIHRo4bupYyB24burYSBsw6BtIHbhu6thIGjhu41jKTxiciAvPjwvZW0+PC9zcGFuPjxzdHJvbmcgc3R5bGU9ImNvbG9yOiAjMDAwMDBhOyBmb250LXNpemU6IDE2cHg7Ij48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4rIENodeG6qW4gxJHhuqd1IHJhIG5nb+G6oWkgbmfhu68gdHJvbmcgeMOpdCBjw7RuZyBuaOG6rW4gdOG7kXQgbmdoaeG7h3AgKMOhcCBk4bulbmcgdOG7qyBuxINtIDIwMjEpPGJyIC8+PC9zcGFuPjwvc3Ryb25nPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4mbmJzcDsgJm5ic3A7IChUaMO0bmcgYsOhbyA1MzYvxJBIU0ctxJBULCAzMC8wMy8yMDIwOyB4ZW0gdOG6oWkgd2ViIFBow7JuZyDEkMOgbyB04bqhbywgbeG7pWMgVHJhIGPhu6l1IHbEg24gYuG6o24pPC9zcGFuPjxiciAvPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsiPjxzdHJvbmc+KyBDw6FjIMSR4bujdCB4w6l0IGPDtG5nIG5o4bqtbiB04buRdCBuZ2hp4buHcCBuxINtIDIwMjImbmJzcDs8L3N0cm9uZz48YnIgLz48L3NwYW4+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7IGNvbG9yOiAjMDAwMGZmOyI+Jm5ic3A7ICZuYnNwOzwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+Q8SDbiBj4bupIEJpw6puIGNo4bq/IG7Eg20gaOG7jWMgMjAyMS0yMDIyIChiYW4gaMOgbmggbmfDoHkgMDIvMDgvMjAyMSk8YnIgLz4mbmJzcDsgJm5ic3A7xJDhu6N0IDE6IG5nw6B5IDAxLzAzLzIwMjI7Jm5ic3A7xJDhu6N0IDI6IDI0LzA2LzIwMjI7Jm5ic3A7xJDhu6N0IDM6IDEyLzA3LzIwMjI7Jm5ic3A7xJDhu6N0IDQ6Jm5ic3A7MDYvMDkvMjAyMjxiciAvPi0tLS0tPGJyIC8+PC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4OyI+PHN0cm9uZz5Yw6l0IHThu5F0IG5naGnhu4dwIMSR4bujdCAxIG7Eg20gMjAyMjo8L3N0cm9uZz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwOyBOZ8OgeSB4w6l0OiAwMS8wMy8yMDIyPGJyIC8+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4mbmJzcDsgJm5ic3A7Tmjhuq1uIGjhu5Mgc8ahIEPEkFIgdsOgIMSRxqFuIHjDqXQgVE4gc+G7m20vIHRy4buFIGjhuqFuOiB04burIDE3LzAxIMSR4bq/biAyMi8wMi8yMDIyLjxiciAvPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB4OyI+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwOyAmbmJzcDs8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPigyNC8wMi8yMDIyKTwvc3Bhbj48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwO0vhur90IHF14bqjIHjDqXQgdOG7kXQgbmdoaeG7h3AgKGThu7Ega2nhur9uKSDEkcaw4bujYyBn4butaSDEkeG6v24gY8OhYyBraG9hLyBuZ8OgbmguIFNWIGxpw6puIGjhu4cgduG7m2kga2hvYS8gbmfDoG5oIMSR4buDIGJp4bq/dCBjaGkgdGnhur90IChEUyB04buRdCBuZ2hp4buHcCB2w6AgRFMgY2jGsGEgdOG7kXQgbmdoaeG7h3Aga8OobSBsw60gZG8gY2jGsGEgdOG7kXQgbmdoaeG7h3ApLiBTViBwaOG6o24gaOG7k2kgKG7hur91IGPDsykgdGjDtG5nIHF1YSBLaG9hIHRyxrDhu5tjIDEwZywgMjgvMDIvMjAyMi48YnIgLz48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwOyAoMTEvMDMvMjAyMik8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPiZuYnNwO0Rhbmggc8OhY2ggxJHGsOG7o2MgY8O0bmcgbmjhuq1uIHThu5F0IG5naGnhu4dwIGNow61uaCB0aOG7qWMgxJHhu6N0IDEgbsSDbSAyMDIyIMSRxrDhu6NjIMSRxINuZyB04bqhaSB3ZWIgUGjDsm5nIMSQw6BvIHThuqFvICg8L3NwYW4+PGEgaHJlZj0iaHR0cDovL3Rob25ndGluZGFvdGFvLnNndS5lZHUudm4vVXBsb2FkL2ZpbGUvSEsyMTFfRFNTVl9Ub3ROZ2hpZXBfRG90MS5yYXIiIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij504bqjaSBkYW5oIHPDoWNoPC9hPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDE2cHg7Ij4pLiZuYnNwO1NWIGPDsyBuaHUgY+G6p3UgY+G6pXAgR2nhuqV5IGNo4bupbmcgbmjhuq1uIHThu5F0IG5naGnhu4dwIHThuqFtIHRo4budaSwgbGnDqm4gaOG7hyB24bubaSBQaMOybmcgxJDDoG8gdOG6oW8gKMSR4bq/biB0cuG7sWMgdGnhur9wIHBow7JuZyBDLkMwMDggaG/hurdjIGfhu61pIG1haWwgcF9kYW90YW9Ac2d1LmVkdS52bikuPC9zcGFuPjwvcD48cCBzdHlsZT0iY29sb3I6ICMwMDAwMGE7IGZvbnQtZmFtaWx5OiBUYWhvbWE7IGZvbnQtc2l6ZTogMTAuNjY2N3B4OyI+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTZweDsiPi0tLS0tLS0tLS0tLS0tLS0tLS0tIFhlbSBjaGkgdGnhur90IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSZndDs8L3NwYW4+PC9wPjwvc3Bhbj48ZGl2IHN0eWxlPSd0ZXh0LWFsaWduOnJpZ2h0JyA+PGRpdiBjbGFzcz0nQ2hpVGlldCc+PGltZyBzcmM9J0FwcF9UaGVtZXMvU3RhbmRhcmQvSW1hZ2VzL2Fycm93X3IuZ2lmJyBhbHQ9JycvPiA8YSBjbGFzcz0nVGV4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cjogIzAwODAwMDsiPjxzdHJvbmcgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPisgS2jDs2EgMTcgKGzhu5twIERBTjUxNzEgKTwvc3Ryb25nPjxiciBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyBmb250LWZhbWlseTogVGFob21hOyIgLz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyBmb250LWZhbWlseTogVGFob21hOyI+Jm5ic3A7ICZuYnNwOzwvc3Bhbj48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDEycHQ7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij5Yw6l0IHThu5F0IG5naGnhu4dwIMSRw7puZyB0aeG6v24gxJHhu5k8L3N0cm9uZz48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyBmb250LWZhbWlseTogVGFob21hOyI+IHbDoG8gxJDhu6N0IDEsIE7Eg20gMjAyMCAoMjUvMDIvMjAyMCkuJm5ic3A7PC9zcGFuPjwvc3Bhbj48ZW0gc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsgZm9udC1mYW1pbHk6IFRhaG9tYTsgY29sb3I6ICMwMDAwZmY7Ij48YnIgLz48L2VtPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwODAwMDsiPjxzdHJvbmcgc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPisgS2jDs2EgMTggKGzhu5twIERBTjUxODEpPC9zdHJvbmc+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJwdDsgZm9udC1mYW1pbHk6IFRhaG9tYTsiPjxiciAvPiZuYnNwOyAmbmJzcDtYw6l0IHThu5F0IG5naGnhu4dwIMSRw7puZyB0aeG6v24gxJHhu5kgdsOgbyDEkOG7o3QgMSwgbsSDbSAyMDIxICh2w6BvIG5nw6B5IDAyLzAzLzIwMjEpPGJyIC8+PC9zcGFuPjwvc3Bhbj48c3Ryb25nIHN0eWxlPSJmb250LXNpemU6IDEycHQ7IGZvbnQtZmFtaWx5OiBUYWhvbWE7IGNvbG9yOiAjZmYwMDAwOyI+KyBLaMOzYSAyMCAobOG7m3AgREFONTIwMSkgPC9zdHJvbmc+PGJyIHN0eWxlPSJmb250LXNpemU6IDEycHQ7IGZvbnQtZmFtaWx5OiBUYWhvbWE7IiAvPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDEycHQ7IGZvbnQtZmFtaWx5OiBUYWhvbWE7Ij4mbmJzcDsgJm5ic3A7SOG7jWMga8OsIHRo4bupIDEgY+G7p2Ega2jDs2EgxJHDoG8gdOG6oW8gKMSRw6MgY8OzIGvhur90IHF14bqjIGjhu41jIHThuq1wIEhLIHThu6sgdGjDoW5nIDAxLzIwMjEpPGJyIC8+Jm5ic3A7ICZuYnNwO0jhu41jIGvDrCB0aOG7qSAyIGPhu6dhIGtow7NhIMSRw6BvIHThuqFvICjhu6luZyB24bubaSBISzEsIDIwMjAgLSAyMDIxKTxiciAvPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsiPiZuYnNwOyAmbmJzcDtI4buNYyBrw6wgdGjhu6kgMyBj4bunYSBraMOzYSDEkcOgbyB04bqhbyAo4bupbmcgduG7m2kgSEsyLCAyMDIwIC0gMjAyMSkmbmJzcDs8L3NwYW4+PC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTogVGFob21hOyBmb250LXNpemU6IDE2cHg7Ij48c3BhbiBzdHlsZT0iY29sb3I6ICNmZjAwMDA7Ij4oTkVXOiDEkcOjIGPDsyBr4bq/dCBxdeG6oyBo4buNYyB04bqtcCBISyB04burIDExLzAxLzIwMjIpPC9zcGFuPjwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB0OyBmb250LWZhbWlseTogVGFob21hOyI+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+PGJyIC8+Jm5ic3A7ICZuYnNwO0jhu41jIGvDrSB0aOG7qSA0IGPhu6dhIGtow7NhIMSRw6BvIHThuqFvICjhu6luZyB24bubaSBISzEsIDIwMjEgLSAyMDIyKSZuYnNwOygxNS8wNy8yMDIxKSBTViB4ZW0gVEtCIEhLIHRo4bupIDQsIMSR4bujdCAxICho4buNYyB04burIDIyLzExLzIwMjEpPC9zcGFuPjwvc3Bhbj48L3NwYW4+PGRpdiBzdHls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" CorrelationBinding="" UrlEncode="True" />
        <FormPostParameter Name="__VIEWSTATEGENERATOR" Value="{{$HIDDEN1.__VIEWSTATEGENERATOR}}" RecordedValue="CA0B0334" CorrelationBinding="" UrlEncode="True" />
      </FormPostHttpBody>
    </Request>
  </Items>
  <ValidationRules>
    <ValidationRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateResponseUrl, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" DisplayName="Response URL" Description="Validates that the response URL after redirects are followed is the same as the recorded response URL.  QueryString parameters are ignored." Level="Low" ExectuionOrder="BeforeDependents" />
    <ValidationRule Classname="Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleResponseTimeGoal, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" DisplayName="Response Time Goal" Description="Validates that the response time for the request is less than or equal to the response time goal as specified on the request.  Response time goals of zero will be ignored." Level="Low" ExectuionOrder="AfterDependents">
      <RuleParameters>
        <RuleParameter Name="Tolerance" Value="0" />
      </RuleParameters>
    </ValidationRule>
  </ValidationRules>
</WebTest>">
      <Execution id="873c8821-6fd4-4a53-88b5-d67e5dc7b6ea" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="3f720212-d7d8-4838-8a95-c7bdc4cbb1ef" executionId="873c8821-6fd4-4a53-88b5-d67e5dc7b6ea" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="873c8821-6fd4-4a53-88b5-d67e5dc7b6ea" testId="3f720212-d7d8-4838-8a95-c7bdc4cbb1ef" testName="WebTest1" computerName="LAPTOP-A3HHO4HD" duration="00:00:32.8453695" startTime="2022-04-12T13:48:14.1834061+07:00" endTime="2022-04-12T13:48:57.6696733+07:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="873c8821-6fd4-4a53-88b5-d67e5dc7b6ea">
      <Output>
        <ErrorInfo>
          <Message>10 primary requests, 0 dependant requests and 0 conditional rules failed</Message>
        </ErrorInfo>
      </Output>
      <ResultFiles>
        <ResultFile path="WebTest1.webtestResult" />
      </ResultFiles>
      <TestSettings name="Local" id="a8e0cb6a-baa9-45ff-8db4-a9edfcb72e0f">
        <Description>These are default test settings for a local test run.</Description>
        <Execution hostProcessPlatform="MSIL">
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="Nghia_LAPTOP-A3HHO4HD 2022-04-12 13_48_13" />
        <Properties>
          <Property name="TestSettingsUIType" value="LoadTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>Nghia_LAPTOP-A3HHO4HD 2022-04-12 13_48_13\In\873c8821-6fd4-4a53-88b5-d67e5dc7b6ea\WebTest1.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>